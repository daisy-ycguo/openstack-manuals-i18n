<?xml version="1.0" encoding="UTF-8"?>
<section xml:id="install-keystone"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
  <title>Installing and Configuring the Identity Service</title>
  <para>Install the Identity service on any server that is accessible
    to the other servers you intend to use for OpenStack services, as
    root:</para>
  <screen os="ubuntu;deb"><prompt>#</prompt> <userinput>apt-get install keystone</userinput></screen>
  <screen os="rhel;centos;fedora"><prompt>$</prompt> <userinput>yum install openstack-utils openstack-keystone</userinput> </screen>
  <para>After installing, you need to delete the sqlite database it
    creates, then change the configuration to point to a MySQL
    database. This configuration enables easier scaling scenarios
    since you can bring up multiple Keystone front ends when needed,
    and configure them all to point back to the same database. Plus a
    database backend has built-in data replication features and
    documentation surrounding high availability and data redundancy
    configurations.</para>
  <para>Delete the <filename>keystone.db</filename> file created in
    the <filename>/var/lib/keystone</filename>
    directory.<screen><prompt>#</prompt> <userinput>rm /var/lib/keystone/keystone.db</userinput></screen></para>
  <para>Configure the production-ready backend data store rather than
    using the catalog supplied by default for the ability to backup
    the service and endpoint data. This example shows MySQL.</para>
  <para>Install MySQL as
  root:</para>
  <screen os="ubuntu;deb"><prompt>#</prompt> <userinput>apt-get install python-mysqldb mysql-server</userinput></screen>
  <screen os="rhel;fedora;centos"><prompt>$</prompt> <userinput>yum install mysql mysql-server</userinput>
  </screen>
  <para>During the install, you'll be prompted for the mysql root
    password. Enter a password of your choice and verify it.</para>
  <para os="ubuntu">Use <command>sed</command> to edit
      <filename>/etc/mysql/my.cnf</filename> to change
      <literal>bind-address</literal> from localhost (127.0.0.1) to
    any (0.0.0.0) and restart the mysql service, as root. </para>
  <para>
    <screen os="ubuntu"><prompt>#</prompt> <userinput>sed -i 's/127.0.0.1/0.0.0.0/g' /etc/mysql/my.cnf</userinput>
<prompt>#</prompt> <userinput>service mysql restart</userinput></screen>   
  </para>
  <para os="rhel;centos;fedora">Set MySQL to start the daemon every time you start and then start the server.
  <screen>
    <prompt>#</prompt> <userinput>chkconfig --level 2345 mysqld on</userinput>
    <prompt>#</prompt> <userinput>service mysqld start</userinput></screen></para>
  <para>The following sequence of commands will create a MySQL
    database named "keystone" and a MySQL user named "keystone" with
    full access to the "keystone" MySQL database.</para>
  <para>On Fedora, RHEL, and CentOS, you can configure the Keystone
    database with the <command>openstack-db</command>
    command.<screen os="rhel;centos;fedora"><prompt>$></prompt> <userinput>sudo openstack-db --init --service keystone</userinput> </screen></para>
  <para>To manually create the database, start the <command>mysql</command> command line client by
    running:</para>
  <screen><prompt>$</prompt> <userinput>mysql -u root -p</userinput></screen>
  <para>Enter the mysql root user's password when prompted.</para>
  <para>To configure the MySQL database, create the keystone
    database.</para>
  <screen><prompt>mysql&gt;</prompt> <userinput>CREATE DATABASE keystone;</userinput></screen>
  <para>Create a MySQL user for the newly-created keystone database
    that has full control of the keystone database.</para>
  <note>
    <title>Note</title>
    <para>Choose a secure password for the keystone user and replace
      all references to
        <replaceable>[YOUR_KEYSTONE_PASSWORD]</replaceable> with this
      password.</para>
  </note>
  <screen><prompt>mysql&gt;</prompt> <userinput>GRANT ALL ON keystone.* TO 'keystone'@'%' IDENTIFIED BY '<replaceable>[YOUR_KEYSTONE_PASSWORD]</replaceable>';</userinput></screen>
  <para>Enter quit at the <literal>mysql></literal> prompt to exit
    MySQL.</para>
  <screen><prompt>mysql&gt;</prompt> <userinput>quit</userinput></screen>
  <note>
    <title>Reminder</title>
    <para>Recall that this document assumes the Cloud Controller node
      has an IP address of <literal>192.168.206.130</literal>.</para>
  </note>
  <para>Once Keystone is installed, it is configured via a primary
    configuration file
      (<filename>/etc/keystone/keystone.conf</filename>), and by
    initializing data into keystone using the command line client. By
    default, Keystone's data store is sqlite. To change the data store
    to mysql, change the line defining "connection" in
      <filename>/etc/keystone/keystone.conf</filename> like so:</para>
  <programlisting>connection = mysql://keystone:<replaceable>[YOUR_KEYSTONE_PASSWORD]</replaceable>@192.168.206.130/keystone</programlisting>
  <para>Also, ensure that the proper service token is used in the
    <filename>keystone.conf</filename> file. An example is provided in the Appendix or you can generate a random string. The sample token is:</para>
  <programlisting>admin_token = 012345SECRET99TOKEN012345</programlisting>
  <screen os="rhel;centos;fedora"><prompt>$</prompt> <userinput>export ADMIN_TOKEN=$(openssl rand -hex 10)</userinput>
  <prompt>$</prompt> <userinput>sudo openstack-config --set /etc/keystone/keystone.conf DEFAULT admin_token $ADMIN_TOKEN</userinput></screen>
  <para>Next, restart the keystone service so that it picks up the new
    database configuration.</para>
  <screen os="ubuntu"><prompt>#</prompt> <userinput>sudo service keystone restart</userinput></screen>
  <screen os="rhel;fedora;centos"><prompt>$</prompt> <userinput>sudo service keystone start &amp;&amp; sudo chkconfig keystone on</userinput></screen>
  <para>Lastly, initialize the new keystone database, as root:</para>
  <screen><prompt>#</prompt> <userinput>keystone-manage db_sync</userinput></screen>
  <section xml:id="configure-keystone">
    <title>Configuring Services to work with Keystone</title>
    <para> Once Keystone is installed and running, you set up users
      and tenants and services to be configured to work with it. </para>
    <section xml:id="setting-up-tenants-users-and-roles">
      <title>Setting up tenants, users, and roles</title>
      <para>You need to minimally define a tenant, user, and role to
        link the tenant and user as the most basic set of details to
        get other services authenticating and authorizing with the
        Identity service. </para>
      <para>Scripted configuration:</para>
      <para>On Fedora, RHEL, and Centos, you can run this script to
        populate with sample data.</para>
      <screen os="rhel;centos;fedora"><prompt>$</prompt> <userinput>sudo ADMIN_PASSWORD=$OS_PASSWORD SERVICE_PASSWORD=servicepass openstack-keystone-sample-data</userinput></screen>
      <para>The Keystone project offers a bash script for populating
        tenants, users, and roles at
        <link xlink:href="https://github.com/openstack/keystone/blob/master/tools/sample_data.sh">https://github.com/openstack/keystone/blob/master/tools/sample_data.sh</link>
        with sample data </para>
      <para>On any distribution with python tools, you can run this keystone-init script that automates the steps below that use the keystone client API.</para>
      <screen><prompt>$</prompt> <userinput>git clone https://github.com/nimbis/keystone-init.git</userinput></screen>
      <para>You'll need <link xlink:href="http://pyyaml.org/wiki/PyYAML">PyYAML</link> installed to use this script. Look at
        the script that does the work: <link
          xlink:href="https://github.com/nimbis/keystone-init/blob/master/keystone-init.py"
          >https://github.com/nimbis/keystone-init/blob/master/keystone-init.py</link>. </para>
      <para>Edit the accompanying configuration file the script uses:
          <link
          xlink:href="https://github.com/nimbis/keystone-init/blob/master/config.yaml"
          >https://github.com/nimbis/keystone-init/blob/master/config.yaml</link> with the IP address 
          of your servers. You can substitute quickly using this command in the directory where config.yaml is stored:</para>
      <screen><prompt>$</prompt> <userinput>sed -i.bak s/192.168.206.130/172.16.150.12/g config.yaml</userinput></screen>
        <para>Then run the modified script as
        root:<screen><prompt>#</prompt> <userinput>./keystone-init.py config.yaml</userinput></screen></para>
      <para>Manual configuration:</para>
      <para>Here are the manual, unscripted steps. First, create a default tenant, we'll name it
          <literal>openstackDemo</literal> in this example.</para>
      <screen><prompt>$ </prompt><userinput>keystone --token 012345SECRET99TOKEN012345 --endpoint http://192.168.206.130:35357/v2.0 tenant-create --name openstackDemo --description "Default Tenant" --enabled true</userinput></screen>
      <programlisting>      +-------------+----------------------------------+
      |   Property  |              Value               |
      +-------------+----------------------------------+
      | description | Default Tenant                   |
      | enabled     | true                             |
      | id          | b5815b046cfe47bb891a7b64119e7f80 |
      | name        | openstackDemo                    |
      +-------------+----------------------------------+</programlisting>
      <para>Create a default user named <literal>adminUser</literal>. </para>
      <screen><prompt>$</prompt><userinput>keystone --token 012345SECRET99TOKEN012345 --endpoint http://192.168.206.130:35357/v2.0 user-create --tenant_id b5815b046cfe47bb891a7b64119e7f80 --name adminUser --pass secretword --enabled true</userinput></screen>
      <programlisting>      +----------+-------------------------------------------------------------------------------------------------------------------------+
      | Property |                                                          Value                                                          |
      +----------+-------------------------------------------------------------------------------------------------------------------------+
      | email    | None                                                                                                                    |
      | enabled  | true                                                                                                                    |
      | id       | a4c2d43f80a549a19864c89d759bb3fe                                                                                        |
      | name     | admin                                                                                                                   |
      | password | $6$rounds=40000$MsFWIgIfbAHnhUH8$vvSK9/Uy3P5BTdH0kn.0MH.xFHAR2pWQCpTRLTENPs.3w53jb5BbbkIKHnkTbzWW3xVwqsb3W5e./3EIaNPeP0 |
      | tenantId | b5815b046cfe47bb891a7b64119e7f80                                                                                        |
      +----------+-------------------------------------------------------------------------------------------------------------------------+</programlisting>
      <para>Create the default roles, <literal>admin</literal> and
          <literal>memberRole</literal>.</para>
      <screen><prompt>$</prompt><userinput>keystone --token 012345SECRET99TOKEN012345 --endpoint http://192.168.206.130:35357/v2.0 role-create --name admin</userinput></screen>
      <programlisting>      +----------+----------------------------------+
      | Property |              Value               |
      +----------+----------------------------------+
      | id       | e3d9d157cc95410ea45d23bbbc2e5c10 |
      | name     | admin                            |
      +----------+----------------------------------+</programlisting>
      <screen><prompt>$</prompt><userinput>keystone --token 012345SECRET99TOKEN012345 --endpoint http://192.168.206.130:35357/v2.0 role-create --name memberRole</userinput></screen>
      <programlisting>      +----------+----------------------------------+
      | Property |              Value               |
      +----------+----------------------------------+
      | id       | cffc2edea9c74b4a8779cc0d7a22fc21 |
      | name     | memberRole                       |
      +----------+----------------------------------+</programlisting>
      <para>Grant the <literal>admin</literal> role to the
          <literal>adminUser</literal> user in the
          <literal>openstackDemo</literal> tenant with
        "user-role-add".</para>
      <screen><prompt>$</prompt><userinput>keystone --token 012345SECRET99TOKEN012345 --endpoint http://192.168.206.130:35357/v2.0 user-role-add --user a4c2d43f80a549a19864c89d759bb3fe --tenant_id b5815b046cfe47bb891a7b64119e7f80 --role e3d9d157cc95410ea45d23bbbc2e5c10</userinput></screen>
      <para>There is no output to this command.</para>
      <para>Create a Service Tenant. This tenant contains all the
        services that we make known to the service catalog. </para>
      <screen><prompt>$</prompt><userinput>keystone --token 012345SECRET99TOKEN012345 --endpoint http://192.168.206.130:35357/v2.0 tenant-create --name service --description "Service Tenant" --enabled true</userinput></screen>
      <programlisting>      +-------------+----------------------------------+
      |   Property  |              Value               |
      +-------------+----------------------------------+
      | description | Service Tenant                   |
      | enabled     | true                             |
      | id          | eb7e0c10a99446cfa14c244374549e9d |
      | name        | service                          |
      +-------------+----------------------------------+</programlisting>
      <para>Create a Glance Service User in the Service Tenant. You'll
        do this for any service you add to be in the Keystone service
        catalog.</para>
      <screen><prompt>$</prompt><userinput>keystone --token 012345SECRET99TOKEN012345 --endpoint http://192.168.206.130:35357/v2.0 user-create --tenant_id eb7e0c10a99446cfa14c244374549e9d --name glance --pass glance --enabled true</userinput></screen>
      <programlisting>      +----------+-------------------------------------------------------------------------------------------------------------------------+
      | Property |                                                          Value                                                          |
      +----------+-------------------------------------------------------------------------------------------------------------------------+
      | email    | None                                                                                                                    |
      | enabled  | true                                                                                                                    |
      | id       | 46b2667a7807483d983e0b4037a1623b                                                                                        |
      | name     | glance                                                                                                                  |
      | password | $6$rounds=40000$kf1ENaCoy7wOfRjx$LKQtsQbBqSBr2ZH7fwToAut0EYYz6M278N16Xg4Va2vTEOFabvTVXCdCP4hA5ikdCQO8Mh1nJvuFMEvGHaht3/ |
      | tenantId | eb7e0c10a99446cfa14c244374549e9d                                                                                        |
      +----------+-------------------------------------------------------------------------------------------------------------------------+</programlisting>
      <para>Grant the <literal>admin</literal> role to the
          <literal>glance</literal> user in the
          <literal>service</literal> tenant.</para>
      <screen><prompt>$</prompt><userinput>keystone --token 012345SECRET99TOKEN012345 --endpoint http://192.168.206.130:35357/v2.0 user-role-add --user 46b2667a7807483d983e0b4037a1623b --tenant_id eb7e0c10a99446cfa14c244374549e9d --role e3d9d157cc95410ea45d23bbbc2e5c10</userinput></screen>
      <para>There is no output to this command. </para>
      <para>Create a Nova Service User in the Service Tenant. </para>
      <screen><prompt>$</prompt><userinput>keystone --token 012345SECRET99TOKEN012345 --endpoint http://192.168.206.130:35357/v2.0 user-create --tenant_id eb7e0c10a99446cfa14c244374549e9d --name nova --pass nova --enabled true</userinput></screen>
      <programlisting>      +----------+-------------------------------------------------------------------------------------------------------------------------+
      | Property |                                                          Value                                                          |
      +----------+-------------------------------------------------------------------------------------------------------------------------+
      | email    | None                                                                                                                    |
      | enabled  | true                                                                                                                    |
      | id       | 54b3776a8707834d983e0b4037b1345c                                                                                        |
      | name     | nova                                                                                                                    |
      | password | $6$rounds=40000$kf1ENaCoy7wOfRjx$LKQtsQbBqSBr2ZH7fwToAut0EYYz6M278N16Xg4Va2vTEOFabvTVXCdCP4hA5ikdCQO8Mh1nJvuFMEvGHaht3/ |
      | tenantId | eb7e0c10a99446cfa14c244374549e9d                                                                                        |
      +----------+-------------------------------------------------------------------------------------------------------------------------+</programlisting>
      <para>Grant the <literal>admin</literal> role to the
          <literal>nova</literal> user in the
          <literal>service</literal> tenant.</para>
      <screen><prompt>$</prompt><userinput>keystone --token 012345SECRET99TOKEN012345 --endpoint http://192.168.206.130:35357/v2.0 user-role-add --user 54b3776a8707834d983e0b4037b1345c --tenant_id eb7e0c10a99446cfa14c244374549e9d --role e3d9d157cc95410ea45d23bbbc2e5c10</userinput></screen>
      <para>There is no output to this command. </para>
      <para>Create an EC2 Service User in the Service Tenant. </para>
      <screen><prompt>$</prompt><userinput>keystone --token 012345SECRET99TOKEN012345 --endpoint http://192.168.206.130:35357/v2.0 user-create --tenant_id eb7e0c10a99446cfa14c244374549e9d --name ec2 --pass ec2 --enabled true</userinput></screen>
      <programlisting>      +----------+-------------------------------------------------------------------------------------------------------------------------+
      | Property |                                                          Value                                                          |
      +----------+-------------------------------------------------------------------------------------------------------------------------+
      | email    | None                                                                                                                    |
      | enabled  | true                                                                                                                    |
      | id       | 32e7668b8707834d983e0b4037b1345c                                                                                        |
      | name     | ec2                                                                                                                     |
      | password | $6$rounds=40000$kf1ENaCoy7wOfRjx$LKQtsQbBqSBr2ZH7fwToAut0EYYz6M278N16Xg4Va2vTEOFabvTVXCdCP4hA5ikdCQO8Mh1nJvuFMEvGHaht3/ |
      | tenantId | eb7e0c10a99446cfa14c244374549e9d                                                                                        |
      +----------+-------------------------------------------------------------------------------------------------------------------------+</programlisting>
      <para>Grant the <literal>admin</literal> role to the
          <literal>ec2</literal> user in the
          <literal>service</literal> tenant.</para>
      <screen><prompt>$</prompt><userinput>keystone --token 012345SECRET99TOKEN012345 --endpoint http://192.168.206.130:35357/v2.0 user-role-add --user 32e7668b8707834d983e0b4037b1345c --tenant_id eb7e0c10a99446cfa14c244374549e9d --role e3d9d157cc95410ea45d23bbbc2e5c10</userinput></screen>
      <para>There is no output to this command.</para>
      <para>Create an Object Storage Service User in the Service
        Tenant. </para>
      <screen><prompt>$</prompt><userinput>keystone --token 012345SECRET99TOKEN012345 --endpoint http://192.168.206.130:35357/v2.0 user-create --tenant_id eb7e0c10a99446cfa14c244374549e9d --name swift --pass swiftpass --enabled true</userinput></screen>
      <programlisting>      +----------+-------------------------------------------------------------------------------------------------------------------------+
      | Property |                                                          Value                                                          |
      +----------+-------------------------------------------------------------------------------------------------------------------------+
      | email    | None                                                                                                                    |
      | enabled  | true                                                                                                                    |
      | id       | 4346677b8909823e389f0b4037b1246e                                                                                        |
      | name     | swift                                                                                                                   |
      | password | $6$rounds=40000$kf1ENaCoy7wOfRjx$LKQtsQbBqSBr2ZH7fwToAut0EYYz6M278N16Xg4Va2vTEOFabvTVXCdCP4hA5ikdCQO8Mh1nJvuFMEvGHaht3/ |
      | tenantId | eb7e0c10a99446cfa14c244374549e9d                                                                                        |
      +----------+-------------------------------------------------------------------------------------------------------------------------+</programlisting>
      <para>Grant the <literal>admin</literal> role to the
          <literal>swift</literal> user in the
          <literal>service</literal> tenant.</para>
      <screen><prompt>$</prompt><userinput>keystone --token 012345SECRET99TOKEN012345 --endpoint http://192.168.206.130:35357/v2.0 user-role-add --user 4346677b8909823e389f0b4037b1246e --tenant_id eb7e0c10a99446cfa14c244374549e9d --role e3d9d157cc95410ea45d23bbbc2e5c10</userinput></screen>
      <para>There is no output to this command.</para>
      <para>Next you create definitions for the services.</para>
    </section>
  </section>
  <section xml:id="defining-services">
    <title>Defining Services</title>
    <para>Keystone also acts as a service catalog to let other
      OpenStack systems know where relevant API endpoints exist for
      OpenStack Services. The OpenStack Dashboard, in particular, uses
      the service catalog heavily - and this <emphasis role="strong">
        must</emphasis> be configured for the OpenStack Dashboard to
      properly function.</para>
    <para>There are two alternative ways of defining services with
      keystone: <orderedlist>
        <listitem>
          <para>Using a template file</para>
        </listitem>
        <listitem>
          <para>Using a database backend</para>
        </listitem>
      </orderedlist> While using a template file is simpler, it is not
      recommended except for development environments such as <link
        xlink:href="http://www.devstack.org">DevStack</link>. The
      template file does not enable CRUD operations on the service
      catalog through keystone commands, but you can use the
      service-list command when using the template catalog. A database
      backend can provide better reliability, availability, and data
      redundancy. This section describes how to populate the Keystone
      service catalog using the database backend. Your
        <filename>/etc/keystone/keystone.conf</filename> file should
      contain the following lines if it is properly configured to use
      the database backend.</para>
    <programlisting>
[catalog]
driver = keystone.catalog.backends.sql.Catalog
      </programlisting>
    <section xml:id="elements-of-keystone-service-catalog-entry">
      <title>Elements of a Keystone service catalog entry</title>
      <para>For each service in the catalog, you must perform two
        keystone operations: <orderedlist>
          <listitem>
            <para>Use the <command>keystone service-create</command>
              command to create a database entry for the service, with
              the following attributes: <variablelist>
                <varlistentry>
                  <term><literal>--name</literal></term>
                  <listitem>
                    <para>Name of the service (e.g.,
                        <literal>nova</literal>,
                        <literal>ec2</literal>,
                        <literal>glance</literal>,
                        <literal>keystone</literal>)</para>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term><literal>--type</literal></term>
                  <listitem>
                    <para>Type of service (e.g.,
                        <literal>compute</literal>,
                        <literal>ec2</literal>,
                        <literal>image</literal>,
                        <literal>identity</literal>)</para>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term><literal>--description</literal></term>
                  <listitem>
                    <para>A description of the service, (e.g.,
                        <literal>"Nova Compute
                      Service"</literal>)</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </para>
          </listitem>
          <listitem>
            <para>Use the <command>keystone endpoint-create</command>
              command to create a database entry that describes how
              different types of clients can connect to the service,
              with the following attributes:</para>
            <variablelist>
              <varlistentry>
                <term><literal>--region</literal></term>
                <listitem>
                  <para>the region name you've given to the OpenStack
                    cloud you are deploying (e.g., RegionOne)</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><literal>--service_id</literal></term>
                <listitem>
                  <para>The ID field returned by the <command>keystone
                      service-create</command> (e.g.,
                      <literal>935fd37b6fa74b2f9fba6d907fa95825</literal>)</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><literal>--publicurl</literal></term>
                <listitem>
                  <para>The URL of the public-facing endpoint for the
                    service (e.g.,
                      <literal>http://192.168.206.130:9292/v1</literal>
                    or
                      <literal>http://192.168.206.130:8774/v2/%(tenant_id)s</literal>)
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><literal>--internalurl</literal></term>
                <listitem>
                  <para>The URL of an internal-facing endpoint for the
                    service.</para>
                  <para>This typically has the same value as
                      <literal>publicurl</literal>.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><literal>--adminurl</literal></term>
                <listitem>
                  <para>The URL for the admin endpoint for the
                    service. The Keystone and EC2 services use
                    different endpoints for
                      <literal>adminurl</literal> and
                      <literal>publicurl</literal>, but for other
                    services these endpoints will be the same.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </orderedlist>
      </para>
      <para> Keystone allows some URLs to contain special variables,
        which are automatically substituted with the correct value at
        runtime. Some examples in this document employ the
          <literal>tenant_id</literal> variable, which we use when
        specifying the Volume and Compute service endpoints. Variables
        can be specified using either
            <literal>%(<replaceable>varname</replaceable>)s</literal>
        or <literal>$(<replaceable>varname</replaceable>)s</literal>
        notation. In this document, we always use the
            <literal>%(<replaceable>varname</replaceable>)s</literal>
        notation (e.g., <literal>%(tenant_id)s</literal>) since
          <literal>$</literal> is interpeted as a special character by
        Unix shells. </para>
    </section>
    <section xml:id="keystone-service-endpoint-create">
      <title>Creating keystone services and service endpoints</title>
      <para>Here we define the services and their endpoints.</para>
      <para>Define the Identity service:</para>
      <screen>
<prompt>$</prompt> <userinput>keystone --token 012345SECRET99TOKEN012345 \
 --endpoint http://192.168.206.130:35357/v2.0/ \
 service-create \
 --name=keystone \
 --type=identity \
 --description=&quot;Keystone Identity Service&quot;
</userinput>
<computeroutput>+-------------+----------------------------------+
|   Property  |              Value               |
+-------------+----------------------------------+
| description | Keystone Identity Service        |
| id          | 15c11a23667e427e91bc31335b45f4bd |
| name        | keystone                         |
| type        | identity                         |
+-------------+----------------------------------+</computeroutput>
<prompt>$</prompt> <userinput>keystone --token 012345SECRET99TOKEN012345 \
 --endpoint http://192.168.206.130:35357/v2.0/ \
 endpoint-create \
 --region RegionOne \
 --service_id=15c11a23667e427e91bc31335b45f4bd \
 --publicurl=http://192.168.206.130:5000/v2.0 \
 --internalurl=http://192.168.206.130:5000/v2.0 \
 --adminurl=http://192.168.206.130:35357/v2.0</userinput>
<computeroutput>+-------------+-----------------------------------+
|   Property  |             Value                 |
+-------------+-----------------------------------+
| adminurl    | http://192.168.206.130:35357/v2.0 |
| id          | 11f9c625a3b94a3f8e66bf4e5de2679f  |
| internalurl | http://192.168.206.130:5000/v2.0  |
| publicurl   | http://192.168.206.130:5000/v2.0  |
| region      | RegionOne                         |
| service_id  | 15c11a23667e427e91bc31335b45f4bd  |
+-------------+-----------------------------------+
</computeroutput>
</screen>
      <para>Define the Compute service, which requires a separate
        endpoint for each tenant. Here we use the
          <literal>service</literal> tenant from the previous section. <note>
          <para>The <literal>%(tenant_id)s</literal> and single quotes
            around the <literal>publicurl</literal>,
              <literal>internalurl</literal>, and
              <literal>adminurl</literal> must be typed exactly as
            shown for both the Compute endpoint and the Volume
            endpoint.</para>
        </note></para>
      <screen>
<prompt>$</prompt> <userinput>keystone --token 012345SECRET99TOKEN012345 \
--endpoint http://192.168.206.130:35357/v2.0/ \
service-create \
 --name=nova \
 --type=compute \
 --description=&quot;Nova Compute Service&quot;</userinput>
<computeroutput>+-------------+----------------------------------+
|   Property  |              Value               |
+-------------+----------------------------------+
| description | Nova Compute Service             |
| id          | abc0f03c02904c24abdcc3b7910e2eed |
| name        | nova                             |
| type        | compute                          |
+-------------+----------------------------------+
</computeroutput> 
<prompt>$</prompt> <userinput>keystone --token 012345SECRET99TOKEN012345 \
--endpoint http://192.168.206.130:35357/v2.0/ \
endpoint-create \
 --region RegionOne \
 --service_id=abc0f03c02904c24abdcc3b7910e2eed \
 --publicurl='http://192.168.206.130:8774/v2/%(tenant_id)s' \
 --internalurl='http://192.168.206.130:8774/v2/%(tenant_id)s' \
 --adminurl='http://192.168.206.130:8774/v2/%(tenant_id)s'</userinput>
<computeroutput>+-------------+----------------------------------------------+
|   Property  |                               Value          |
+-------------+----------------------------------------------+
| adminurl    | http://192.168.206.130:8774/v2/%(tenant_id)s |
| id          | 935fd37b6fa74b2f9fba6d907fa95825             |
| internalurl | http://192.168.206.130:8774/v2/%(tenant_id)s |
| publicurl   | http://192.168.206.130:8774/v2/%(tenant_id)s |
| region      | RegionOne                                    |
| service_id  | abc0f03c02904c24abdcc3b7910e2eed             |
+-------------+----------------------------------------------+
</computeroutput>
</screen>
      <para>Define the Volume service, which also requires a separate
        endpoint for each tenant.</para>
      <screen>
<prompt>$</prompt> <userinput>keystone --token 012345SECRET99TOKEN012345 \
 --endpoint http://192.168.206.130:35357/v2.0/ \
service-create \
 --name=volume \
 --type=volume \
 --description=&quot;Nova Volume Service&quot;
</userinput>
<computeroutput>
+-------------+----------------------------------+
|   Property  |              Value               |
+-------------+----------------------------------+
| description | Nova Volume Service              |
| id          | 1ff4ece13c3e48d8a6461faebd9cd38f |
| name        | volume                           |
| type        | volume                           |
+-------------+----------------------------------+
</computeroutput>
<prompt>$</prompt> <userinput>keystone --token 012345SECRET99TOKEN012345 \
 --endpoint http://192.168.206.130:35357/v2.0/ \
 endpoint-create \
 --region RegionOne \
 --service_id=1ff4ece13c3e48d8a6461faebd9cd38f \
 --publicurl='http://192.168.206.130:8776/v1/%(tenant_id)s' \
 --internalurl='http://192.168.206.130:8776/v1/%(tenant_id)s' \
 --adminurl='http://192.168.206.130:8776/v1/%(tenant_id)s' 
</userinput>
<computeroutput>
+-------------+----------------------------------------------+
|   Property  |                   Value                      |
+-------------+----------------------------------------------+
| adminurl    | http://192.168.206.130:8776/v1/%(tenant_id)s |
| id          | 1ff4ece13c3e48d8a6461faebd9cd38f             |
| internalurl | http://192.168.206.130:8776/v1/%(tenant_id)s |
| publicurl   | http://192.168.206.130:8776/v1/%(tenant_id)s |
| region      | RegionOne                                    |
| service_id  | 8a70cd235c7d4a05b43b2dffb9942cc0             |
+-------------+----------------------------------------------+
</computeroutput>
</screen>
      <para>Define the Image service:</para>
      <screen>
<prompt>$</prompt> <userinput>keystone --token 012345SECRET99TOKEN012345 \
 --endpoint http://192.168.206.130:35357/v2.0/ \
 service-create \
 --name=glance \
 --type=image \
 --description="Glance Image Service"
</userinput>
<computeroutput>
+-------------+----------------------------------+
|   Property  |              Value               |
+-------------+----------------------------------+
| description | Glance Image Service             |
| id          | 7d5258c490144c8c92505267785327c1 |
| name        | glance                           |
| type        | image                            |
+-------------+----------------------------------+
</computeroutput>
<prompt>$</prompt> <userinput>keystone --token 012345SECRET99TOKEN012345 \
 --endpoint http://192.168.206.130:35357/v2.0/ \
 endpoint-create \
 --region RegionOne \
 --service_id=7d5258c490144c8c92505267785327c1 \
 --publicurl=http://192.168.206.130:9292/v1 \
 --internalurl=http://192.168.206.130:9292/v1 \
 --adminurl=http://192.168.206.130:9292/v1
</userinput>
<computeroutput>
+-------------+-----------------------------------+
|   Property  |             Value                 |
+-------------+-----------------------------------+
| adminurl    | http://192.168.206.130:9292/v1    |
| id          | 3c8c0d749f21490b90163bfaed9befe7  |
| internalurl | http://192.168.206.130:9292/v1    |
| publicurl   | http://192.168.206.130:9292/v1    |
| region      | RegionOne                         |
| service_id  | 7d5258c490144c8c92505267785327c1  |
+-------------+-----------------------------------+
</computeroutput>
</screen>
      <para>Define the EC2 compatibility service:</para>
      <screen>
<prompt>$</prompt> <userinput>keystone  --token 012345SECRET99TOKEN012345 \
 --endpoint http://192.168.206.130:35357/v2.0/ \
 service-create \
 --name=ec2 \
 --type=ec2 \
 --description=&quot;EC2 Compatibility Layer&quot;</userinput>
<computeroutput>+-------------+----------------------------------+
|   Property  |              Value               |
+-------------+----------------------------------+
| description | EC2 Compatibility Layer          |
| id          | 181cdad1d1264387bcc411e1c6a6a5fd |
| name        | ec2                              |
| type        | ec2                              |
+-------------+----------------------------------+
</computeroutput>
<prompt>$</prompt> <userinput>keystone --token 012345SECRET99TOKEN012345 \
 --endpoint http://192.168.206.130:35357/v2.0/ \
 endpoint-create \
 --region RegionOne \
 --service_id=181cdad1d1264387bcc411e1c6a6a5fd \
 --publicurl=http://192.168.206.130:8773/services/Cloud \
 --internalurl=http://192.168.206.130:8773/services/Cloud \
 --adminurl=http://192.168.206.130:8773/services/Admin
</userinput>
<computeroutput>
+-------------+--------------------------------------------+
|   Property  |                  Value                     |
+-------------+--------------------------------------------+
| adminurl    | http://192.168.206.130:8773/services/Cloud |
| id          | d2a3d7490c61442f9b2c8c8a2083c4b6           |
| internalurl | http://192.168.206.130:8773/services/Cloud |
| publicurl   | http://192.168.206.130:8773/services/Admin |
| region      | RegionOne                                  |
| service_id  | 181cdad1d1264387bcc411e1c6a6a5fd           |
+-------------+--------------------------------------------+
</computeroutput>
</screen>
      <para>Define the Object Storage service:</para>
      <screen>
<prompt>$</prompt> <userinput>keystone  --token 012345SECRET99TOKEN012345 \
 --endpoint http://192.168.206.130:35357/v2.0/ \
 service-create \
 --name=swift \
 --type=object-store \
 --description=&quot;Object Storage Service&quot;</userinput>
<computeroutput>+-------------+---------------------------------+
|   Property  |              Value               |
+-------------+----------------------------------+
| description | Object Storage Service           |
| id          | 272efad2d1234376cbb911c1e5a5a6ed |
| name        | swift                            |
| type        | object-store                     |
+-------------+----------------------------------+
</computeroutput>
<prompt>$</prompt> <userinput>keystone --token 012345SECRET99TOKEN012345 \
 --endpoint http://192.168.206.130:35357/v2.0/ \
 endpoint-create \
 --region RegionOne \
 --service_id=272efad2d1234376cbb911c1e5a5a6ed \
 --publicurl 'http://127.0.0.1:8888/v1/AUTH_%(tenant_id)s' \
 --adminurl 'http://127.0.0.1:8888/' \
 --internalurl 'http://127.0.0.1:8888/v1/AUTH_%(tenant_id)s'
</userinput>
<computeroutput>
+-------------+----------------------------------------------------------------+
|   Property  |                         Value                                  |
+-------------+----------------------------------------------------------------+
| adminurl    | http://127.0.0.1:8080/                                         |
| id          | e32b3c4780e51332f9c128a8c208a5a4                               |
| internalurl | http://192.168.206.130:8080                                    |
| publicurl   | http://127.0.0.1:8080/v1/AUTH_eb7e0c10a99446cfa14c244374549e9d |
| region      | RegionOne                                                      |
| service_id  | 272efad2d1234376cbb911c1e5a5a6ed                               |
+-------------+----------------------------------------------------------------+
</computeroutput>
</screen>
    </section>
  </section>
</section>
