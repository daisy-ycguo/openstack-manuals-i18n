<?xml version="1.0" encoding="UTF-8"?>
<section xml:id="enabling-access-to-vms-on-the-compute-node"
    xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
    <title>Enabling Access to VMs on the Compute Node</title>
    <para>One of the most commonly missed configuration areas is not
        allowing the proper access to VMs. Use the nova client to
        enable access. The commands below allow 'ping' and 'ssh' to
        your VMs : </para>
    <note>
        <para> These commands need to be run as root only if the
            credentials used to interact with nova-api have been put
            under /root/.bashrc. If the EC2 credentials have been put
            into another user's .bashrc file, then, it is necessary to
            run these commands as the user. You can also add --os_username
            as a parameter to the nova command when you want to run as a specific user. </para>
    </note>
    <literallayout class="monospaced">
 nova  secgroup-add-rule default  icmp - 1 -1 0.0.0.0/0 
 nova  secgroup-add-rule default  tcp 22 22 0.0.0.0/0 
                </literallayout>
    <para>Another common issue is you cannot ping or SSH your
        instances after issuing these commands. Something to look at
        is the amount of ‘dnsmasq’ processes that are running. If you
        have a running instance, check to see that TWO "dnsmasq’"
        processes are running. If not, perform the following: </para>
    <literallayout class="monospaced">sudo killall dnsmasq 
sudo service nova-network restart</literallayout>
    <para>If you get the
        <literallayout class="monospaced">instance not found</literallayout>
        message while performing the restart, that means the service
        was not previously running. You simply need to start it
        instead of restarting it:
        <literallayout class="monospaced">sudo service nova-network start</literallayout>
    </para>
</section>
