<?xml version="1.0" encoding="utf-8"?><fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format" font-family="AR-PL-New-Sung" font-size="10.5pt" text-align="start" line-height="normal" font-selection-strategy="character-by-character" line-height-shift-adjustment="disregard-shifts" writing-mode="lr-tb" language="zh"><fo:layout-master-set><fo:simple-page-master master-name="blank" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body display-align="center" margin-bottom="0.5in" margin-top="0.5in"/><fo:region-before region-name="xsl-region-before-blank" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-blank" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-first" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-odd" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-even" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="lot-first" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="lot-odd" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="lot-even" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="front-first" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="front-odd" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="front-even" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="body-first" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="body-odd" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="body-even" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="back-first" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="back-odd" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="back-even" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="index-first" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="2"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="index-odd" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="2"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="index-even" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="2"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:page-sequence-master master-name="titlepage"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="titlepage-first" page-position="first"/><fo:conditional-page-master-reference master-reference="titlepage-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="titlepage-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="lot"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="lot-first" page-position="first"/><fo:conditional-page-master-reference master-reference="lot-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="lot-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="front"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="front-first" page-position="first"/><fo:conditional-page-master-reference master-reference="front-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="front-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="body"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="body-first" page-position="first"/><fo:conditional-page-master-reference master-reference="body-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="body-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="back"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="back-first" page-position="first"/><fo:conditional-page-master-reference master-reference="back-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="back-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="index"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="index-first" page-position="first"/><fo:conditional-page-master-reference master-reference="index-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="index-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:simple-page-master xmlns:exslt="http://exslt.org/common" master-name="cloudpage-first" page-width="8.5in" page-height="11in" margin-top="0.0in" margin-bottom="0.0in" margin-left="0.0in" margin-right="0.0in"><fo:region-body margin-bottom="0.0in" margin-top="0.0in" column-gap="0pt" column-count="1"/><fo:region-before extent="11.0in" display-align="before" background-image="url(/home/daisy/OpenStack/openstack-manuals/doc/src/docbkx/openstack-api-programming/target/docbkx/images/cloud/cover.svg)" background-repeat="no-repeat" background-position-horizontal="0%" background-position-vertical="0%"/></fo:simple-page-master><fo:page-sequence-master xmlns:exslt="http://exslt.org/common" master-name="cloud-titlepage"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="cloudpage-first" page-position="first"/><fo:conditional-page-master-reference master-reference="titlepage-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="titlepage-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master></fo:layout-master-set><fo:declarations><x:xmpmeta xmlns:x="adobe:ns:meta/"><rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"><rdf:Description xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xapRights="http://ns.adobe.com/xap/1.0/rights/" rdf:about=""><xapRights:Marked>True</xapRights:Marked></rdf:Description><rdf:Description xmlns:dc="http://purl.org/dc/elements/1.1/" rdf:about=""><dc:rights><rdf:Alt><rdf:li xml:lang="x-default">版权 © 2011, 2012 OpenStack LLC All rights reserved.</rdf:li></rdf:Alt></dc:rights><dc:title>Programming OpenStack Compute API编程</dc:title><dc:creator>Jacek Artymiak</dc:creator></rdf:Description><rdf:Description xmlns:pdf="http://ns.adobe.com/pdf/1.3/" rdf:about=""/><rdf:Description xmlns:xmp="http://ns.adobe.com/xap/1.0/" rdf:about=""><xmp:CreatorTool>Cloud API Docs Plugin</xmp:CreatorTool></rdf:Description></rdf:RDF></x:xmpmeta></fo:declarations><fo:bookmark-tree><fo:bookmark xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="programming-openstack-compute-api-with-shell-and-python-1st-ed" starting-state="hide"><fo:bookmark-title>Programming OpenStack Compute API编程</fo:bookmark-title></fo:bookmark><fo:bookmark xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="toc...programming-openstack-compute-api-with-shell-and-python-1st-ed"><fo:bookmark-title>目录</fo:bookmark-title></fo:bookmark><fo:bookmark xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="why-should-you-use-cloud-computing" starting-state="hide"><fo:bookmark-title>第 1 章 Why Should You Use Cloud Computing?</fo:bookmark-title><fo:bookmark internal-destination="how-will-you-manage-it-all" starting-state="hide"><fo:bookmark-title>How Will You Manage It All?</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="the-solution-openstack-compute-api" starting-state="hide"><fo:bookmark-title>The Solution: OpenStack Compute API</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="the-basics" starting-state="hide"><fo:bookmark-title>第 2 章 The Basics</fo:bookmark-title><fo:bookmark internal-destination="getting-python" starting-state="hide"><fo:bookmark-title>Getting Python</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="installing-python-on-your-machine" starting-state="hide"><fo:bookmark-title>Installing Python on Your Machine</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="examples" starting-state="hide"><fo:bookmark-title>Examples</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="getting-the-keys-to-the-kingdom" starting-state="hide"><fo:bookmark-title>Getting the Keys to the Kingdom</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="remembering-basic-security-hygiene" starting-state="hide"><fo:bookmark-title>Remembering Basic Security Hygiene</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="getting-the-authentication-token" starting-state="hide"><fo:bookmark-title>Getting the Authentication Token</fo:bookmark-title><fo:bookmark internal-destination="what-about-https" starting-state="hide"><fo:bookmark-title>What About HTTPS?</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="using-python-to-obtain-the-authentication-token" starting-state="hide"><fo:bookmark-title>Using Python to Obtain the Authentication Token</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="getting-the-api-endpoint-url" starting-state="hide"><fo:bookmark-title>Getting the API Endpoint URL</fo:bookmark-title><fo:bookmark internal-destination="getting-your-nova-credentials----the-drop-in-script-snippet-for-your-python-scripts" starting-state="hide"><fo:bookmark-title>Getting Your Nova Credentials -- The Drop-In Script Snippet for Your Python Scripts</fo:bookmark-title></fo:bookmark></fo:bookmark></fo:bookmark><fo:bookmark xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="servers" starting-state="hide"><fo:bookmark-title>第 3 章 Servers</fo:bookmark-title><fo:bookmark internal-destination="creating-servers" starting-state="hide"><fo:bookmark-title>Creating Servers</fo:bookmark-title><fo:bookmark internal-destination="listing-images" starting-state="hide"><fo:bookmark-title>Listing Images</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="listing-flavors" starting-state="hide"><fo:bookmark-title>Listing Flavors</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="booting-a-new-server" starting-state="hide"><fo:bookmark-title>Booting a New Server</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="using-curl-to-boot-a-new-server" starting-state="hide"><fo:bookmark-title>Using Curl to Boot a New Server</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="customizing-your-server-adding-metadata" starting-state="hide"><fo:bookmark-title>Customizing Your Server: Adding Metadata</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="customizing-your-server-adding-custom-files" starting-state="hide"><fo:bookmark-title>Customizing Your Server: Adding Custom Files</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="server-limits" starting-state="hide"><fo:bookmark-title>Server Limits</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="modifying-live-servers" starting-state="hide"><fo:bookmark-title>Modifying Live Servers</fo:bookmark-title><fo:bookmark internal-destination="listing-servers" starting-state="hide"><fo:bookmark-title>Listing Servers</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="listing-servers-using-python" starting-state="hide"><fo:bookmark-title>Listing Servers Using Python</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="getting-detailed-server-information" starting-state="hide"><fo:bookmark-title>Getting Detailed Server Information</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="getting-detailed-server-information-using-python" starting-state="hide"><fo:bookmark-title>Getting Detailed Server Information Using Python</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="listing-server-addresses" starting-state="hide"><fo:bookmark-title>Listing Server Addresses</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="listing-server-addresses-using-python" starting-state="hide"><fo:bookmark-title>Listing Server Addresses Using Python</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="listing-network-specific-server-addresses" starting-state="hide"><fo:bookmark-title>Listing Network-Specific Server Addresses</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="listing-network-specific-server-addresses-using-python" starting-state="hide"><fo:bookmark-title>Listing Network-Specific Server Addresses Using Python</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="server-metadata" starting-state="hide"><fo:bookmark-title>第 4 章 Server Metadata</fo:bookmark-title><fo:bookmark internal-destination="listing-server-metadata" starting-state="hide"><fo:bookmark-title>Listing Server Metadata</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="lisitng-server-metadata-using-python" starting-state="hide"><fo:bookmark-title>Lisitng Server Metadata Using Python</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="listing-server-metadata-items" starting-state="hide"><fo:bookmark-title>Listing Server Metadata Items</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="listing-server-metadata-items-using-python" starting-state="hide"><fo:bookmark-title>Listing Server Metadata Items Using Python</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="setting-server-metadata" starting-state="hide"><fo:bookmark-title>Setting Server Metadata</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="setting-server-metadata-using-python" starting-state="hide"><fo:bookmark-title>Setting Server Metadata Using Python</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="setting-server-metadata-items" starting-state="hide"><fo:bookmark-title>Setting Server Metadata Items</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="setting-server-metadata-items-using-python" starting-state="hide"><fo:bookmark-title>Setting Server Metadata Items Using Python</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="updating-server-metadata" starting-state="hide"><fo:bookmark-title>Updating Server Metadata</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="updating-server-metadata-using-python" starting-state="hide"><fo:bookmark-title>Updating Server Metadata Using Python</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="deleting-server-metadata-items" starting-state="hide"><fo:bookmark-title>Deleting Server Metadata Items</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="deleting-server-metadata-items-using-python" starting-state="hide"><fo:bookmark-title>Deleting Server Metadata Items Using Python</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="server-image-metadata" starting-state="hide"><fo:bookmark-title>第 5 章 Server Image Metadata</fo:bookmark-title><fo:bookmark internal-destination="listing-server-image-metadata" starting-state="hide"><fo:bookmark-title>Listing Server Image Metadata</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="lisitng-server-image-metadata-using-python" starting-state="hide"><fo:bookmark-title>Lisitng Server Image Metadata Using Python</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="listing-server-image-metadata-items" starting-state="hide"><fo:bookmark-title>Listing Server Image Metadata Items</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="listing-server-metadata-items-using-python-1" starting-state="hide"><fo:bookmark-title>Listing Server Metadata Items Using Python</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="setting-server-image-metadata" starting-state="hide"><fo:bookmark-title>Setting Server Image Metadata</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="setting-server-image-metadata-using-python" starting-state="hide"><fo:bookmark-title>Setting Server Image Metadata Using Python</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="setting-server-image-metadata-items" starting-state="hide"><fo:bookmark-title>Setting Server Image Metadata Items</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="setting-server-image-metadata-items-using-python" starting-state="hide"><fo:bookmark-title>Setting Server Image Metadata Items Using Python</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="updating-server-image-metadata" starting-state="hide"><fo:bookmark-title>Updating Server Image Metadata</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="updating-server-image-metadata-using-python" starting-state="hide"><fo:bookmark-title>Updating Server Image Metadata Using Python</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="deleting-server-image-metadata-items" starting-state="hide"><fo:bookmark-title>Deleting Server Image Metadata Items</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="deleting-server-image-metadata-items-using-python" starting-state="hide"><fo:bookmark-title>Deleting Server Image Metadata Items Using Python</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="updating-servers-changing-server-name" starting-state="hide"><fo:bookmark-title>Updating Servers: Changing Server Name</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="updating-servers-changing-server-name-using-python" starting-state="hide"><fo:bookmark-title>Updating Servers: Changing Server Name Using Python</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="updating-servers-changing-server-access-address" starting-state="hide"><fo:bookmark-title>Updating Servers: Changing Server Access Address</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="updating-servers-changing-server-access-address-using-python" starting-state="hide"><fo:bookmark-title>Updating Servers: Changing Server Access Address Using Python</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="changing-root-administrator-password" starting-state="hide"><fo:bookmark-title>Changing Root (Administrator) Password</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="changing-root-administrator-password-using-python" starting-state="hide"><fo:bookmark-title>Changing Root (Administrator) Password Using Python</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="rebooting-servers" starting-state="hide"><fo:bookmark-title>Rebooting Servers</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="rebooting-servers-using-python" starting-state="hide"><fo:bookmark-title>Rebooting Servers Using Python</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="rebuilding-servers" starting-state="hide"><fo:bookmark-title>Rebuilding Servers</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="resizing-servers" starting-state="hide"><fo:bookmark-title>Resizing Servers</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="resizing-servers-using-python" starting-state="hide"><fo:bookmark-title>Resizing Servers Using Python</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="confirming-server-resize" starting-state="hide"><fo:bookmark-title>Confirming Server Resize</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="confirming-server-resize-using-python" starting-state="hide"><fo:bookmark-title>Confirming Server Resize Using Python</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="reverting-server-resize" starting-state="hide"><fo:bookmark-title>Reverting Server Resize</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="reverting-server-resize-using-python" starting-state="hide"><fo:bookmark-title>Reverting Server Resize Using Python</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="server-images" starting-state="hide"><fo:bookmark-title>第 6 章 Server Images</fo:bookmark-title><fo:bookmark internal-destination="creating-server-images" starting-state="hide"><fo:bookmark-title>Creating Server Images</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="creating-server-images-using-python" starting-state="hide"><fo:bookmark-title>Creating Server Images Using Python</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="deleting-servers" starting-state="hide"><fo:bookmark-title>Deleting Servers</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="deleting-servers-using-python" starting-state="hide"><fo:bookmark-title>Deleting Servers Using Python</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="deleting-server-images" starting-state="hide"><fo:bookmark-title>Deleting Server Images</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="deleting-servers-images-using-python" starting-state="hide"><fo:bookmark-title>Deleting Servers Images Using Python</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="additional-tools" starting-state="hide"><fo:bookmark-title>第 7 章 Additional Tools</fo:bookmark-title></fo:bookmark></fo:bookmark-tree><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="programming-openstack-compute-api-with-shell-and-python-1st-ed"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="why-should-you-use-cloud-computing"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="how-will-you-manage-it-all"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="the-solution-openstack-compute-api"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="the-basics"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="getting-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="installing-python-on-your-machine"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="examples"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="getting-the-keys-to-the-kingdom"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="remembering-basic-security-hygiene"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="getting-the-authentication-token"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="what-about-https"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="using-python-to-obtain-the-authentication-token"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="getting-the-api-endpoint-url"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="getting-your-nova-credentials----the-drop-in-script-snippet-for-your-python-scripts"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="servers"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="creating-servers"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="listing-images"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="listing-flavors"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="booting-a-new-server"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="using-curl-to-boot-a-new-server"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="customizing-your-server-adding-metadata"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="customizing-your-server-adding-custom-files"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="server-limits"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="modifying-live-servers"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="listing-servers"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="listing-servers-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="getting-detailed-server-information"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="getting-detailed-server-information-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="listing-server-addresses"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="listing-server-addresses-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="listing-network-specific-server-addresses"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="listing-network-specific-server-addresses-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="server-metadata"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="listing-server-metadata"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="lisitng-server-metadata-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="listing-server-metadata-items"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="listing-server-metadata-items-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="setting-server-metadata"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="setting-server-metadata-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="setting-server-metadata-items"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="setting-server-metadata-items-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="updating-server-metadata"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="updating-server-metadata-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="deleting-server-metadata-items"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="deleting-server-metadata-items-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="server-image-metadata"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="listing-server-image-metadata"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="lisitng-server-image-metadata-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="listing-server-image-metadata-items"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="listing-server-metadata-items-using-python-1"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="setting-server-image-metadata"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="setting-server-image-metadata-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="setting-server-image-metadata-items"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="setting-server-image-metadata-items-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="updating-server-image-metadata"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="updating-server-image-metadata-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="deleting-server-image-metadata-items"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="deleting-server-image-metadata-items-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="updating-servers-changing-server-name"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="updating-servers-changing-server-name-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="updating-servers-changing-server-access-address"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="updating-servers-changing-server-access-address-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="changing-root-administrator-password"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="changing-root-administrator-password-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="rebooting-servers"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="rebooting-servers-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="rebuilding-servers"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="resizing-servers"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="resizing-servers-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="confirming-server-resize"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="confirming-server-resize-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="reverting-server-resize"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="reverting-server-resize-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="server-images"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="creating-server-images"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="creating-server-images-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="deleting-servers"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="deleting-servers-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="deleting-server-images"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="deleting-servers-images-using-python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="additional-tools"/><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="cloud-titlepage" language="zh" format="i" initial-page-number="1" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-first"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-odd"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-even"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-blank"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block id="programming-openstack-compute-api-with-shell-and-python-1st-ed"><fo:block><fo:block><fo:block-container xmlns:exslt="http://exslt.org/common" absolute-position="fixed" left="5.2in" top="9.0in" width="2.25in"><fo:block><fo:external-graphic src="url(/home/daisy/OpenStack/openstack-manuals/doc/src/docbkx/openstack-api-programming/target/docbkx/images/cc/../openstack-logo.svg)"/></fo:block><fo:block text-align="center" font-size="9pt" font-family="sans-serif"><fo:basic-link external-destination="url(http://docs.openstack.org)">docs.openstack.org</fo:basic-link></fo:block></fo:block-container></fo:block><fo:block><fo:block break-after="page"/><fo:block font-size="14.4pt" font-weight="bold" font-family="AR-PL-New-Sung"><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block><fo:block font-size="10pt"><fo:block>Jacek Artymiak</fo:block></fo:block><fo:block font-size="10pt" space-before="0.5em">1.1 (2012-03-21)</fo:block><fo:block font-size="10pt">版权 © 2011, 2012 OpenStack LLC All rights reserved.</fo:block><fo:block font-size="10pt"><fo:block xmlns:exslt="http://exslt.org/common" start-indent="0.0in" end-indent="0.0in"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="center">摘要</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">This is a book about programming the OpenStack Compute Nova API,
        v1.1. It is meant to be read by both programmers and system
        administrators familiar with programming the Unix shell (Bash, sh)
        or writing code in the Python programming language. As such it
        will be of interest to any system administrator and programmer
        using BSD, Linux, Unix, Mac OS X, and Microsoft Windows operating
        systems.</fo:block></fo:block></fo:block><fo:block font-size="8pt" space-before="1.0em"><fo:block xmlns:exslt="http://exslt.org/common" id="d6e18"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
              Licensed under the Apache License, Version 2.0 (the "License");
              you may not use this file except in compliance with the License.
              You may obtain a copy of the License at
          </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:basic-link external-destination="http://www.apache.org/licenses/LICENSE-2.0"><fo:inline>http://www.apache.org/licenses/LICENSE-2.0</fo:inline></fo:basic-link></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
              Unless required by applicable law or agreed to in writing, software
              distributed under the License is distributed on an "AS IS" BASIS,
              WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
              See the License for the specific language governing permissions and
              limitations under the License.
          </fo:block></fo:block></fo:block></fo:block><fo:block break-after="page"/></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="lot" language="zh" format="i" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-first"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-odd"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-even"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-blank"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" id="toc...programming-openstack-compute-api-with-shell-and-python-1st-ed"><fo:block><fo:block><fo:block space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em" space-after="0.5em" margin-left="0pt" start-indent="0pt" font-size="20.736pt" font-weight="bold" color="rgb(196,0,34)" font-family="AR-PL-New-Sung">目录</fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="why-should-you-use-cloud-computing">1. Why Should You Use Cloud Computing?</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="why-should-you-use-cloud-computing"><fo:page-number-citation ref-id="why-should-you-use-cloud-computing"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.programming-openstack-compute-api-with-shell-and-python-1st-ed.why-should-you-use-cloud-computing" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="how-will-you-manage-it-all">How Will You Manage It All?</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="how-will-you-manage-it-all"><fo:page-number-citation ref-id="how-will-you-manage-it-all"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="the-solution-openstack-compute-api">The Solution: OpenStack Compute API</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="the-solution-openstack-compute-api"><fo:page-number-citation ref-id="the-solution-openstack-compute-api"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="the-basics">2. The Basics</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="the-basics"><fo:page-number-citation ref-id="the-basics"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.programming-openstack-compute-api-with-shell-and-python-1st-ed.the-basics" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="getting-python">Getting Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="getting-python"><fo:page-number-citation ref-id="getting-python"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="installing-python-on-your-machine">Installing Python on Your Machine</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="installing-python-on-your-machine"><fo:page-number-citation ref-id="installing-python-on-your-machine"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="examples">Examples</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="examples"><fo:page-number-citation ref-id="examples"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="getting-the-keys-to-the-kingdom">Getting the Keys to the Kingdom</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="getting-the-keys-to-the-kingdom"><fo:page-number-citation ref-id="getting-the-keys-to-the-kingdom"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="remembering-basic-security-hygiene">Remembering Basic Security Hygiene</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="remembering-basic-security-hygiene"><fo:page-number-citation ref-id="remembering-basic-security-hygiene"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="getting-the-authentication-token">Getting the Authentication Token</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="getting-the-authentication-token"><fo:page-number-citation ref-id="getting-the-authentication-token"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.programming-openstack-compute-api-with-shell-and-python-1st-ed.getting-the-authentication-token" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="what-about-https">What About HTTPS?</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="what-about-https"><fo:page-number-citation ref-id="what-about-https"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="using-python-to-obtain-the-authentication-token">Using Python to Obtain the Authentication Token</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="using-python-to-obtain-the-authentication-token"><fo:page-number-citation ref-id="using-python-to-obtain-the-authentication-token"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="getting-the-api-endpoint-url">Getting the API Endpoint URL</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="getting-the-api-endpoint-url"><fo:page-number-citation ref-id="getting-the-api-endpoint-url"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.programming-openstack-compute-api-with-shell-and-python-1st-ed.getting-the-api-endpoint-url" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="getting-your-nova-credentials----the-drop-in-script-snippet-for-your-python-scripts">Getting Your Nova Credentials -- The Drop-In Script
        Snippet for Your Python Scripts</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="getting-your-nova-credentials----the-drop-in-script-snippet-for-your-python-scripts"><fo:page-number-citation ref-id="getting-your-nova-credentials----the-drop-in-script-snippet-for-your-python-scripts"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="servers">3. Servers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="servers"><fo:page-number-citation ref-id="servers"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.programming-openstack-compute-api-with-shell-and-python-1st-ed.servers" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="creating-servers">Creating Servers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="creating-servers"><fo:page-number-citation ref-id="creating-servers"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.programming-openstack-compute-api-with-shell-and-python-1st-ed.creating-servers" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="listing-images">Listing Images</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="listing-images"><fo:page-number-citation ref-id="listing-images"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="listing-flavors">Listing Flavors</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="listing-flavors"><fo:page-number-citation ref-id="listing-flavors"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="booting-a-new-server">Booting a New Server</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="booting-a-new-server"><fo:page-number-citation ref-id="booting-a-new-server"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="using-curl-to-boot-a-new-server">Using Curl to Boot a New Server</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="using-curl-to-boot-a-new-server"><fo:page-number-citation ref-id="using-curl-to-boot-a-new-server"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="customizing-your-server-adding-metadata">Customizing Your Server: Adding Metadata</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="customizing-your-server-adding-metadata"><fo:page-number-citation ref-id="customizing-your-server-adding-metadata"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="customizing-your-server-adding-custom-files">Customizing Your Server: Adding Custom Files</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="customizing-your-server-adding-custom-files"><fo:page-number-citation ref-id="customizing-your-server-adding-custom-files"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="server-limits">Server Limits</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="server-limits"><fo:page-number-citation ref-id="server-limits"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="modifying-live-servers">Modifying Live Servers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="modifying-live-servers"><fo:page-number-citation ref-id="modifying-live-servers"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.programming-openstack-compute-api-with-shell-and-python-1st-ed.modifying-live-servers" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="listing-servers">Listing Servers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="listing-servers"><fo:page-number-citation ref-id="listing-servers"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="listing-servers-using-python">Listing Servers Using Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="listing-servers-using-python"><fo:page-number-citation ref-id="listing-servers-using-python"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="getting-detailed-server-information">Getting Detailed Server Information</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="getting-detailed-server-information"><fo:page-number-citation ref-id="getting-detailed-server-information"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="getting-detailed-server-information-using-python">Getting Detailed Server Information Using Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="getting-detailed-server-information-using-python"><fo:page-number-citation ref-id="getting-detailed-server-information-using-python"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="listing-server-addresses">Listing Server Addresses</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="listing-server-addresses"><fo:page-number-citation ref-id="listing-server-addresses"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="listing-server-addresses-using-python">Listing Server Addresses Using Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="listing-server-addresses-using-python"><fo:page-number-citation ref-id="listing-server-addresses-using-python"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="listing-network-specific-server-addresses">Listing Network-Specific Server Addresses</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="listing-network-specific-server-addresses"><fo:page-number-citation ref-id="listing-network-specific-server-addresses"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="listing-network-specific-server-addresses-using-python">Listing Network-Specific Server Addresses Using
      Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="listing-network-specific-server-addresses-using-python"><fo:page-number-citation ref-id="listing-network-specific-server-addresses-using-python"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="server-metadata">4. Server Metadata</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="server-metadata"><fo:page-number-citation ref-id="server-metadata"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.programming-openstack-compute-api-with-shell-and-python-1st-ed.server-metadata" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="listing-server-metadata">Listing Server Metadata</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="listing-server-metadata"><fo:page-number-citation ref-id="listing-server-metadata"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="lisitng-server-metadata-using-python">Lisitng Server Metadata Using Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="lisitng-server-metadata-using-python"><fo:page-number-citation ref-id="lisitng-server-metadata-using-python"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="listing-server-metadata-items">Listing Server Metadata Items</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="listing-server-metadata-items"><fo:page-number-citation ref-id="listing-server-metadata-items"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="listing-server-metadata-items-using-python">Listing Server Metadata Items Using Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="listing-server-metadata-items-using-python"><fo:page-number-citation ref-id="listing-server-metadata-items-using-python"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="setting-server-metadata">Setting Server Metadata</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="setting-server-metadata"><fo:page-number-citation ref-id="setting-server-metadata"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="setting-server-metadata-using-python">Setting Server Metadata Using Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="setting-server-metadata-using-python"><fo:page-number-citation ref-id="setting-server-metadata-using-python"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="setting-server-metadata-items">Setting Server Metadata Items</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="setting-server-metadata-items"><fo:page-number-citation ref-id="setting-server-metadata-items"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="setting-server-metadata-items-using-python">Setting Server Metadata Items Using Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="setting-server-metadata-items-using-python"><fo:page-number-citation ref-id="setting-server-metadata-items-using-python"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="updating-server-metadata">Updating Server Metadata</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="updating-server-metadata"><fo:page-number-citation ref-id="updating-server-metadata"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="updating-server-metadata-using-python">Updating Server Metadata Using Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="updating-server-metadata-using-python"><fo:page-number-citation ref-id="updating-server-metadata-using-python"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deleting-server-metadata-items">Deleting Server Metadata Items</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deleting-server-metadata-items"><fo:page-number-citation ref-id="deleting-server-metadata-items"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deleting-server-metadata-items-using-python">Deleting Server Metadata Items Using Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deleting-server-metadata-items-using-python"><fo:page-number-citation ref-id="deleting-server-metadata-items-using-python"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="server-image-metadata">5. Server Image Metadata</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="server-image-metadata"><fo:page-number-citation ref-id="server-image-metadata"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.programming-openstack-compute-api-with-shell-and-python-1st-ed.server-image-metadata" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="listing-server-image-metadata">Listing Server Image Metadata</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="listing-server-image-metadata"><fo:page-number-citation ref-id="listing-server-image-metadata"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="lisitng-server-image-metadata-using-python">Lisitng Server Image Metadata Using Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="lisitng-server-image-metadata-using-python"><fo:page-number-citation ref-id="lisitng-server-image-metadata-using-python"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="listing-server-image-metadata-items">Listing Server Image Metadata Items</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="listing-server-image-metadata-items"><fo:page-number-citation ref-id="listing-server-image-metadata-items"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="listing-server-metadata-items-using-python-1">Listing Server Metadata Items Using Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="listing-server-metadata-items-using-python-1"><fo:page-number-citation ref-id="listing-server-metadata-items-using-python-1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="setting-server-image-metadata">Setting Server Image Metadata</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="setting-server-image-metadata"><fo:page-number-citation ref-id="setting-server-image-metadata"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="setting-server-image-metadata-using-python">Setting Server Image Metadata Using Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="setting-server-image-metadata-using-python"><fo:page-number-citation ref-id="setting-server-image-metadata-using-python"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="setting-server-image-metadata-items">Setting Server Image Metadata Items</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="setting-server-image-metadata-items"><fo:page-number-citation ref-id="setting-server-image-metadata-items"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="setting-server-image-metadata-items-using-python">Setting Server Image Metadata Items Using Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="setting-server-image-metadata-items-using-python"><fo:page-number-citation ref-id="setting-server-image-metadata-items-using-python"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="updating-server-image-metadata">Updating Server Image Metadata</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="updating-server-image-metadata"><fo:page-number-citation ref-id="updating-server-image-metadata"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="updating-server-image-metadata-using-python">Updating Server Image Metadata Using Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="updating-server-image-metadata-using-python"><fo:page-number-citation ref-id="updating-server-image-metadata-using-python"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deleting-server-image-metadata-items">Deleting Server Image Metadata Items</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deleting-server-image-metadata-items"><fo:page-number-citation ref-id="deleting-server-image-metadata-items"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deleting-server-image-metadata-items-using-python">Deleting Server Image Metadata Items Using Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deleting-server-image-metadata-items-using-python"><fo:page-number-citation ref-id="deleting-server-image-metadata-items-using-python"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="updating-servers-changing-server-name">Updating Servers: Changing Server Name</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="updating-servers-changing-server-name"><fo:page-number-citation ref-id="updating-servers-changing-server-name"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="updating-servers-changing-server-name-using-python">Updating Servers: Changing Server Name Using Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="updating-servers-changing-server-name-using-python"><fo:page-number-citation ref-id="updating-servers-changing-server-name-using-python"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="updating-servers-changing-server-access-address">Updating Servers: Changing Server Access Address</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="updating-servers-changing-server-access-address"><fo:page-number-citation ref-id="updating-servers-changing-server-access-address"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="updating-servers-changing-server-access-address-using-python">Updating Servers: Changing Server Access Address Using
      Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="updating-servers-changing-server-access-address-using-python"><fo:page-number-citation ref-id="updating-servers-changing-server-access-address-using-python"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="changing-root-administrator-password">Changing Root (Administrator) Password</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="changing-root-administrator-password"><fo:page-number-citation ref-id="changing-root-administrator-password"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="changing-root-administrator-password-using-python">Changing Root (Administrator) Password Using Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="changing-root-administrator-password-using-python"><fo:page-number-citation ref-id="changing-root-administrator-password-using-python"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rebooting-servers">Rebooting Servers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rebooting-servers"><fo:page-number-citation ref-id="rebooting-servers"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rebooting-servers-using-python">Rebooting Servers Using Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rebooting-servers-using-python"><fo:page-number-citation ref-id="rebooting-servers-using-python"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rebuilding-servers">Rebuilding Servers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rebuilding-servers"><fo:page-number-citation ref-id="rebuilding-servers"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="resizing-servers">Resizing Servers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="resizing-servers"><fo:page-number-citation ref-id="resizing-servers"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="resizing-servers-using-python">Resizing Servers Using Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="resizing-servers-using-python"><fo:page-number-citation ref-id="resizing-servers-using-python"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="confirming-server-resize">Confirming Server Resize</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="confirming-server-resize"><fo:page-number-citation ref-id="confirming-server-resize"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="confirming-server-resize-using-python">Confirming Server Resize Using Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="confirming-server-resize-using-python"><fo:page-number-citation ref-id="confirming-server-resize-using-python"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="reverting-server-resize">Reverting Server Resize</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="reverting-server-resize"><fo:page-number-citation ref-id="reverting-server-resize"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="reverting-server-resize-using-python">Reverting Server Resize Using Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="reverting-server-resize-using-python"><fo:page-number-citation ref-id="reverting-server-resize-using-python"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="server-images">6. Server Images</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="server-images"><fo:page-number-citation ref-id="server-images"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.programming-openstack-compute-api-with-shell-and-python-1st-ed.server-images" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="creating-server-images">Creating Server Images</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="creating-server-images"><fo:page-number-citation ref-id="creating-server-images"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="creating-server-images-using-python">Creating Server Images Using Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="creating-server-images-using-python"><fo:page-number-citation ref-id="creating-server-images-using-python"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deleting-servers">Deleting Servers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deleting-servers"><fo:page-number-citation ref-id="deleting-servers"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deleting-servers-using-python">Deleting Servers Using Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deleting-servers-using-python"><fo:page-number-citation ref-id="deleting-servers-using-python"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deleting-server-images">Deleting Server Images</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deleting-server-images"><fo:page-number-citation ref-id="deleting-server-images"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deleting-servers-images-using-python">Deleting Servers Images Using Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deleting-servers-images-using-python"><fo:page-number-citation ref-id="deleting-servers-images-using-python"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="additional-tools">7. Additional Tools</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="additional-tools"><fo:page-number-citation ref-id="additional-tools"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="zh" format="1" initial-page-number="1" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-first"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-odd"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-even"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-blank"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="why-should-you-use-cloud-computing"><fo:block font-family="AR-PL-New-Sung"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" font-family="AR-PL-New-Sung" color="rgb(196,0,34)" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">第 1 章 Why Should You Use Cloud Computing?</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Cloud computing is a way to build flexible server farms that can
        augment or replace the old-style server farms with their high
        maintenance cost and inflexible hardware configuration. They
        make it possible to do the things that are impossible with
        traditional hardware.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Thanks to cloud computing, things like replacing Microsoft
        Windows Server with Linux on 100+ machines; replacing 10 1-core
        servers with 10 4-core servers; or, doubling the number of the
        front-end servers to handle the periodic increase in traffic and
        then taking them off-line when traffic drops off, can be done in
        a couple of minutes. And since you can rent cloud servers by the
        hour, you could boot 100 of them to do in one hour a data
        processing job that would otherwise take one server 100 hours to
        complete. The price for that job will be the same. Try doing
        that with your traditional data center! (And don't forget to
        compare the pricing.)
      </fo:block><fo:block id="how-will-you-manage-it-all"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">How Will You Manage It All?</fo:marker><fo:block font-size="20.735999999999997pt">How Will You Manage It All?</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        One of the first things you may think of is how on Earth are you
        supposed to manage all those computing and storage resources?
        All cloud computing services providers offer basic web-based
        control panels, which are good enough as general administration
        dashboards, but most probably won't meet your needs, if you want
        to create a dynamically reconfigurable virtual server farm.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        A better way to manage your cloud is via a set of scripts that
        communicate with your cloud provider's infrastructure. This is
        done via a Programming Application Interface (API), which is
        offered by virtually any cloud computing provider.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The problem with APIs is that there are so many of them. Every
        cloud provider's infrastructure is different and that fact is
        reflected in the functionality exposedvia their APIs. Although
        the fragmentation of the cloud management APIs is genuinely
        justified, it doesn't make any easier for cloud server farm
        administrators to deploy their servers on different cloud
        infrastructures.
      </fo:block></fo:block><fo:block id="the-solution-openstack-compute-api"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">The Solution: OpenStack Compute API</fo:marker><fo:block font-size="20.735999999999997pt">The Solution: OpenStack Compute API</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Fortunately, you are not alone with this problem. The
        fanatically helpful people at Rackspace have decided that it
        would be beneficial for their customers and themselves if they
        created an open standard for common cloud services along with an
        accompanying open cloud management API. That was the beginning
        of the OpenStack project and the OpenStack Compute API. Being
        open, it can be used by other hosting companies.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        When other cloud computing providers adopt the OpenStack Compute
        API, you will be able to deploy your servers with different
        providers using the same set of tools by changing only three
        pieces of information in your code:
      </fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d6e36"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e37"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            the URL of the endpoint for the calls to the API;
          </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e39"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            the username of the authorized user;
          </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e41"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            the password of the authorized user.
          </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        From the programmer's point of view, OpenStack Compute API looks
        like another web API, similar to the Flickr API or the Twitter
        API—if someone decides to clone the Flickr API you will not have
        to change anything in your own code. Similarly, if your cloud
        infrastructure provider offers OpenStack Compute cloud servers,
        storage, and APIs, you do not have to learn the new ways of
        doing similar things, you just change the endpoint URL and your
        user credentials.
      </fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="zh" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-first"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-odd"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-even"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-blank"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="the-basics"><fo:block font-family="AR-PL-New-Sung"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" font-family="AR-PL-New-Sung" color="rgb(196,0,34)" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">第 2 章 The Basics</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
      There are two ways to start learning OpenStack Compute API
      programming—you can get an account with an OpenStack cloud
      infrastructure provider or you can download a test virtual machine
      environment from the OpenStack project's servers by following the
      instructions published at this URL:
    </fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d6e47"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e48"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
          <fo:inline font-style="italic"><fo:basic-link external-destination="url(http://wiki.openstack.org/SingleNodeNovaVagrantChef)"><fo:inline color="blue" font-style="normal">http://wiki.openstack.org/SingleNodeNovaVagrantChef</fo:inline></fo:basic-link></fo:inline>
        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
      Please bear in mind that the OpenStack project is moving at a
      fairly rapid pace and things sometimes don't work or need to be
      fixed by hand. For example, the trainig environment configuration
      may have to be adjusted a little. When you hit a snag, ask for
      help on the OpenStack site.
    </fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d6e53"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e54"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
          <fo:inline font-style="italic"><fo:basic-link external-destination="url(http://openstack.org)"><fo:inline color="blue" font-style="normal">http://openstack.org</fo:inline></fo:basic-link></fo:inline>
        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
      Sometimes you won't have to ask. The OpenStack project is
      well-documented and you can find all of the necessary information
      at the following URL:
    </fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d6e59"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e60"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
          <fo:inline font-style="italic"><fo:basic-link external-destination="url(http://docs.openstack.org)"><fo:inline color="blue" font-style="normal">http://docs.openstack.org</fo:inline></fo:basic-link></fo:inline>
        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block id="getting-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Getting Python</fo:marker><fo:block font-size="20.735999999999997pt">Getting Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The OpenStack Compute Nova API can be accessed in any
        programming language. In this book we present examples written
        in the Python programming languge and if you want to follow them
        on your own, you will need a Python interpreter.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Ideally, you should be using the latest Python interpreter from
        the 2.x branch, which can be any version starting with number
        2.6.1 upwards. The Python interpreter does not have to be
        installed on you virtual server machines, just the ones you will
        be using to communicate with the OpenStack Compute Application
        Programming Interface (API).
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Let's walk through the installation process.
      </fo:block></fo:block><fo:block id="installing-python-on-your-machine"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Installing Python on Your Machine</fo:marker><fo:block font-size="20.735999999999997pt">Installing Python on Your Machine</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Python is a popular scripting language that ships pre-installed
        on Mac OS X and some Linux distributions. You can verify if and
        which version of the Python interpreter you have installed on
        your system with the following command (must be issued on the
        command line, do not type the dollar sign):
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e72">
$ python --version
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The version you need is at least 2.6.1. (Please use the latest
        2.<fo:inline font-style="italic">x</fo:inline>.<fo:inline font-style="italic">x</fo:inline> version.)
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you are working in a graphical user interface environment and
        you are not sure how to get to the command line, try the
        following advice:
      </fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d6e77"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e78"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            <fo:inline font-weight="bold">Linux</fo:inline> — click on the
            toolbar located along one of the edges of the screen and
            locate the <fo:inline font-weight="bold">Terminal</fo:inline> menu
            option in the <fo:inline font-weight="bold">Accessories</fo:inline>
            menu. On Ubuntu Linux you will find it in
            <fo:inline font-style="italic">Applications &gt; Accessories &gt;
            Terminal</fo:inline>.
          </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e84"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            <fo:inline font-weight="bold">Mac OS X</fo:inline> — press
            Ctrl+Space to display the
            <fo:inline font-weight="bold">Spotlight</fo:inline> search field.
            Type <fo:inline font-weight="bold">terminal</fo:inline> and select
            the <fo:inline font-weight="bold">Terminal</fo:inline> application
            from the list of results.
          </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e90"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            <fo:inline font-weight="bold">Microsoft Windows</fo:inline> — click
            the <fo:inline font-weight="bold">Start</fo:inline> menu button,
            select <fo:inline font-weight="bold">Run</fo:inline>, type
            <fo:inline font-weight="bold">cmd</fo:inline> and hit the
            Enter/Return key.
          </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you do not have Python installed on your system or it is a
        version earlier than 2.6.1, you will need to add a Python
        interpreter to your system by hand.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Python installation packages exist for all popular operating
        systems, and if you cannot get one for your favorite work
        environment, you can usually build it from the sources. You can
        download the Python interpreter binaries or sources from the
        official Python download page:
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        <fo:inline font-style="italic"><fo:basic-link external-destination="url(http://www.python.org/getit/)"><fo:inline color="blue" font-style="normal">http://www.python.org/getit/</fo:inline></fo:basic-link></fo:inline>
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If your favorite operating system is not listed on that page,
        refer to your system's documentation for information on adding
        external packages. Various variants of Unix have their own
        packaging systems that make sure the software you install is
        properly configured on your system. For example, the right way
        to add Python on Ubuntu Linux is via the
        <fo:inline font-weight="bold">apt-get</fo:inline> command:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e103">
$ sudo apt-get install python
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Whenever possible, use pre-made Python 2.<fo:inline font-style="italic">x</fo:inline>
        packages. You can always build software from the sources, but it
        should be your last choice, if you are looking for convenience.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you are installing Python on a computer running Microsoft
        Windows, you may have to add the path to the Python interpreter
        to the <fo:inline font-weight="bold">Path</fo:inline> environment
        variable. On a Microsoft Windows 7 system, you will need to open
        the <fo:inline font-weight="bold">Environment Variables</fo:inline>
        dialog. You can do it in the following way:
      </fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.2em" id="d6e109"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e110"><fo:list-item-label end-indent="label-end()"><fo:block>1.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            Click the <fo:inline font-weight="bold">Start</fo:inline> button.
          </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e113"><fo:list-item-label end-indent="label-end()"><fo:block>2.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            Right-click the <fo:inline font-weight="bold">Computer</fo:inline>
            menu item.
          </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e116"><fo:list-item-label end-indent="label-end()"><fo:block>3.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            Select <fo:inline font-weight="bold">Properties</fo:inline>.
          </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e119"><fo:list-item-label end-indent="label-end()"><fo:block>4.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            Select <fo:inline font-weight="bold">Advanced System
            Settings</fo:inline>.
          </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e122"><fo:list-item-label end-indent="label-end()"><fo:block>5.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            Click the <fo:inline font-weight="bold">Environment
            Variables</fo:inline> button.
          </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e125"><fo:list-item-label end-indent="label-end()"><fo:block>6.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            Click the <fo:inline font-weight="bold">Path</fo:inline> entry on
            the <fo:inline font-weight="bold">System Variables</fo:inline>
            list.
          </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e129"><fo:list-item-label end-indent="label-end()"><fo:block>7.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            Click the <fo:inline font-weight="bold">Edit</fo:inline> button.
          </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e132"><fo:list-item-label end-indent="label-end()"><fo:block>8.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            Add <fo:inline font-weight="bold">;C:26</fo:inline> (or
            <fo:inline font-weight="bold">;C:27</fo:inline> for Python
            2.7.<fo:inline font-style="italic">x</fo:inline>) to the end of the string shown
            in the text field of the edit dialog.
          </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e137"><fo:list-item-label end-indent="label-end()"><fo:block>9.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            Click the <fo:inline font-weight="bold">OK</fo:inline> button.
          </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Please check the real path to the Python interpreter on your
        system. You can do that by browsing the system disk. Look for
        the topmost folder/path whose name begins with
        <fo:inline font-weight="bold">Python</fo:inline>.
      </fo:block></fo:block><fo:block id="examples"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Examples</fo:marker><fo:block font-size="20.735999999999997pt">Examples</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Examples from this book can be found in the repository found at
        the following URL:
      </fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d6e145"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e146"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            <fo:inline font-style="italic"><fo:basic-link external-destination="url(http://devguide.net/books/openstackapi)"><fo:inline color="blue" font-style="normal">http://devguide.net/books/openstackapi</fo:inline></fo:basic-link></fo:inline>
          </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Please note that all examples in this book have been written in
        a way that is meant to explain the concepts and the interactions
        between your code and the OpenStack Compute API. In real life,
        you will want to use additional error handling and data
        processing code.
      </fo:block></fo:block><fo:block id="getting-the-keys-to-the-kingdom"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Getting the Keys to the Kingdom</fo:marker><fo:block font-size="20.735999999999997pt">Getting the Keys to the Kingdom</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Depending on the setup you are going to use, there could be
        three ways to authenticate yourself with an OpenStack Compute
        v1.1 API:
      </fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.2em" id="d6e154"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e155"><fo:list-item-label end-indent="label-end()"><fo:block>1.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            Username/password — needs to be given with every call to the
            OpenStack Compute API. Not very convenient nor secure.
          </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e157"><fo:list-item-label end-indent="label-end()"><fo:block>2.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            An authentication token — typically OAuth, but could be any
            kind of a secret string of bits with an expiry date and
            time. This is the preferred way to authenticate yourself
            when calling the OpenStack Compute API. You obtain your
            authentication token from the authentication server using
            your username and password, which has to be given only once
            during the lifetime of the token.
          </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e159"><fo:list-item-label end-indent="label-end()"><fo:block>3.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            An API key — works just like the authentication token, but
            does not have an expiry date/time. You or your OpenStack
            provider's administrator/support staff can revoke it and
            generate a new one. It is not as safe as an authentication
            token, which can have a short lifespan, but at least you
            don't have to send your username and password with every API
            call. You don't have to send those credentials at all, in
            fact.
          </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        When you decide to use the username/password authentication, you
        will have to send it with every request; when you use a token,
        you will need to send username/password once and you will get a
        secret string of bytes which can be reused until it expires on
        its own or when the OpenStack cloud provider's administrator
        revokes it. With the API key you do not have to send your
        username/password credentials, but you are responsible for
        expiring the key.
      </fo:block></fo:block><fo:block id="remembering-basic-security-hygiene"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Remembering Basic Security Hygiene</fo:marker><fo:block font-size="20.735999999999997pt">Remembering Basic Security Hygiene</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Please make sure that the scripts you are pasting your
        credentials into are not readable by other users because the
        authentication tokens, the API keys, as well as your username
        and password are literally the key to your account and with it
        anyone who gets a hold of it will be able to wreak havoc with
        your cloud.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you suspect that the worst might have happened, revoke the
        compromised credentials and generate new ones by folowing the
        instructions provided by your OpenStack cloud provider. It will
        make all scripts, rouge and legitimate, inoperable, so once you
        cut them off, you'll need to fix the security holes and then
        replace the compromised credentials in your scripts with the new
        ones.
      </fo:block></fo:block><fo:block id="getting-the-authentication-token"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Getting the Authentication Token</fo:marker><fo:block font-size="20.735999999999997pt">Getting the Authentication Token</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        In order to obtain an API token you will need to request it from
        your OpenStack cloud provider's authentication server. Your
        provider will have to give you the URL of their authentication
        server as well as your username and password.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The OpenStack Compute API is implemented using a convention
        known as "representational state transfer" (REST),
        which is a way of using various HTTP methods (GET, POST, PUT,
        DELETE) to manage resources described using paths to those
        resources. It sounds more complex than it is in reality.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The following example shows how to use the
        <fo:inline font-weight="bold">curl</fo:inline> command to obtain the
        authentication token using the HTTP GET method:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e172">
$ curl -d '{"passwordCredentials": {"username": "joe",​ "password": "shhh"}}' -H "Content-type: application/​json" http:/​/​localhost:5000/​v2.​0/​tokens
</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d6e173"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e174"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            <fo:inline font-weight="bold">joe</fo:inline> — your username,
            replace <fo:inline font-weight="bold">joe</fo:inline> without your
            username, unless it is
            <fo:inline font-weight="bold">joe</fo:inline>.
          </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e179"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            <fo:inline font-weight="bold">shhh</fo:inline> — the password for
            your OpenStack account, please do not use
            <fo:inline font-weight="bold">shhh</fo:inline>.
          </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e183"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            <fo:inline font-weight="bold">localhost:5000</fo:inline> — the URL
            of the authentication server,
            <fo:inline font-weight="bold">localhost</fo:inline> is just a
            placeholder, please use an IP address or a full hostname
            (e.g. <fo:inline font-style="italic">somehost.example.com</fo:inline>). Please pay
            attention to the port number, it does matter. If your
            provider fails to tell you which port should be used, try
            <fo:inline font-weight="bold">5000</fo:inline> and
            <fo:inline font-weight="bold">5001</fo:inline> as these are
            typically used by the OpenStack authentication servers to
            listen for authentication requests.
          </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e190"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            <fo:inline font-weight="bold">/v2.0/tokens</fo:inline> — the path
            to the token provider.
          </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        What you will get in return should look like the following
        stream of code:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e194">
{"auth": {"token": {"expires": "2015-02-05T00:00:00",​ "id": "999888777666"},​ "serviceCatalog": {"glance": [{"adminURL": "http:/​/​10.​0.​2.​15:9292/​v1",​ "region": "RegionOne",​ "internalURL": "http:/​/​10.​0.​2.​15:9292/​v1",​ "publicURL": "http:/​/​10.​0.​2.​15:9292/​v1"}],​ "identity": [{"adminURL": "http:/​/​10.​0.​2.​15:5001/​v2.​0",​ "region": "RegionOne",​ "internalURL": "http:/​/​10.​0.​2.​15:5000/​v2.​0",​ "publicURL": "http:/​/​10.​0.​2.​15:5000/​v2.​0"}],​ "nova": [{"adminURL": "http:/​/​10.​0.​2.​15:8774/​v1.​1/​openstack",​ "region": "RegionOne",​ "internalURL": "http:/​/​10.​0.​2.​15:8774/​v1.​1/​openstack",​ "publicURL": "http:/​/​10.​0.​2.​15:8774/​v1.​1/​openstack"}]}}}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        It is hard to read, so here's the same output formatted for your
        convenience:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e196">
{
  "auth": {
    "token": {
      "expires": "2015-02-05T00:00:00",​ 
      "id": "999888777666"
    },​ 
    "serviceCatalog": {
      "glance": [
        {
          "adminURL": "http:/​/​10.​0.​2.​15:9292/​v1",​ 
          "region": "RegionOne",​ 
          "internalURL": "http:/​/​10.​0.​2.​15:9292/​v1",​ 
          "publicURL": "http:/​/​10.​0.​2.​15:9292/​v1"
        }
      ],​ 
      "nova": [
        {
          "adminURL": "http:/​/​10.​0.​2.​15:8774/​v1.​1/​openstack",​ 
          "region": "RegionOne",​ 
          "internalURL": "http:/​/​10.​0.​2.​15:8774/​v1.​1/​openstack",​ 
          "publicURL": "http:/​/​10.​0.​2.​15:8774/​v1.​1/​openstack"
        }
      ],​ 
      "identity": [
        {
          "adminURL": "http:/​/​10.​0.​2.​15:5001/​v2.​0",​ 
          "region": "RegionOne",​ 
          "internalURL": "http:/​/​10.​0.​2.​15:5000/​v2.​0",​ 
          "publicURL": "http:/​/​10.​0.​2.​15:5000/​v2.​0"
        }
      ]
    }
  }
}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The reponse contains the token itself (the
        <fo:inline font-weight="bold">id</fo:inline> key in the
        <fo:inline font-weight="bold">token</fo:inline> dictionary), the token
        expiry date/time and the catalog of services you can talk to
        that accept the token. The catalog lists the names of the
        services you can access together with their region names, the
        administration URL, the internal URL and the public URL for each
        region. Regions are groups of servers, server farms, etc.
        usually located in the same geogrphical area.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Each region is represented as a separate dictionary and those
        dictionaries are items in a list that groups region information
        for each service. This is an important exception to the overall
        composition of the JSON response which is arranged in a form of
        a nested key/value directory.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Although this is not going to be a frequent occurence in the
        real world, you may get bitten by server misconfiguration in
        test environments. If your code extracts the endpoint URLs
        automatically, and later hangs or starts reporting strange
        network errors, check if the URLs and port numbers returned by
        the authentication server match the reality. It is easy to
        forget to set the right hostname/port. The OpenStack
        configuration is a fairly complex process and it is easy to get
        confused. If you get an OpenStack training environment in the
        form of a VirtualBox or VMware virtual machine, try replacing
        whatever IP addresses or hostnames are returned by the
        authentication server with
        <fo:inline font-weight="bold">localhost</fo:inline> or run
        <fo:inline font-weight="bold">ifconfig</fo:inline> to see which IP
        addresses have been assigned to the virtual machine.
      </fo:block><fo:block id="what-about-https"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">What About HTTPS?</fo:marker><fo:block font-size="17.28pt">What About HTTPS?</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          All calls to the OpenStack Compute API presented in the
          examples included in this book use unencrypted HTTP
          connections for the convenience of testing things. In real
          life you will most likely be using encrypted HTTPS
          connections, which need some additional care.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          When you want to call your OpenStack provider's API servers
          you will most likely need to use a secure HTTPS connection.
          You will recognize it by the
          <fo:inline font-weight="bold">https</fo:inline> prefix. If you are
          given an <fo:inline font-weight="bold">http</fo:inline> URL, try
          replacing it with <fo:inline font-weight="bold">https</fo:inline> and
          see if that one works.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          If you run into problems with SSL certificates while using
          <fo:inline font-weight="bold">curl</fo:inline>, read the instructions
          published at the following URL:
        </fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d6e213"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e214"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-style="italic"><fo:basic-link external-destination="url(http://curl.haxx.se/docs/sslcerts.html)"><fo:inline color="blue" font-style="normal">http://curl.haxx.se/docs/sslcerts.html</fo:inline></fo:basic-link></fo:inline>
            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          Most problems with SSL are caused by SSL certificate
          misconfiguration on the server side or by the use of
          self-generated SSL certificates.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          Using HTTPS in Python scripts is explained later in this
          chapter.
        </fo:block></fo:block></fo:block><fo:block id="using-python-to-obtain-the-authentication-token"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Using Python to Obtain the Authentication Token</fo:marker><fo:block font-size="20.735999999999997pt">Using Python to Obtain the Authentication Token</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        When you want to obtain an API token you can do it using two
        standard Python modules:
        <fo:inline font-weight="bold">httplib</fo:inline> and
        <fo:inline font-weight="bold">json</fo:inline>. Both are available in
        all major branches of Python: 2.6.<fo:inline font-style="italic">x</fo:inline>,
        2.7.<fo:inline font-style="italic">x</fo:inline>, and
        3.<fo:inline font-style="italic">x</fo:inline>.<fo:inline font-style="italic">x</fo:inline>. If you don't
        like them, you can always use
        <fo:inline font-weight="bold">requests</fo:inline> and
        <fo:inline font-weight="bold">simplejson</fo:inline>.
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e231">
#!/​usr/​bin/​python

import httplib
import json

# arguments

## make sure that url is set to the actual hostname/​IP address,​
## port number

url =​ "192.​168.​10.​1:5000"

## make sure that osuser is set to your actual username,​ "admin"
## works for test installs on virtual machines,​ but it's a hack

osuser =​ "joe"

## use something else than "shhh" for you password

ospassword =​ "shhh"

params =​ '{"passwordCredentials":{"username":osuser,​ "password":ospassword}}'

headers =​ {"Content-Type": "application/​json"}

# HTTP connection

conn =​ httplib.​HTTPConnection(url)
conn.​request("POST",​ "/​v2.​0/​tokens",​ params,​ headers)

# HTTP response

response =​ conn.​getresponse()
data =​ response.​read()
dd =​ json.​loads(data)

conn.​close()

apitoken =​ dd['auth']['token']['id']

print "Your token is: %s" % apitoken
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        When you run <fo:inline font-weight="bold">gettoken.py</fo:inline> you
        should see the following output (the token will hopefully be
        different):
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e234">
$ python .​/​gettoken.​py
Your token is: 999888777666
</fo:block></fo:block><fo:block id="getting-the-api-endpoint-url"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Getting the API Endpoint URL</fo:marker><fo:block font-size="20.735999999999997pt">Getting the API Endpoint URL</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The API token is only one essential piece of information you
        need to know to use the OpenStack Compute API. Another is the
        URL of the Nova API end point. That's where you will send your
        calls to the OpenStack Compute API accompanied by the token you
        just obtained. That information may be given to you by your
        OpenStack cloud provider or you may be able to extract that
        information from the authentication server's response:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e238">
#!/​usr/​bin/​python

import httplib
import json

# arguments

## change to False when you are using the test environment

usehttps =​ True

## make sure that url is set to the actual hostname/​IP address,​
## port number

url =​ "192.​168.​10.​1:5000"

## make sure that osuser is set to your actual username,​ "admin"
## works for test installs on virtual machines,​ but it's a hack

osuser =​ "joe"

## use something else than "shhh" for you password

ospassword =​ "shhh"

params =​ '{"passwordCredentials":{"username":osuser,​ "password":ospassword}}'

headers =​ {"Content-Type": "application/​json"}

# HTTP connection

if (usehttps =​=​ True):
    conn =​ httplib.​HTTPSConnection(url,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn =​ httplib.​HTTPConnection(url)

conn.​request("POST",​ "/​v2.​0/​tokens",​ params,​ headers)

# HTTP response

response =​ conn.​getresponse()
data =​ response.​read()
dd =​ json.​loads(data)

conn.​close()

apitoken =​ dd['auth']['token']['id']
apiurl =​ dd['auth']['serviceCatalog']['nova'][0]['publicURL']

print "Your token is: %s" % apitoken
print "Your Nova URL is: %s" % apiurl
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        When you run that script, you should see the following output.
        The token will most likely be something different than
        <fo:inline font-weight="bold">999888777666</fo:inline> and the Nova URL
        will not always contain
        <fo:inline font-weight="bold">10.0.2.15</fo:inline>:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e242">
$ .​/​gettokenurl.​py 
Your token is: 999888777666
Your Nova URL is: http:/​/​10.​0.​2.​15:8774/​v1.​1/​openstack
</fo:block><fo:block id="getting-your-nova-credentials----the-drop-in-script-snippet-for-your-python-scripts"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Getting Your Nova Credentials -- The Drop-In Script
        Snippet for Your Python Scripts</fo:marker><fo:block font-size="17.28pt">Getting Your Nova Credentials -- The Drop-In Script
        Snippet for Your Python Scripts</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          You will be coming back to the token and API URL extraction
          code over and over again, which is why I decided to place it
          in a separate section of this book. That way I can make the
          examples shorter and you can focus of the important stuff.
          Here's the code in all it's glory:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e246">
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

### Get OpenStack Credentials

# arguments

## change to False when you are using the test environment

usehttps =​ True

## make sure that url1 is set to the actual hostname/​IP address,​
## port number

url1 =​ "localhost:5000"

## make sure that osuser is set to your actual username,​ "admin"
## works for test installs on virtual machines,​ but it's a hack

osuser =​ "joe"

## use something else than "shhh" for you password

ospassword =​ "shhh"

params1 =​ '{"passwordCredentials":{"username":osuser,​ "password":ospassword}}'
headers1 =​ {"Content-Type": "application/​json"}

# HTTP connection #1

if (usehttps =​=​ True):
    # set key_file and cert_file to wherever the key and cert files
    # are located
    conn1 =​ httplib.​HTTPSConnection(url1,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn1 =​ httplib.​HTTPConnection(url1)

conn1.​request("POST",​ "/​v2.​0/​tokens",​ params1,​ headers1)

# HTTP response #1

response1 =​ conn1.​getresponse()
data1 =​ response1.​read()
dd1 =​ json.​loads(data1)

conn1.​close()

# extract token and url

apitoken =​ dd1['auth']['token']['id']
apiurl =​ dd1['auth']['serviceCatalog']['nova'][0]['publicURL']
apiurlt =​ urlparse(dd1['auth']['serviceCatalog']['nova'][0]['publicURL'])

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
</fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="zh" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-first"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-odd"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-even"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-blank"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="servers"><fo:block font-family="AR-PL-New-Sung"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" font-family="AR-PL-New-Sung" color="rgb(196,0,34)" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">第 3 章 Servers</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
      Servers are the cornerstone of the OpenStack Compute cloud
      infrastructure. While the future implementation of OpenStack will
      most likely offer independent file storage, content delivery
      networks, or cloud networking components, servers are what we have
      right now.
    </fo:block><fo:block id="creating-servers"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Creating Servers</fo:marker><fo:block font-size="20.735999999999997pt">Creating Servers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        When you create an account with your OpenStack Compute provider
        you will need to create your servers yourself, either by booting
        them via a web interface or with an API call. The call to create
        a server must use the POST method and the body of the request
        must be a JSON bundle that contains three essential arguments:
      </fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d6e253"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e254"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            <fo:inline font-weight="bold">name</fo:inline> — the name of the
            new server.
          </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e257"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            <fo:inline font-weight="bold">imageRef</fo:inline> — the URL of the
            server image.
          </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e260"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            <fo:inline font-weight="bold">flavorRef</fo:inline> — the URL of
            the server flavor.
          </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        A short explanation is in order. <fo:inline font-style="italic">Flavors</fo:inline>
        contain definitions of the virtual hardware that will be used to
        run the server system installed from an
        <fo:inline font-style="italic">image</fo:inline>. Images can be clean operating
        systems, or they can be modified by yourself in order to use
        them as virtual cookie cutters. For example, you could use
        Ubuntu to configure a web server and save the contents of the
        filesystem as an image that will be used to create as many
        additional web servers as necessary. This is faster, easier and
        more reliable than booting a clean system and configuring it
        from scratch every time you want to add a new web server.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Images are not tied to any particular virtual hardware flavor.
        The only limit is the size of the storage and the amount of RAM
        available for a particular flavor.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Whenever one of those three components are missing, the
        OpenStack Compute API will complain with the following messages:
      </fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d6e268"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e269"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            missing <fo:inline font-weight="bold">name</fo:inline>
          </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        You forgot to name the new server:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e273">
{
  "badRequest": {
    "message": "Server name is an empty string",​ 
    "code": 400
  }
}
</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d6e274"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e275"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            missing <fo:inline font-weight="bold">imageRef</fo:inline>
          </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        You forgot the URL of the server image or used the wrong one:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e279">
{
  "badRequest": {
    "message": "Cannot find requested image : Image 0 could not be found.​",​ 
    "code": 400
  }
}
</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d6e280"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e281"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            missing <fo:inline font-weight="bold">flavorRef</fo:inline>
          </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        You forgot the URL of the virtual machine flavor or used the
        wrong one:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e285">
{
  "badRequest": {
    "message": "Invalid flavorRef provided.​",​ 
    "code": 400
  }
}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The value of <fo:inline font-weight="bold">name</fo:inline> is easy to
        figure out, it is what you want to call your server. Typically
        that would be some sort of a shortcut for a function that the
        server performs, e.g. when I create web servers using the
        Tornado Web server, I usually call the hosts
        <fo:inline font-weight="bold">tornado001</fo:inline>,
        <fo:inline font-weight="bold">tornado002</fo:inline>, etc. or I might
        call them <fo:inline font-weight="bold">web000</fo:inline>,
        <fo:inline font-weight="bold">www000</fo:inline>, whatever.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        But <fo:inline font-weight="bold">imageRef</fo:inline> and
        <fo:inline font-weight="bold">flavorRef</fo:inline> cannot be just any
        URL. You need to ask the OpenStack Compute API for the list of
        images and flavors. That list will contain the URLs accompanied
        by some additional information that you can use to automate
        things like switching to a flavor that offers more storage or
        higher CPU performance.
      </fo:block><fo:block id="listing-images"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Listing Images</fo:marker><fo:block font-size="17.28pt">Listing Images</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          How do you know what images are available for building new
          servers?
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          You can list available server images by sending your request
          to the <fo:inline font-style="italic">/images</fo:inline> URL using the GET method.
          The following example shows how it is done using the
          <fo:inline font-weight="bold">curl</fo:inline> command:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e301">
$ curl -v -H "X-Auth-Token:999888777666" http:/​/​localhost:8774/​v1.​1/​openstack/​images 
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          As you can see, you must include the
          <fo:inline font-weight="bold">X-Auth-Token</fo:inline> header with a
          valid token otherwise the OpenStack Compute API will return
          the <fo:inline font-weight="bold">401 Unauthorized</fo:inline> error.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          When all goes well, you will get a lump of JSON that looks a
          bit like this:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e306">
{"images": [{"id": 3,​ "links": [{"href": "http:/​/​localhost:8774/​v1.​1/​openstack/​images/​3",​ "rel": "self"},​ {"href": "http:/​/​localhost:8774/​openstack/​images/​3",​ "rel": "bookmark"}],​ "name": "ubuntu-11.​04-server"},​ {"id": 2,​ "links": [{"href": "http:/​/​localhost:8774/​v1.​1/​openstack/​images/​2",​ "rel": "self"},​ {"href": "http:/​/​localhost:8774/​openstack/​images/​2",​ "rel": "bookmark"}],​ "name": "ubuntu-11.​04-initrd"},​ {"id": 1,​ "links": [{"href": "http:/​/​localhost:8774/​v1.​1/​openstack/​images/​1",​ "rel": "self"},​ {"href": "http:/​/​localhost:8774/​openstack/​images/​1",​ "rel": "bookmark"}],​ "name": "ubuntu-11.​04-kernel"}]}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          Here is a version that is easier to read:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e308">
{
  "images": [
    {
      "id": 3,​ 
      "links": [
        {
          "href": "http:/​/​localhost:8774/​v1.​1/​openstack/​images/​3",​ 
          "rel": "self"
        },​ 
        {
          "href": "http:/​/​localhost:8774/​openstack/​images/​3",​ 
          "rel": "bookmark"
        }
      ],​ 
      "name": "ubuntu-11.​04-server"
    },​ 
    {
      "id": 2,​ 
      "links": [
        {
          "href": "http:/​/​localhost:8774/​v1.​1/​openstack/​images/​2",​ 
          "rel": "self"
        },​ 
        {
          "href": "http:/​/​localhost:8774/​openstack/​images/​2",​ 
          "rel": "bookmark"
        }
      ],​ 
      "name": "ubuntu-11.​04-initrd"
    },​ 
    {
      "id": 1,​ 
      "links": [
        {
          "href": "http:/​/​localhost:8774/​v1.​1/​openstack/​images/​1",​ 
          "rel": "self"
        },​ 
        {
          "href": "http:/​/​localhost:8774/​openstack/​images/​1",​ 
          "rel": "bookmark"
        }
      ],​ 
      "name": "ubuntu-11.​04-kernel"
    }
  ]
}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          Each item on the <fo:inline font-weight="bold">images</fo:inline>
          list represents a single server image. It is a dictionary with
          three keys:
        </fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d6e311"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e312"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">id</fo:inline> — the numeric ID of
              the server image.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e315"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">links</fo:inline> — the list of the
              URLs of the locations where you can find the image.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e318"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">name</fo:inline> — a descriptive
              name of the image.
            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          Here's how one server image is represented in that response:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e322">
{
  "id": 1,​ 
  "links": [
    {
      "href": "http:/​/​localhost:8774/​v1.​1/​openstack/​images/​1",​ 
      "rel": "self"
    },​ 
    {
      "href": "http:/​/​localhost:8774/​openstack/​images/​1",​ 
      "rel": "bookmark"
    }
  ],​ 
  "name": "ubuntu-11.​04-kernel"
}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          Please note that this is not a complete set of information
          about server images that you can extract using the OpenStack
          Compute API, but it is enough to create a server unless you
          are trying to use a freshly created image, which hasn't been
          activated yet. For more information about handling such cases
          and how to work with server images in general, read the
          <fo:inline font-style="italic">Images</fo:inline> chapter later in this book.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          One question that programmers sometimes ask is which kind of
          server image identification is more reliable to rely upon, the
          server image <fo:inline font-weight="bold">id</fo:inline> or its
          <fo:inline font-weight="bold">name</fo:inline>? Personally, I rely on
          the names of server images, assuming that should some
          administrative mishap happen and the server image store got
          reorganized, names are less likely to be altered than the
          numeric IDs.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          Another argument for using names to identify server images is
          handling errors and ensuring operational continuity. If you
          want to make sure that the region or the provider you want to
          boot your server with has the right server image, you will
          want to use a unique name instead of a numeric ID, which can
          differ between OpenStack regions and providers. As always,
          check and double-check these things in your code. The best
          strategy is to use automation to create and save same server
          images in each region and with each OpenStack provider you
          plan to use. This is necessary, because you cannot transfer
          server images between OpenStack regions or providers. The
          automation tool of choice for Python programmers is
          <fo:inline font-weight="bold">Fabric</fo:inline>, which you can
          download from the following site:
        </fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d6e330"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e331"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-style="italic"><fo:basic-link external-destination="url(http://fabfile.org)"><fo:inline color="blue" font-style="normal">http://fabfile.org</fo:inline></fo:basic-link></fo:inline>
            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block id="listing-flavors"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Listing Flavors</fo:marker><fo:block font-size="17.28pt">Listing Flavors</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          Once you have the server image URL, you will need the URL of
          the virtual machine flavor. You can list available flavors by
          sending your request to the <fo:inline font-style="italic">/flavors</fo:inline> URL
          using the GET method. The following example shows how it is
          done using the <fo:inline font-weight="bold">curl</fo:inline>
          command:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e340">
$ curl -v -H "X-Auth-Token:999888777666" http:/​/​localhost:8774/​v1.​1/​openstack/​flavors
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          As with every call you make to the OpenStack Compute API you
          must include the
          <fo:inline font-weight="bold">X-Auth-Token</fo:inline> header with a
          valid token otherwise the OpenStack Compute API will return
          the <fo:inline font-weight="bold">401 Unauthorized</fo:inline> error.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          When all goes well, you will get a JSON string that looks like
          the one below:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e345">
{"flavors": [{"id": 3,​ "links": [{"href": "http:/​/​localhost:8774/​v1.​1/​openstack/​flavors/​3",​ "rel": "self"},​ {"href": "http:/​/​localhost:8774/​openstack/​flavors/​3",​ "rel": "bookmark"}],​ "name": "m1.​medium"},​ {"id": 4,​ "links": [{"href": "http:/​/​localhost:8774/​v1.​1/​openstack/​flavors/​4",​ "rel": "self"},​ {"href": "http:/​/​localhost:8774/​openstack/​flavors/​4",​ "rel": "bookmark"}],​ "name": "m1.​large"},​ {"id": 1,​ "links": [{"href": "http:/​/​localhost:8774/​v1.​1/​openstack/​flavors/​1",​ "rel": "self"},​ {"href": "http:/​/​localhost:8774/​openstack/​flavors/​1",​ "rel": "bookmark"}],​ "name": "m1.​tiny"},​ {"id": 5,​ "links": [{"href": "http:/​/​localhost:8774/​v1.​1/​openstack/​flavors/​5",​ "rel": "self"},​ {"href": "http:/​/​localhost:8774/​openstack/​flavors/​5",​ "rel": "bookmark"}],​ "name": "m1.​xlarge"},​ {"id": 2,​ "links": [{"href": "http:/​/​localhost:8774/​v1.​1/​openstack/​flavors/​2",​ "rel": "self"},​ {"href": "http:/​/​localhost:8774/​openstack/​flavors/​2",​ "rel": "bookmark"}],​ "name": "m1.​small"}]}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          Here is a version that is easier to read:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e347">
{
  "flavors": [
    {
      "id": 3,​ 
      "links": [
        {
          "href": "http:/​/​localhost:8774/​v1.​1/​openstack/​flavors/​3",​ 
          "rel": "self"
        },​ 
        {
          "href": "http:/​/​localhost:8774/​openstack/​flavors/​3",​ 
          "rel": "bookmark"
        }
      ],​ 
      "name": "m1.​medium"
    },​ 
    {
      "id": 4,​ 
      "links": [
        {
          "href": "http:/​/​localhost:8774/​v1.​1/​openstack/​flavors/​4",​ 
          "rel": "self"
        },​ 
        {
          "href": "http:/​/​localhost:8774/​openstack/​flavors/​4",​ 
          "rel": "bookmark"
        }
      ],​ 
      "name": "m1.​large"
    },​ 
    {
      "id": 1,​ 
      "links": [
        {
          "href": "http:/​/​localhost:8774/​v1.​1/​openstack/​flavors/​1",​ 
          "rel": "self"
        },​ 
        {
          "href": "http:/​/​localhost:8774/​openstack/​flavors/​1",​ 
          "rel": "bookmark"
        }
      ],​ 
      "name": "m1.​tiny"
    },​ 
    {
      "id": 5,​ 
      "links": [
        {
          "href": "http:/​/​localhost:8774/​v1.​1/​openstack/​flavors/​5",​ 
          "rel": "self"
        },​ 
        {
          "href": "http:/​/​localhost:8774/​openstack/​flavors/​5",​ 
          "rel": "bookmark"
        }
      ],​ 
      "name": "m1.​xlarge"
    },​ 
    {
      "id": 2,​ 
      "links": [
        {
          "href": "http:/​/​localhost:8774/​v1.​1/​openstack/​flavors/​2",​ 
          "rel": "self"
        },​ 
        {
          "href": "http:/​/​localhost:8774/​openstack/​flavors/​2",​ 
          "rel": "bookmark"
        }
      ],​ 
      "name": "m1.​small"
    }
  ]
}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          The list of virtual machine flavors is arranged in a way
          similar to the list of server images. Each item on the
          <fo:inline font-weight="bold">flavors</fo:inline> list represents a
          single virtual machine flavor. It is a dictionary with three
          keys:
        </fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d6e350"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e351"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">id</fo:inline> — the numeric ID of
              the flavor.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e354"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">links</fo:inline> — the list of the
              URLs of the locations where you can find the flavor.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e357"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">name</fo:inline> — a descriptve
              name of the flavor.
            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          Here's how one virtual machine flavor is represented in that
          response:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e361">
{
  "id": 1,​ 
  "links": [
    {
      "href": "http:/​/​localhost:8774/​v1.​1/​openstack/​flavors/​1",​ 
      "rel": "self"
    },​ 
    {
      "href": "http:/​/​localhost:8774/​openstack/​flavors/​1",​ 
      "rel": "bookmark"
    }
  ],​ 
  "name": "m1.​tiny"
},​ 
</fo:block></fo:block><fo:block id="booting-a-new-server"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Booting a New Server</fo:marker><fo:block font-size="17.28pt">Booting a New Server</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          You already know how to obtain the authentication token, the
          URL of the OpenStack Compute API, and the URLs of both the
          server image and the flavor. You already know all you need to
          know to make the basic POST request to create a server. We
          will now create now a Python script that does that job for us.
          First, we need to obtain the authentication token and the URL
          of the OpenStack Compute API (aka.
          <fo:inline font-weight="bold">nova</fo:inline>):
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e366">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          With the token and the URL we can now ask the OpenStack
          Compute API server for the image reference:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e368">
###
### Get server image reference
###

# HTTP connection #2

url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode({})
headers2 =​ { "X-Auth-Token":apitoken,​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("GET",​ "%s/​images" % apiurlt[2],​ params2,​ headers2)

# HTTP response

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
dd2 =​ json.​loads(data2)

conn2.​close()

###
### Server parameters
###

# Server name

sname =​ "tornado001"

# Server image URL

n =​ len(dd2["images"])
m =​ range(n)

for i in m:
    if dd2["images"][i]["id"] =​=​ 1:
        sImageRef =​ dd2["images"][i]["links"][0]["href"]
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          All we need now is the flavor URL:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e370">
# Flavor URL

# HTTP connection #3

params3 =​ urllib.​urlencode({})
headers3 =​ { "X-Auth-Token":apitoken,​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn3 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn3 =​ httplib.​HTTPConnection(url2)

conn3.​request("GET",​ "%s/​flavors" % apiurlt[2],​ params3,​ headers3)

# HTTP response #3

response3 =​ conn3.​getresponse()
data3 =​ response3.​read()
dd3 =​ json.​loads(data3)

conn3.​close()

n =​ len(dd3["flavors"])
m =​ range(n)

for i in m:
    if dd3["flavors"][i]["id"] =​=​ 1:
        sFlavorRef =​ dd3["flavors"][i]["links"][0]["href"]
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          We can leave other parameters empty for now:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e372">
###
### server metadata
###

sMetadata =​ {}

###
### server personalization
###

sPersonalityPath =​ ""
sPersonalityContents =​ ""
sPersonality =​ [ { "path":sPersonalityPath,​ "contents":base64.​b64encode( sPersonalityContents ) } ]
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          All that's left to do is a call to the OpenStack Compute API
          to create a new server:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e374">
s =​ { "server": { "name": sname,​ "imageRef": sImageRef,​ "flavorRef": sFlavorRef,​ "metadata": sMetadata,​ "personality": sPersonality } }

sj =​ json.​dumps(s)

# HTTP connection #4

params4 =​ sj
headers4 =​ { "X-Auth-Token":apitoken,​ "Content-type":"application/​json" }

conn4 =​ httplib.​HTTPConnection("localhost:8774")
conn4.​request("POST",​ "%s/​servers" % apiurlt[2],​ params4,​ headers4)

# HTTP response #4

response4 =​ conn4.​getresponse()
data4 =​ response4.​read()
dd4 =​ json.​loads(data4)

conn4.​close()

print json.​dumps(dd4,​ indent=​2)
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          When you run that script, you will get back a JSON string that
          looks simiar to the one below (shown expanded for better
          readability):
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e376">
{
  "server": {
    "status": "BUILD",​ 
    "updated": "2011-12-04T21:18:55Z",​ 
    "hostId": "",​ 
    "user_id": "admin",​ 
    "name": "tornado001",​ 
    "links": [
      {
        "href": "http:/​/​localhost:8774/​v1.​1/​openstack/​servers/​1",​ 
        "rel": "self"
      },​ 
      {
        "href": "http:/​/​localhost:8774/​openstack/​servers/​1",​ 
        "rel": "bookmark"
      }
    ],​ 
    "created": "2011-12-04T21:18:55Z",​ 
    "tenant_id": "openstack",​ 
    "image": {
      "id": "1",​ 
      "links": [
        {
          "href": "http:/​/​localhost:8774/​openstack/​images/​1",​ 
          "rel": "bookmark"
        }
      ]
    },​ 
    "adminPass": "MrhcNkNqAeVnnUE7",​ 
    "uuid": "8fec45a8-92fb-4840-8f2a-c64e1be49dee",​ 
    "accessIPv4": "",​ 
    "metadata": {
      "Server Name": "Tornado"
    },​ 
    "accessIPv6": "",​ 
    "key_name": null,​ 
    "progress": 0,​ 
    "flavor": {
      "id": "1",​ 
      "links": [
        {
          "href": "http:/​/​localhost:8774/​openstack/​flavors/​1",​ 
          "rel": "bookmark"
        }
      ]
    },​ 
    "config_drive": "",​ 
    "id": 1,​ 
    "addresses": {}
  }
}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          Congratulations! You have a new server.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          When you create a new server you are going to get a lot of
          interesting information about it in return:
        </fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d6e379"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e380"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">status</fo:inline>: set initially
              to <fo:inline font-weight="bold">BUILD</fo:inline>, later set to
              <fo:inline font-weight="bold">ACTIVE</fo:inline> when the server
              is ready to use.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e385"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">updated</fo:inline>: set initially
              to the server creation date, will be updated every time
              you modify the server.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e388"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">hostId</fo:inline>: undocumented.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e391"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">user_id</fo:inline>: the username
              of the user who created the server.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e394"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">name</fo:inline>: a short server
              name assigned by whoever created the server (you), in this
              case it is <fo:inline font-weight="bold">tornado001</fo:inline>.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e398"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">links</fo:inline>: the URLs
              pointing to the server.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e401"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">created</fo:inline>: set to the
              server creation date.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e404"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">tenant_id</fo:inline>: the name of
              the tenant that the server lives with, in this case it's
              <fo:inline font-weight="bold">openstack</fo:inline>.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e408"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">image</fo:inline>: basics data
              information about the operating system image used to build
              the server.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e411"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">adminPass</fo:inline>: the initial
              <fo:inline font-weight="bold">root</fo:inline>/<fo:inline font-weight="bold">Administrator</fo:inline>
              password, set automatically for you. It is possible to
              change it afterwards.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e416"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">uuid</fo:inline>: the Universally
              Unique Identifier (UUID) of the server.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e419"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">accessIPv4</fo:inline>: the
              <fo:inline font-style="italic">public</fo:inline> IPv4 address of the server.
              You will use it to access your server.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e423"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">metadata</fo:inline>: a dictionary
              that stores server metadata. This can be edited by
              yourself as explained later in this book.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e426"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">accessIPv6</fo:inline>: the
              <fo:inline font-style="italic">public</fo:inline> IPv6 address of the server.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e430"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">key_name</fo:inline>: undocumented.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e433"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">progress</fo:inline>: an integer
              value of 0 through 100. It starts with 0 and increases as
              the server is getting created. It is usually enough to
              monitor the <fo:inline font-weight="bold">status</fo:inline>
              property of a new server, but if it takes longer than a
              couple of miutes to build, the
              <fo:inline font-weight="bold">progress</fo:inline> indicator can
              provide additional information that may help debug the
              problem.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e438"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">flavor</fo:inline>: basic data
              information about the virtual hardware flavor used to
              build the server.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e441"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">config_drive</fo:inline>:
              undocumented.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e444"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">id</fo:inline> — the
              <fo:inline font-weight="bold">id</fo:inline> of the server within
              your own OpenStack account realm. The numbering starts
              with 1.
            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block id="using-curl-to-boot-a-new-server"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Using Curl to Boot a New Server</fo:marker><fo:block font-size="17.28pt">Using Curl to Boot a New Server</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          If you want to use <fo:inline font-weight="bold">curl</fo:inline> to
          create a new server, this is how you'd structure your request:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e452">
$ curl -v -X POST -H "X-Auth-Token:999888777666" -H "Content-type:application/​json" -d '{"server": {"flavorRef": "http:/​/​localhost:8774/​v1.​1/​openstack/​flavors/​1",​ "personality": [{"path": "",​ "contents": ""}],​ "name": "tornado001",​ "imageRef": "http:/​/​localhost:8774/​v1.​1/​openstack/​images/​1",​ "metadata": {"Server Name": "Tornado"}}}' http:/​/​localhost:8774/​v1.​1/​openstack/​servers
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          The result on that request will be a new server, whose
          description will be similar to the one discussed in the
          previous section.
        </fo:block></fo:block><fo:block id="customizing-your-server-adding-metadata"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Customizing Your Server: Adding Metadata</fo:marker><fo:block font-size="17.28pt">Customizing Your Server: Adding Metadata</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          Short server names like
          <fo:inline font-weight="bold">tornado000</fo:inline> may be good
          enough to describe a small set of servers, but they become
          insufficient when you need to manage dozens of machines.
          OpenStack Compute API allows us to add a number of metadata
          entries to each server at the time of its creation.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          If you go back to the section with the example of using Python
          to create a new server, you will see the following snippet of
          code:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e459">
.​.​.​

###
### server metadata
###

sMetadata =​ {}

###
### server personalization
###

sPersonalityPath =​ ""
sPersonalityContents =​ ""
sPersonality =​ [ { "path":sPersonalityPath,​ "contents":base64.​b64encode( sPersonalityContents ) } ]

s =​ { "server": { "name": sname,​ "imageRef": sImageRef,​ "flavorRef": sFlavorRef,​ "metadata": sMetadata,​ "personality": sPersonality } }

sj =​ json.​dumps(s)

.​.​.​
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          Because providing server metadata is optional, the example
          sets it to an empty dictionary. When you want to add metadata
          at server creation time, you will need to provide a dictionary
          of upto 5 key/value pairs. For example, if you wanted to add
          more information about the Tornado web server you plan to
          create you could set
          <fo:inline font-weight="bold">sMetadata</fo:inline> to something like
          this:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e462">
.​.​.​

###
### server metadata
###

sMetadata =​ {"function":"dynamic content",​ "master":"no",​ "belongs-to":"load balanced group no 1",​ "admin":"Joe Speedoo",​ "backup":"no"}

###
### server personalization
###

sPersonalityPath =​ ""
sPersonalityContents =​ ""
sPersonality =​ [ { "path":sPersonalityPath,​ "contents":base64.​b64encode( sPersonalityContents ) } ]

s =​ { "server": { "name": sname,​ "imageRef": sImageRef,​ "flavorRef": sFlavorRef,​ "metadata": sMetadata,​ "personality": sPersonality } }

sj =​ json.​dumps(s)

.​.​.​
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          The keys and values you choose can be anything you like, but
          it is a good idea to develop a schema that can be reused. For
          example, in the code fragment shown above, I use
          <fo:inline font-weight="bold">function</fo:inline> to store a short
          description of what the server does;
          <fo:inline font-weight="bold">master</fo:inline> to indicate if the
          server is a copy of the master server or the master server
          itself; <fo:inline font-weight="bold">belongs-to</fo:inline> to
          indicate, which group of load-balanced servers the new machine
          will belog to; <fo:inline font-weight="bold">admin</fo:inline> to
          store the name of the server administrator; and,
          <fo:inline font-weight="bold">backup</fo:inline> to indicate if this
          server needs to be backed up.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          The amount of metadata information assigned to each OpenStack
          server is currently limited to: 5 keys each holding values no
          larger than 10240 bytes.
        </fo:block></fo:block><fo:block id="customizing-your-server-adding-custom-files"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Customizing Your Server: Adding Custom Files</fo:marker><fo:block font-size="17.28pt">Customizing Your Server: Adding Custom Files</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          There are three ways of customizing newly created servers:
        </fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d6e473"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e474"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              log into a server and customize it by hand (not very
              efficient).
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e476"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              create a
              <fo:basic-link external-destination="url(http://docs.fabfile.org/)"><fo:inline color="blue" font-style="normal">Fabric</fo:inline></fo:basic-link>
              script and customize it automatically.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e479"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              preload server configuration scripts and (optionally)
              reboot it, wait, test if everything went fine.
            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          While you have to take care of the first two solutions,
          OpenStack Compute API can help with the last one. You can
          write up to 5 files, each no larger than 10KB (10240 bytes) to
          the freshly installed filesystem. They can be located
          anywhere, e.g. you could do something trivial like change the
          contents of <fo:inline font-style="italic">/etc/motd</fo:inline>, or you could add a
          system configuration script to
          <fo:inline font-style="italic">/etc/init.d</fo:inline> just remember to include
          logic that does the installation once and not at every reboot,
          unless that's what you want.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          However you want to use server personalization, you need to
          put the personalization files into a dictionary whose keys are
          paths to the files located on the server. Each key has a
          value, which in this case is the contents of the destination
          file, which needs to be encoded as Base64.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          To learn how it works in practice, we need to go back to the
          example showing how to create a new server and focus our
          attention of the following snippet of code:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e486">
.​.​.​

###
### server metadata
###

sMetadata =​ {"function":"dynamic content",​ "master":"no",​ "belongs-to":"load balanced group no 1",​ "admin":"Joe Speedoo",​ "backup":"no"}

###
### server personalization
###

sPersonalityPath =​ ""
sPersonalityContents =​ ""
sPersonality =​ [ { "path":sPersonalityPath,​ "contents":base64.​b64encode( sPersonalityContents ) } ]

s =​ { "server": { "name": sname,​ "imageRef": sImageRef,​ "flavorRef": sFlavorRef,​ "metadata": sMetadata,​ "personality": sPersonality } }

sj =​ json.​dumps(s)

.​.​.​
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          If you carefully examine the value of
          <fo:inline font-weight="bold">sPersonality</fo:inline>, you will
          notice that it is a list of dictionaries with two keys
          (<fo:inline font-weight="bold">path</fo:inline> and
          <fo:inline font-weight="bold">contents</fo:inline>) each. You can
          define upto 5 such dictionaries. Here's how you could do it if
          you wanted to copy to a newly created server 5 local files
          (their names and locations do not have to match the names and
          the locations of their destination):
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e491">
.​.​.​

###
### server metadata
###

sMetadata =​ {"function":"dynamic content",​ "master":"no",​ "belongs-to":"load balanced group no 1",​ "admin":"Joe Speedoo",​ "backup":"no"}

###
### server personalization
###

sPPath1 =​ "/​home/​joe/​.​profile"
sPContents1F =​ open('joe.​profile')
sPContents1 =​ sPContents1F.​read()
sPCont1 =​ base64.​b64encode( sPContents1 )

sPPath2 =​ "/​etc/​motd"
sPContents2F =​ open('joe.​motd')
sPContents2 =​ sPContents2F.​read()
sPCont2 =​ base64.​b64encode( sPContents2 )

sPPath3 =​ "/​etc/​nginx/​nginx.​conf"
sPContents3F =​ open('joe.​nginx.​conf')
sPContents3 =​ sPContents3F.​read()
sPCont3 =​ base64.​b64encode( sPContents3 )

sPPath4 =​ "/​etc/​ssh/​sshd_config"
sPContents4F =​ open('joe.​sshd_config')
sPContents4 =​ sPContents4F.​read()
sPCont4 =​ base64.​b64encode( sPContents4 )

sPPath5 =​ "/​etc/​sysctl.​conf"
sPContents5F =​ open('joe.​sysctl.​conf')
sPContents5 =​ sPContents5F.​read()
sPCont5 =​ base64.​b64encode( sPContents5 )

sPersonality =​ [ { "path":aPPath1,​ "contents":sPCont1 },​ { "path":aPPath2,​ "contents":sPCont2 },​ { "path":aPPath3,​ "contents":sPCont3 },​ { "path":aPPath4,​ "contents":sPCont4 },​ { "path":aPPath5,​ "contents":sPCont5 } ]

s =​ { "server": { "name": sname,​ "imageRef": sImageRef,​ "flavorRef": sFlavorRef,​ "metadata": sMetadata,​ "personality": sPersonality } }

sj =​ json.​dumps(s)

.​.​.​
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          What if five files are not enough? You can add more after the
          server boots. You can do it the hard way using
          <fo:inline font-weight="bold">scp</fo:inline> or you can write a
          Fabric script. Use Fabric. It lives here:
        </fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d6e494"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e495"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-style="italic"><fo:basic-link external-destination="url(http://fabfile.org)"><fo:inline color="blue" font-style="normal">http://fabfile.org</fo:inline></fo:basic-link></fo:inline>
            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block id="server-limits"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Server Limits</fo:marker><fo:block font-size="17.28pt">Server Limits</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          Although cloud-based servers give us a lot of flexibility,
          they still live in data centers and need to be managed in
          order to avoid hoarding of the data center resources. This is
          not a flaw, but the fact of life, even private server clouds
          have their limits.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          Every OpenStack cloud provider is free to set their own
          limits, but the ones suggested in the official documentation
          are:
        </fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d6e503"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e504"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">maxTotalRAMSize</fo:inline> — total
              amount of RAM of all active servers: 51200MB (50GB), this
              could be up to two hundred 256MB instances, or any mixture
              of other servers.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e507"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">maxServerMeta</fo:inline> — maximum
              number of metadata entries per server: 5.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e510"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">maxImageMeta</fo:inline> — maximum
              number of metadata entries per image: 5.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e513"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">maxPersonality</fo:inline> —
              maximum number of personalisation files per server: 5.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e516"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">maxPersonalitySize</fo:inline> —
              maximum size of each personalization file: 10240 bytes
              (10KB).
            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block></fo:block><fo:block id="modifying-live-servers"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Modifying Live Servers</fo:marker><fo:block font-size="20.735999999999997pt">Modifying Live Servers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Once a server is created, it is by no means set in stone. Apart
        from the obvious modifications to the operating system you can
        also modify the virtual hardware, the server's metadata, as well
        as perform some basic maintenance tasks.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        How you modify the operating system is up to you and up to the
        ways of the operating system, the rest can be done via the
        OpenStack Compute API.
      </fo:block><fo:block id="listing-servers"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Listing Servers</fo:marker><fo:block font-size="17.28pt">Listing Servers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          Before you can modify anything, you should have a good look at
          it.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          When you want to check how many servers you have active, you
          need to use the GET mthod when you call the
          <fo:inline font-style="italic">/server</fo:inline> URL. When you are testing things,
          use the <fo:inline font-weight="bold">curl</fo:inline> command to get
          the raw JSON reply:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e529">
$ curl -v -H "X-Auth-Token:999888777666" http:/​/​localhost:8774/​v1.​1/​openstack/​servers
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          When you have no active servers, the result will be a
          dictionary with one
          key—<fo:inline font-weight="bold">servers</fo:inline>—whose value is
          an empty list:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e532">
{
  "servers": []
}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          When there are more servers active, you will see a longer list
          of all servers that you can manage:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e534">
{
  "servers": [
    {
      "id": 2,​ 
      "uuid": "fcdeba5b-40f7-4f51-9404-8a41951739b2",​ 
      "links": [
        {
          "href": "http:/​/​localhost:8774/​v1.​1/​openstack/​servers/​2",​ 
          "rel": "self"
        },​ 
        {
          "href": "http:/​/​localhost:8774/​openstack/​servers/​2",​ 
          "rel": "bookmark"
        }
      ],​ 
      "name": "tornado002"
    },​ 
    {
      "id": 1,​ 
      "uuid": "8fec45a8-92fb-4840-8f2a-c64e1be49dee",​ 
      "links": [
        {
          "href": "http:/​/​localhost:8774/​v1.​1/​openstack/​servers/​1",​ 
          "rel": "self"
        },​ 
        {
          "href": "http:/​/​localhost:8774/​openstack/​servers/​1",​ 
          "rel": "bookmark"
        }
      ],​ 
      "name": "tornado001"
    }
  ]
}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          For a better view, here is a single server entry in the
          <fo:inline font-weight="bold">servers</fo:inline> list:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e537">
{
  "id": 1,​ 
  "uuid": "8fec45a8-92fb-4840-8f2a-c64e1be49dee",​ 
  "links": [
    {
      "href": "http:/​/​localhost:8774/​v1.​1/​openstack/​servers/​1",​ 
      "rel": "self"
    },​ 
    {
      "href": "http:/​/​localhost:8774/​openstack/​servers/​1",​ 
      "rel": "bookmark"
    }
  ],​ 
  "name": "tornado001"
}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          The keys in a dictionary that describes each server have the
          following meaning:
        </fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d6e539"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e540"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">id</fo:inline> — the numeric ID of
              the server.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e543"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">uuid</fo:inline> — the universally
              unique identifier of the server.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e546"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">links</fo:inline> — the list of
              URLs that point to the server.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e549"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">name</fo:inline> — a descriptive
              name of the server.
            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          It is worth poinitng out a few things: the server
          <fo:inline font-weight="bold">id</fo:inline> is unique within your
          account with the OpenStack cloud provider. Other users with
          the same provider may (and will) have the same server
          <fo:inline font-weight="bold">id</fo:inline> numbers. They are
          assigned in the order of server creation. Similarly, the the
          value of the <fo:inline font-weight="bold">name</fo:inline> key does
          not have to be unique, even within your own account.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          The only unique identifier of your server will be its
          <fo:inline font-weight="bold">uuid</fo:inline>. It is assigned
          automatically by you OpenStack cloud provider's system using
          an algorithm that is supposed to guarantee that the IDs it
          creates do not clash. You can read more about UUIDs on
          Wikipedia:
        </fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d6e558"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e559"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:basic-link external-destination="url(http://en.wikipedia.org/wiki/Universally_unique_identifier%20UUID)"><fo:inline color="blue" font-style="normal">http://en.wikipedia.org/wiki/Universally_unique_identifier</fo:inline></fo:basic-link>
            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block id="listing-servers-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Listing Servers Using Python</fo:marker><fo:block font-size="17.28pt">Listing Servers Using Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          When you want to use Python to list server information, the
          procedure is a bit more complex, but you do get access to the
          items returned by the OpenStack Compute API.
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e565">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Get the list of servers
###

# HTTP connection #2

url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode({})
headers2 =​ { "X-Auth-Token":apitoken,​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("GET",​ "%s/​servers" % apiurlt[2],​ params2,​ headers2)

# HTTP response #2

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
dd2 =​ json.​loads(data2)

conn2.​close()

print dd2
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          When you want to access specific keys in the dictionary of
          servers, you will need to either hard-code the paths to
          specific pieces of information, or use some simple heuristics,
          e.g. in the following snippet of code I assume that you
          already have the list of server information:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e567">
# abort when there are no servers

if dd2['servers'] =​=​ []:
    print 'Error: No servers found'
    exit(1)

# iterate through server entries until you find the server by name and
# then get its ID and URL

dd2r =​ range(len(dd2['server']))

for n in dd2r:
    if dd2['servers'][n]['name'] =​=​ 'tornado001':
        print "Server ID",​
        print str(dd2['servers'][n]['id'])
        print "Server URL",​
        print dd2['servers'][n]['links'][0]['href']
</fo:block></fo:block><fo:block id="getting-detailed-server-information"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Getting Detailed Server Information</fo:marker><fo:block font-size="17.28pt">Getting Detailed Server Information</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          A call to <fo:inline font-style="italic">/servers</fo:inline> returns the list of
          all servers and can be very long, which is why the JSON
          response contain only that data which can be used in other
          calls to update, rebuild, or delete a server.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          You can learn much more about a particular server by calling a
          different URL. It's <fo:inline font-style="italic">/server/id</fo:inline> where
          <fo:inline font-weight="bold">id</fo:inline> is the value of the
          <fo:inline font-weight="bold">id</fo:inline> key in the server
          description. Try it using
          <fo:inline font-weight="bold">curl</fo:inline>:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e577">
$ curl -v -H "X-Auth-Token:999888777666" http:/​/​localhost:8774/​v1.​1/​openstack/​servers/​1
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          What you will get in return is a JSON response with a lot more
          information about server whose
          <fo:inline font-weight="bold">id</fo:inline> is set to 1:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e580">
{
  "server": {
    "status": "ACTIVE",​ 
    "updated": "2011-12-04T21:19:11Z",​ 
    "hostId": "ea05d3b6c34b9baae7ad5ce482814e040305b6c8fb67034a46908720",​ 
    "user_id": "admin",​ 
    "name": "tornado001",​ 
    "links": [
      {
        "href": "http:/​/​localhost:8774/​v1.​1/​openstack/​servers/​1",​ 
        "rel": "self"
      },​ 
      {
        "href": "http:/​/​localhost:8774/​openstack/​servers/​1",​ 
        "rel": "bookmark"
      }
    ],​ 
    "created": "2011-12-04T21:18:55Z",​ 
    "tenant_id": "openstack",​ 
    "image": {
      "id": "1",​ 
      "links": [
        {
          "href": "http:/​/​localhost:8774/​openstack/​images/​1",​ 
          "rel": "bookmark"
        }
      ]
    },​ 
    "uuid": "8fec45a8-92fb-4840-8f2a-c64e1be49dee",​ 
    "accessIPv4": "",​ 
    "metadata": {
      "Server Name": "Tornado"
    },​ 
    "accessIPv6": "",​ 
    "key_name": null,​ 
    "progress": 100,​ 
    "flavor": {
      "id": "1",​ 
      "links": [
        {
          "href": "http:/​/​localhost:8774/​openstack/​flavors/​1",​ 
          "rel": "bookmark"
        }
      ]
    },​ 
    "config_drive": "",​ 
    "id": 1,​ 
    "addresses": {
      "public": [
        {
          "version": 4,​ 
          "addr": "192.​168.​100.​2"
        }
      ],​ 
      "private": [
        {
          "version": 4,​ 
          "addr": "192.​168.​200.​2"
        }
      ]
    }
  }
}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          Here is a guide to all those tasty bits of information:
        </fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d6e582"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e583"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">status</fo:inline>: set initially
              to <fo:inline font-weight="bold">BUILD</fo:inline>, later set to
              <fo:inline font-weight="bold">ACTIVE</fo:inline> when the server
              is ready to use.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e588"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">updated</fo:inline>: set initially
              to the server creation date, will be updated every time
              you modify the server.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e591"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">hostId</fo:inline>: undocumented.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e594"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">user_id</fo:inline>: the username
              of the user who created the server.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e597"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">name</fo:inline>: a short server
              name assigned by whoever created the server (you), in this
              case it is <fo:inline font-weight="bold">tornado001</fo:inline>.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e601"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">links</fo:inline>: the URLs
              pointing to the server.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e604"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">created</fo:inline>: set to the
              server creation date.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e607"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">tenant_id</fo:inline>: the name of
              the tenant that the server lives with, in this case it's
              <fo:inline font-weight="bold">openstack</fo:inline>.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e611"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">image</fo:inline>: basics data
              information about the operating system image used to build
              the server.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e614"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">uuid</fo:inline>: the Universally
              Unique Identifier (UUID) of the server.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e617"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">accessIPv4</fo:inline>: the
              <fo:inline font-style="italic">public</fo:inline> IPv4 address of the server.
              You will use it to access your server.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e621"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">metadata</fo:inline>: a dictionary
              that stores server metadata. This can be edited by
              yourself as explained later in this book.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e624"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">accessIPv6</fo:inline>: the
              <fo:inline font-style="italic">public</fo:inline> IPv6 address of the server.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e628"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">key_name</fo:inline>: undocumented.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e631"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">progress</fo:inline>: an integer
              value of 0 through 100. It starts with 0 and increases as
              the server is getting created. It is usually enough to
              monitor the <fo:inline font-weight="bold">status</fo:inline>
              property of a new server, but if it takes longer than a
              couple of miutes to build, the
              <fo:inline font-weight="bold">progress</fo:inline> indicator can
              provide additional information that may help debug the
              problem.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e636"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">flavor</fo:inline>: basic data
              information about the virtual hardware flavor used to
              build the server.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e639"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">config_drive</fo:inline>:
              undocumented.
            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e642"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
              <fo:inline font-weight="bold">id</fo:inline> — the
              <fo:inline font-weight="bold">id</fo:inline> of the server within
              your own OpenStack account realm. The numbering starts
              with 1.
            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          The list show above is almost an exact copy of the list shown
          in the chapter on server creation. One missing field is
          <fo:inline font-weight="bold">adminPass</fo:inline>, which is never
          returned after the server starts. This is done for security
          reasons. If you want to change the server
          <fo:inline font-weight="bold">root</fo:inline>/<fo:inline font-weight="bold">Administrator</fo:inline>
          password, you need to do it via the web interface or using a
          special OpenStack Compute API call.
        </fo:block></fo:block><fo:block id="getting-detailed-server-information-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Getting Detailed Server Information Using Python</fo:marker><fo:block font-size="17.28pt">Getting Detailed Server Information Using Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          What if you want to get all details of a particular server
          using Python? Here's how you do it:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e653">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Get the full description of a server
###

# HTTP connection #2

servID =​ 1      # server ID
url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode({})
headers2 =​ { "X-Auth-Token":apitoken,​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("GET",​ "%s/​servers/​%s" % (apiurlt[2],​ servID),​ params2,​ headers2)

# HTTP response #2

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
dd2 =​ json.​loads(data2)

conn2.​close()

print dd2
</fo:block></fo:block></fo:block><fo:block id="listing-server-addresses"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Listing Server Addresses</fo:marker><fo:block font-size="20.735999999999997pt">Listing Server Addresses</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        One piece of information that is looked up more often than
        others is server IP address. Or addresses, as is the case with
        all OpenStack Compute servers. Each machine has at least two
        IPv4 addresses: one private and one public (aka. routable). It
        is also reasonable to assume that each server will have its own
        private and public IPv6 address.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        You can list them using a GET request for the
        <fo:inline font-style="italic">/servers/id/ips</fo:inline> URL. For example, if you
        were to use <fo:inline font-weight="bold">curl</fo:inline> to list the
        IP addresses of a server whose
        <fo:inline font-weight="bold">id</fo:inline> is 1, you'd do it in the
        following way:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e661">
$ curl -v -H "X-Auth-Token:999888777666" http:/​/​localhost:8774/​v1.​1/​openstack/​servers/​1/​ips
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        What you will get in return will be a JSON response similar to
        the one below:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e663">
{
  "addresses": {
    "public": [
      {
        "version": 4,​ 
        "addr": "192.​168.​100.​2"
      },​
      {
        "version": 6,​ 
        "addr": "fe80:0:0:0:0:0:c0a8:6402"
      }
    ],​ 
    "private": [
      {
        "version": 4,​ 
        "addr": "192.​168.​200.​2"
      },​
      {
        "version": 6,​ 
        "addr": "fe80:0:0:0:0:0:c0a8:6402"
      }
    ]
  }
}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The <fo:inline font-weight="bold">addresses</fo:inline> dictionary
        contains two lists: <fo:inline font-weight="bold">private</fo:inline>
        and <fo:inline font-weight="bold">public</fo:inline>. These lists hold
        IPv4 and IPv6 addresses assigned to the server on private and
        public networks. The number of addresses asigned to your server
        may vary, but there should be at least one private IPv4 and one
        public IPv4 address.
      </fo:block></fo:block><fo:block id="listing-server-addresses-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Listing Server Addresses Using Python</fo:marker><fo:block font-size="20.735999999999997pt">Listing Server Addresses Using Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        When you want to extract the list of IP addresses for a server
        using Python, use the following recipe as your starting point:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e671">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Get the list of server IP addresses
###

# HTTP connection #2

srvID =​ 1       # server ID number
url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode({})
headers2 =​ { "X-Auth-Token":apitoken,​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("GET",​ "%s/​servers/​%s/​ips" % (apiurlt[2],​ srvID),​ params2,​ headers2)

# HTTP response #2

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
dd2 =​ json.​loads(data2)

conn2.​close()

print dd2
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you want to access a specific address you need to use a
        dictionary/list access notation, e.g. if you want to print the
        first public IPv4 address:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e673">
ipAddr =​ dd2["addresses"]["public"][0]

if (ipAddr["version"] =​=​ 4):
    print ipAddr["addr"]
</fo:block></fo:block><fo:block id="listing-network-specific-server-addresses"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Listing Network-Specific Server Addresses</fo:marker><fo:block font-size="20.735999999999997pt">Listing Network-Specific Server Addresses</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        It is possible to request just private or public server
        addresses. You can list them using a GET request for the
        <fo:inline font-style="italic">/servers/id/ips/network</fo:inline> URL. For example,
        if you were to use <fo:inline font-weight="bold">curl</fo:inline> to
        list the public IP addresses of a server whose
        <fo:inline font-weight="bold">id</fo:inline> is 1, you'd do it in the
        following way:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e680">
$ curl -v -H "X-Auth-Token:999888777666" http:/​/​localhost:8774/​v1.​1/​openstack/​servers/​1/​ips/​public
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        What you will get in return will be a JSON response similar to
        the one below:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e682">
{
  "addresses": {
    "public": [
      {
        "version": 4,​ 
        "addr": "192.​168.​100.​2"
      },​
      {
        "version": 6,​ 
        "addr": "fe80:0:0:0:0:0:c0a8:6402"
      }
    ]
  }
}
</fo:block></fo:block><fo:block id="listing-network-specific-server-addresses-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Listing Network-Specific Server Addresses Using
      Python</fo:marker><fo:block font-size="20.735999999999997pt">Listing Network-Specific Server Addresses Using
      Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Network-specific IP addresses can be retrieved using a Python
        script:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e686">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Get the list of server IP addresses for a specific network
###

# HTTP connection #2

srvID =​ 1       # server ID number
networkName =​ "public"  # can be either "public" or "private"
url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode({})
headers2 =​ { "X-Auth-Token":apitoken,​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("GET",​ "%s/​servers/​%s/​ips/​%s" % (apiurlt[2],​ srvID,​ networkName),​ params2,​ headers2)

# HTTP response #2

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
dd2 =​ json.​loads(data2)

conn2.​close()

print dd2
</fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="zh" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-first"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-odd"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-even"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-blank"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="server-metadata"><fo:block font-family="AR-PL-New-Sung"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" font-family="AR-PL-New-Sung" color="rgb(196,0,34)" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">第 4 章 Server Metadata</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
      Server metadata is stored in the
      <fo:inline font-weight="bold">metadata</fo:inline> dictionary within the
      server description data structures. We already discussed adding
      metadata during server creation, now we'll see how to list, add,
      update, and delete metadata items associated with your servers.
    </fo:block><fo:block id="listing-server-metadata"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Listing Server Metadata</fo:marker><fo:block font-size="20.735999999999997pt">Listing Server Metadata</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        It is possible to access server metadata information without
        having to list all properties of the server. For example, if you
        want to use <fo:inline font-weight="bold">curl</fo:inline> to list
        metadata for a server whose
        <fo:inline font-weight="bold">id</fo:inline> is 1, you can do it in the
        following way:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e696">
$ curl -H "X-Auth-Token:999888777666" http:/​/​localhost:8774/​v1.​1/​openstack/​servers/​1/​metadata
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The result should look similar to the output shown below:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e698">
{
  "metadata": {
    "Server Name": "Tornado"
  }
}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Notice that the GET method must be applied to the URL that ends
        with the <fo:inline font-style="italic">/servers/id/metadata</fo:inline> path.
      </fo:block></fo:block><fo:block id="lisitng-server-metadata-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Lisitng Server Metadata Using Python</fo:marker><fo:block font-size="20.735999999999997pt">Lisitng Server Metadata Using Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        When you'd rather use Python to access metadata information, you
        could do it in the following way:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e704">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Get server metadata
###

# HTTP connection #2

servID =​ 1      # server ID
url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode({})
headers2 =​ { "X-Auth-Token":apitoken,​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("GET",​ "%s/​servers/​%s/​metadata" % (apiurlt[2],​ servID),​ params2,​ headers2)

# HTTP response #2

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
dd2 =​ json.​loads(data2)

conn2.​close()

print dd2
</fo:block></fo:block><fo:block id="listing-server-metadata-items"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Listing Server Metadata Items</fo:marker><fo:block font-size="20.735999999999997pt">Listing Server Metadata Items</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Using the <fo:inline font-style="italic">/servers/id/metadata</fo:inline> URI gets you
        the dictionary of all metadata keys. If you wanted to access a
        specific key, you can use a four-part URI,
        <fo:inline font-style="italic">/servers/id/metadata/key</fo:inline>, where
        <fo:inline font-style="italic">id</fo:inline> is the numeric
        <fo:inline font-weight="bold">id</fo:inline> of the server and
        <fo:inline font-style="italic">key</fo:inline> is the metadata key you want the value
        of.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        For example, if you want to get the value of the
        <fo:inline font-weight="bold">owner</fo:inline> metadata key for server
        whose <fo:inline font-weight="bold">id</fo:inline> is 1, you can do it
        using <fo:inline font-weight="bold">curl</fo:inline> in the following
        way:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e717">
$ curl -H "X-Auth-Token:999888777666" http:/​/​localhost:8774/​v1.​1/​openstack/​servers/​1/​metadata/​owner
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The result should look similar to the output shown below:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e719">
{
  "metadata": {
    "owner": "joe"
  }
}
</fo:block></fo:block><fo:block id="listing-server-metadata-items-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Listing Server Metadata Items Using Python</fo:marker><fo:block font-size="20.735999999999997pt">Listing Server Metadata Items Using Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you wanted to check for a particular metadata key, you can
        reuse the Python script from the previous section. You already
        have the metadata dictionary, and all that's left is retrieving
        the key you are looking for:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e723">
print dd2['metadata']['owner']
</fo:block></fo:block><fo:block id="setting-server-metadata"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Setting Server Metadata</fo:marker><fo:block font-size="20.735999999999997pt">Setting Server Metadata</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Server metadata is stored in the
        <fo:inline font-weight="bold">metadata</fo:inline> dictionary, which is
        a part of each image description. It doesn't have to be set to
        anything, but it is often used to add a more detailed
        description of the image's purpose than a terse
        <fo:inline font-weight="bold">name</fo:inline> of the image.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Server metadata can be set at server creation time or later.
        When you want to do it after you create your server, you need to
        use the PUT method and a URL with a three-part path,
        <fo:inline font-style="italic">/servers/id/metadata</fo:inline>.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The <fo:inline font-style="italic">id</fo:inline> part is the numeric
        <fo:inline font-weight="bold">id</fo:inline> of the server. For
        example, if you wanted to set the
        <fo:inline font-weight="bold">owner</fo:inline> metadata key of the
        server whose <fo:inline font-weight="bold">id</fo:inline> is 1, the
        path would be <fo:inline font-style="italic">/servers/1/metadata</fo:inline>.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you were to use <fo:inline font-weight="bold">curl</fo:inline> to
        set metadata keys, this is how you'd do it:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e739">
$ curl -X PUT -H "X-Auth-Token:999888777666" -H "Accept: application/​json" -d '{"metadata":{"owner":"joe",​"group":"www"}}' http:/​/​localhost:8774/​v1.​1/​openstack/​servers/​1/​metadata
</fo:block></fo:block><fo:block id="setting-server-metadata-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Setting Server Metadata Using Python</fo:marker><fo:block font-size="20.735999999999997pt">Setting Server Metadata Using Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        When you want to use Python to set server metadata, you could do
        it in the following way:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e743">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Set server metadata
###

# HTTP connection #2

servID =​ 1      # server ID
url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode(json.​dumps({"metadata":{"owner":"joe",​"group":"www"}}))
headers2 =​ { "X-Auth-Token":apitoken,​ "Accept":"application/​json",​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("PUT",​ "%s/​servers/​%s/​metadata" % (apiurlt[2],​ servID),​ params2,​ headers2)

# HTTP response #2

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
dd2 =​ json.​loads(data2)

conn2.​close()
</fo:block></fo:block><fo:block id="setting-server-metadata-items"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Setting Server Metadata Items</fo:marker><fo:block font-size="20.735999999999997pt">Setting Server Metadata Items</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        In the previous section you learned how to set multiple metadata
        items in one go. But what if you wanted to set them one at a
        time?
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Once again, you need to use the PUT method and a URI that points
        to the metadata you wish to set, e.g.
        <fo:inline font-style="italic">/servers/id/metadata/key</fo:inline>.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The <fo:inline font-style="italic">id</fo:inline> part is the numeric
        <fo:inline font-weight="bold">id</fo:inline> of the server. For
        example, if you wanted to set the
        <fo:inline font-weight="bold">owner</fo:inline> metadata key of the
        server whose <fo:inline font-weight="bold">id</fo:inline> is 1, the
        path would be <fo:inline font-style="italic">/servers/1/metadata/owner</fo:inline>.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The value of the key set has to be passed to the OpenStack
        Compute API server as a single-key
        <fo:inline font-weight="bold">metadata</fo:inline> dictionary:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e757">
{
  "metadata": {
    "owner": "joe"
  }
}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you were to use <fo:inline font-weight="bold">curl</fo:inline> to
        set metadata keys, this is how you'd do it:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e760">
$ curl -X PUT -H "X-Auth-Token:999888777666" -H "Accept: application/​json" -d '{"metadata":{"owner":"joe"}}' http:/​/​localhost:8774/​v1.​1/​openstack/​servers/​1/​metadata/​owner
</fo:block></fo:block><fo:block id="setting-server-metadata-items-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Setting Server Metadata Items Using Python</fo:marker><fo:block font-size="20.735999999999997pt">Setting Server Metadata Items Using Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        When you want to use Python to set server metadata items, you
        can do it in the following way:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e764">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Set server metadata
###

# HTTP connection #2

servID =​ 1      # server ID
metaKey =​ "owner"   # metadata key
url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode(json.​dumps({"metadata":{metaKey:"joe"}}))
headers2 =​ { "X-Auth-Token":apitoken,​ "Accept":"application/​json",​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("PUT",​ "%s/​servers/​%s/​metadata/​%s" % (apiurlt[2],​ servID,​ metaKey),​ params2,​ headers2)

# HTTP response #2

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
dd2 =​ json.​loads(data2)

conn2.​close()
</fo:block></fo:block><fo:block id="updating-server-metadata"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Updating Server Metadata</fo:marker><fo:block font-size="20.735999999999997pt">Updating Server Metadata</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you want to update an existing metadata key, you need to use
        the POST method and the same, three-part URL path,
        <fo:inline font-style="italic">/servers/id/metadata</fo:inline>.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The <fo:inline font-style="italic">id</fo:inline> part is the numeric
        <fo:inline font-weight="bold">id</fo:inline> of the server. For
        example, if you wanted to set the
        <fo:inline font-weight="bold">owner</fo:inline> metadata key of the
        server whose <fo:inline font-weight="bold">id</fo:inline> is 1, the
        path would be <fo:inline font-style="italic">/servers/1/metadata</fo:inline>.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you were to use <fo:inline font-weight="bold">curl</fo:inline> to
        set metadata keys, this is how you'd do it:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e777">
$ curl -X POST -H "X-Auth-Token:999888777666" -H "Accept: application/​json" -d '{"metadata":{"owner":"adam"}}' http:/​/​localhost:8774/​v1.​1/​openstack/​servers/​1/​metadata
</fo:block></fo:block><fo:block id="updating-server-metadata-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Updating Server Metadata Using Python</fo:marker><fo:block font-size="20.735999999999997pt">Updating Server Metadata Using Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        When you want to use Python to update server metadata, you could
        do it in the following way:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e781">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Update server metadata
###

# HTTP connection #2

servID =​ 1      # server ID
url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode(json.​dumps({"metadata":{"owner":"adam"}}))
headers2 =​ { "X-Auth-Token":apitoken,​ "Accept":"application/​json",​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("POST",​ "%s/​servers/​%s/​metadata" % (apiurlt[2],​ servID),​ params2,​ headers2)

# HTTP response #2

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
dd2 =​ json.​loads(data2)

conn2.​close()
</fo:block></fo:block><fo:block id="deleting-server-metadata-items"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Deleting Server Metadata Items</fo:marker><fo:block font-size="20.735999999999997pt">Deleting Server Metadata Items</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        When you want to delete an existing metadata item, you will need
        to use the DELETE method and the four-part URI,
        <fo:inline font-style="italic">/servers/id/metadata/key</fo:inline>.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The <fo:inline font-style="italic">id</fo:inline> part is the numeric
        <fo:inline font-weight="bold">id</fo:inline> of the server. For
        example, if you wanted to set the
        <fo:inline font-weight="bold">owner</fo:inline> metadata key of the
        server whose <fo:inline font-weight="bold">id</fo:inline> is 1, the
        path would be <fo:inline font-style="italic">/servers/1/metadata/owner</fo:inline>.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you were to use <fo:inline font-weight="bold">curl</fo:inline> to
        set metadata keys, this is how you'd do it:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e794">
$ curl -X DELETE -H "X-Auth-Token:999888777666" -H "Accept: application/​json" http:/​/​localhost:8774/​v1.​1/​openstack/​servers/​1/​metadata/​owner
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Please note there is no data payload in a delete operation. It
        is a common mistake to leave it in while editing scripts.
      </fo:block></fo:block><fo:block id="deleting-server-metadata-items-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Deleting Server Metadata Items Using Python</fo:marker><fo:block font-size="20.735999999999997pt">Deleting Server Metadata Items Using Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Deleting server metadata items using Python can be done in the
        way shown below:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e799">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Deleting server metadata items
###

# HTTP connection #2

servID =​ 1      # server ID
metaKey =​ "owner"   # metadata key
url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode(json.​dumps({"metadata":{"owner":"adam"}}))
headers2 =​ { "X-Auth-Token":apitoken,​ "Accept":"application/​json",​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("DELETE",​ "%s/​servers/​%s/​metadata/​%s" % (apiurlt[2],​ servID,​ metaKey),​ params2,​ headers2)

# HTTP response #2

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
dd2 =​ json.​loads(data2)

conn2.​close()
</fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="zh" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-first"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-odd"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-even"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-blank"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="server-image-metadata"><fo:block font-family="AR-PL-New-Sung"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" font-family="AR-PL-New-Sung" color="rgb(196,0,34)" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">第 5 章 Server Image Metadata</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
      Server image metadata is not the same as the server image data,
      but the way you use it, modify it, or delete it is very similar.
    </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
      Server image metadata is stored in the
      <fo:inline font-weight="bold">metadata</fo:inline> dictionary within the
      server image description data structures. We already discussed
      adding metadata during server image ### FIXME ### creation, now
      we'll see how to list, add, update, and delete metadata items
      associated with your server images.
    </fo:block><fo:block id="listing-server-image-metadata"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Listing Server Image Metadata</fo:marker><fo:block font-size="20.735999999999997pt">Listing Server Image Metadata</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        It is possible to access server image metadata information
        without having to list all properties of the server image. For
        example, if you want to use
        <fo:inline font-weight="bold">curl</fo:inline> to list metadata for a
        server image whose <fo:inline font-weight="bold">id</fo:inline> is 1,
        you can do it in the following way:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e810">
$ curl -H "X-Auth-Token:999888777666" http:/​/​localhost:8774/​v1.​1/​openstack/​images/​1/​metadata
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The result should look similar to the output shown below:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e812">
{
  "metadata": {
    "imageName": "App Server"
  }
}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Notice that the GET method must be applied to the URL that ends
        with the <fo:inline font-style="italic">/images/id/metadata</fo:inline> path.
      </fo:block></fo:block><fo:block id="lisitng-server-image-metadata-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Lisitng Server Image Metadata Using Python</fo:marker><fo:block font-size="20.735999999999997pt">Lisitng Server Image Metadata Using Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        When you'd rather use Python to access metadata information, you
        could do it in the following way:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e818">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Get server image metadata
###

# HTTP connection #2

imgID =​ 1       # server image ID
url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode({})
headers2 =​ { "X-Auth-Token":apitoken,​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("GET",​ "%s/​images/​%s/​metadata" % (apiurlt[2],​ imgID),​ params2,​ headers2)

# HTTP response #2

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
dd2 =​ json.​loads(data2)

conn2.​close()

print dd2
</fo:block></fo:block><fo:block id="listing-server-image-metadata-items"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Listing Server Image Metadata Items</fo:marker><fo:block font-size="20.735999999999997pt">Listing Server Image Metadata Items</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Using the <fo:inline font-style="italic">/images/id/metadata</fo:inline> URI gets you
        the dictionary of all metadata keys. If you wanted to access a
        specific key, you can use a four-part URI,
        <fo:inline font-style="italic">/images/id/metadata/key</fo:inline>, where
        <fo:inline font-style="italic">id</fo:inline> is the numeric
        <fo:inline font-weight="bold">id</fo:inline> of the server image and
        <fo:inline font-style="italic">key</fo:inline> is the metadata key you want the value
        of.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        For example, if you want to get the value of the
        <fo:inline font-weight="bold">owner</fo:inline> metadata key for server
        image whose <fo:inline font-weight="bold">id</fo:inline> is 1, you can
        do it using <fo:inline font-weight="bold">curl</fo:inline> in the
        following way:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e831">
$ curl -H "X-Auth-Token:999888777666" http:/​/​localhost:8774/​v1.​1/​openstack/​images/​1/​metadata/​owner
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The result should look similar to the output shown below:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e833">
{
  "metadata": {
    "owner": "joe"
  }
}
</fo:block></fo:block><fo:block id="listing-server-metadata-items-using-python-1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Listing Server Metadata Items Using Python</fo:marker><fo:block font-size="20.735999999999997pt">Listing Server Metadata Items Using Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you wanted to check for a particular metadata key, you can
        reuse the Python script from the previous section. You already
        have the metadata dictionary, and all that's left is retrieving
        the key you are looking for:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e837">
print dd2['metadata']['owner']
</fo:block></fo:block><fo:block id="setting-server-image-metadata"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Setting Server Image Metadata</fo:marker><fo:block font-size="20.735999999999997pt">Setting Server Image Metadata</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Server image metadata is stored in the
        <fo:inline font-weight="bold">metadata</fo:inline> dictionary, which is
        a part of each image description. It doesn't have to be set to
        anything, but it is often used to add a more detailed
        description of the image's purpose than a terse
        <fo:inline font-weight="bold">name</fo:inline> of the image.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Server image metadata can be set at server image creation time
        or later. When you want to do it after you create your server
        image, you need to use the PUT method and a URL with a
        three-part path, <fo:inline font-style="italic">/images/id/metadata</fo:inline>.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The <fo:inline font-style="italic">id</fo:inline> part is the numeric
        <fo:inline font-weight="bold">id</fo:inline> of the server image. For
        example, if you wanted to set the
        <fo:inline font-weight="bold">owner</fo:inline> metadata key of the
        server image whose <fo:inline font-weight="bold">id</fo:inline> is 1,
        the path would be <fo:inline font-style="italic">/images/1/metadata</fo:inline>.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you were to use <fo:inline font-weight="bold">curl</fo:inline> to
        set metadata keys, this is how you'd do it:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e853">
$ curl -X PUT -H "X-Auth-Token:999888777666" -H "Accept: application/​json" -d '{"metadata":{"owner":"joe",​"group":"www"}}' http:/​/​localhost:8774/​v1.​1/​openstack/​images/​1/​metadata
</fo:block></fo:block><fo:block id="setting-server-image-metadata-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Setting Server Image Metadata Using Python</fo:marker><fo:block font-size="20.735999999999997pt">Setting Server Image Metadata Using Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        When you want to use Python to set server image metadata, you
        could do it in the following way:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e857">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Set server image metadata
###

# HTTP connection #2

imgID =​ 1       # server image ID
url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode(json.​dumps({"metadata":{"owner":"joe",​"group":"www"}}))
headers2 =​ { "X-Auth-Token":apitoken,​ "Accept":"application/​json",​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("PUT",​ "%s/​images/​%s/​metadata" % (apiurlt[2],​ imgID),​ params2,​ headers2)

# HTTP response #2

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
dd2 =​ json.​loads(data2)

conn2.​close()
</fo:block></fo:block><fo:block id="setting-server-image-metadata-items"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Setting Server Image Metadata Items</fo:marker><fo:block font-size="20.735999999999997pt">Setting Server Image Metadata Items</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        In the previous section you learned how to set multiple metadata
        items in one go. But what if you wanted to set them one at a
        time?
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Once again, you need to use the PUT method and a URI that points
        to the metadata you wish to set, e.g.
        <fo:inline font-style="italic">/images/id/metadata/key</fo:inline>.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The <fo:inline font-style="italic">id</fo:inline> part is the numeric
        <fo:inline font-weight="bold">id</fo:inline> of the server image. For
        example, if you wanted to set the
        <fo:inline font-weight="bold">owner</fo:inline> metadata key of the
        server image whose <fo:inline font-weight="bold">id</fo:inline> is 1,
        the path would be <fo:inline font-style="italic">/images/1/metadata/owner</fo:inline>.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The value of the key set has to be passed to the OpenStack
        Compute API server as a single-key
        <fo:inline font-weight="bold">metadata</fo:inline> dictionary:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e871">
{
  "metadata": {
    "owner": "joe"
  }
}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you were to use <fo:inline font-weight="bold">curl</fo:inline> to
        set metadata keys, this is how you'd do it:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e874">
$ curl -X PUT -H "X-Auth-Token:999888777666" -H "Accept: application/​json" -d '{"metadata":{"owner":"joe"}}' http:/​/​localhost:8774/​v1.​1/​openstack/​images/​1/​metadata/​owner
</fo:block></fo:block><fo:block id="setting-server-image-metadata-items-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Setting Server Image Metadata Items Using Python</fo:marker><fo:block font-size="20.735999999999997pt">Setting Server Image Metadata Items Using Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        When you want to use Python to set server image metadata items,
        you can do it in the following way:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e878">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Set server image metadata
###

# HTTP connection #2

imgID =​ 1       # server image ID
metaKey =​ "owner"   # metadata key
url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode(json.​dumps({"metadata":{metaKey:"joe"}}))
headers2 =​ { "X-Auth-Token":apitoken,​ "Accept":"application/​json",​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("PUT",​ "%s/​image/​%s/​metadata/​%s" % (apiurlt[2],​ imgID,​ metaKey),​ params2,​ headers2)

# HTTP response #2

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
dd2 =​ json.​loads(data2)

conn2.​close()
</fo:block></fo:block><fo:block id="updating-server-image-metadata"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Updating Server Image Metadata</fo:marker><fo:block font-size="20.735999999999997pt">Updating Server Image Metadata</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you want to update an existing metadata key, you need to use
        the POST method and the same, three-part URL path,
        <fo:inline font-style="italic">/images/id/metadata</fo:inline>.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The <fo:inline font-style="italic">id</fo:inline> part is the numeric
        <fo:inline font-weight="bold">id</fo:inline> of the server image. For
        example, if you wanted to set the
        <fo:inline font-weight="bold">owner</fo:inline> metadata key of the
        server image whose <fo:inline font-weight="bold">id</fo:inline> is 1,
        the path would be <fo:inline font-style="italic">/images/1/metadata</fo:inline>.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you were to use <fo:inline font-weight="bold">curl</fo:inline> to
        set metadata keys, this is how you'd do it:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e891">
$ curl -X POST -H "X-Auth-Token:999888777666" -H "Accept: application/​json" -d '{"metadata":{"owner":"adam"}}' http:/​/​localhost:8774/​v1.​1/​openstack/​images/​1/​metadata
</fo:block></fo:block><fo:block id="updating-server-image-metadata-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Updating Server Image Metadata Using Python</fo:marker><fo:block font-size="20.735999999999997pt">Updating Server Image Metadata Using Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        When you want to use Python to update server image metadata, you
        could do it in the following way:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e895">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Update server image metadata
###

# HTTP connection #2

imgID =​ 1       # server image ID
url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode(json.​dumps({"metadata":{"owner":"adam"}}))
headers2 =​ { "X-Auth-Token":apitoken,​ "Accept":"application/​json",​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("POST",​ "%s/​images/​%s/​metadata" % (apiurlt[2],​ imgID),​ params2,​ headers2)

# HTTP response #2

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
dd2 =​ json.​loads(data2)

conn2.​close()
</fo:block></fo:block><fo:block id="deleting-server-image-metadata-items"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Deleting Server Image Metadata Items</fo:marker><fo:block font-size="20.735999999999997pt">Deleting Server Image Metadata Items</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        When you want to delete an existing metadata item, you will need
        to use the DELETE method and the four-part URI,
        <fo:inline font-style="italic">/images/id/metadata/key</fo:inline>.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The <fo:inline font-style="italic">id</fo:inline> part is the numeric
        <fo:inline font-weight="bold">id</fo:inline> of the server image. For
        example, if you wanted to set the
        <fo:inline font-weight="bold">owner</fo:inline> metadata key of the
        server image whose <fo:inline font-weight="bold">id</fo:inline> is 1,
        the path would be <fo:inline font-style="italic">/images/1/metadata/owner</fo:inline>.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you were to use <fo:inline font-weight="bold">curl</fo:inline> to
        set metadata keys, this is how you'd do it:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e908">
$ curl -X DELETE -H "X-Auth-Token:999888777666" -H "Accept: application/​json" http:/​/​localhost:8774/​v1.​1/​openstack/​images/​1/​metadata/​owner
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Please note there is no data payload in a delete operation. It
        is a common mistake to leave it in while editing scripts.
      </fo:block></fo:block><fo:block id="deleting-server-image-metadata-items-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Deleting Server Image Metadata Items Using Python</fo:marker><fo:block font-size="20.735999999999997pt">Deleting Server Image Metadata Items Using Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Deleting server image metadata items using Python can be done in
        the way shown below:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e913">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Deleting server image metadata items
###

# HTTP connection #2

imgID =​ 1       # server image ID
metaKey =​ "owner"   # metadata key
url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode(json.​dumps({"metadata":{"owner":"adam"}}))
headers2 =​ { "X-Auth-Token":apitoken,​ "Accept":"application/​json",​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("DELETE",​ "%s/​images/​%s/​metadata/​%s" % (apiurlt[2],​ imgID,​ metaKey),​ params2,​ headers2)

# HTTP response #2

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
dd2 =​ json.​loads(data2)

conn2.​close()
</fo:block></fo:block><fo:block id="updating-servers-changing-server-name"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Updating Servers: Changing Server Name</fo:marker><fo:block font-size="20.735999999999997pt">Updating Servers: Changing Server Name</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Contrary to what some users of cloud server think, it is not
        necessary to delete a server and create a new one when you want
        to change something about it. Some small modifications, like
        changing server name or server access address can be done
        without such drastic measures.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you want to change the server name, you will need to use a
        PUT request directed at <fo:inline font-style="italic">/servers/id</fo:inline>, where
        <fo:inline font-weight="bold">id</fo:inline> is the numeric ID of the
        server you wish to update. You need to include a JSON payload:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e920">
{
  "server" : {
    "name" : "nginx000"
  }
}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you were to use <fo:inline font-weight="bold">curl</fo:inline> to
        change the server name, this is how you can do it:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e923">
$ curl -X PUT -H "X-Auth-Token:999888777666" -H "Accept: application/​json" -d '{"server": {"name": "nginx000"}}' http:/​/​localhost:8774/​v1.​1/​openstack/​servers/​1
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The response to this request will be a long JSON string similar
        to the one you get when you create a new server.
      </fo:block></fo:block><fo:block id="updating-servers-changing-server-name-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Updating Servers: Changing Server Name Using Python</fo:marker><fo:block font-size="20.735999999999997pt">Updating Servers: Changing Server Name Using Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e927">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Changing server name
###

# HTTP connection #2

imgID =​ 1       # server image ID
srvName =​ "nginx000"    # server name
url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode(json.​dumps({"server": {"name":srvName}}))
headers2 =​ { "X-Auth-Token":apitoken,​ "Accept":"application/​json",​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("DELETE",​ "%s/​servers/​%s" % (apiurlt[2],​ imgID),​ params2,​ headers2)

# HTTP response #2

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
dd2 =​ json.​loads(data2)

conn2.​close()

print dd2
</fo:block></fo:block><fo:block id="updating-servers-changing-server-access-address"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Updating Servers: Changing Server Access Address</fo:marker><fo:block font-size="20.735999999999997pt">Updating Servers: Changing Server Access Address</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you want to change server access IPv4 and/or IPv6, you can do
        it using a PUT request directed at
        <fo:inline font-style="italic">/servers/id</fo:inline>, where
        <fo:inline font-weight="bold">id</fo:inline> is the numeric ID of the
        server you wish to update. You need to include a JSON payload:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e933">
{
  "server" : {
    "accessIPv4" : "192.​168.​100.​2",​
    "accessIPv6" : "fe80:0:0:0:0:0:c0a8:6402"
  }
}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you were to use <fo:inline font-weight="bold">curl</fo:inline> to
        change the server access addresses, this is how you can do it:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e936">
$ curl -X PUT -H "X-Auth-Token:999888777666" -H "Accept: application/​json" -d '{"server": {"accessIPv4": "192.​168.​100.​2",​ "accessIPv6": "fe80:0:0:0:0:0:c0a8:6402"}}' http:/​/​localhost:8774/​v1.​1/​openstack/​servers/​1
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The response to this request will be a long JSON string similar
        to the one you get when you create a new server.
      </fo:block></fo:block><fo:block id="updating-servers-changing-server-access-address-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Updating Servers: Changing Server Access Address Using
      Python</fo:marker><fo:block font-size="20.735999999999997pt">Updating Servers: Changing Server Access Address Using
      Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you want to use Python to change server access IP addresses,
        you could start with the following script:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e941">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Changing server name
###

# HTTP connection #2

imgID =​ 1               # server image ID
srvIPv4 =​ "192.​168.​100.​2"       # server access IPv4
srvIPv6 =​ "fe80:0:0:0:0:0:c0a8:6402"    # server access IPv6
url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode(json.​dumps({"server": {"accessIPv4": srvIPv4,​ "accessIPv6": srvIPv6}}))
headers2 =​ { "X-Auth-Token":apitoken,​ "Accept":"application/​json",​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("DELETE",​ "%s/​servers/​%s" % (apiurlt[2],​ imgID),​ params2,​ headers2)

# HTTP response #2

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
dd2 =​ json.​loads(data2)

conn2.​close()

print dd2
</fo:block></fo:block><fo:block id="changing-root-administrator-password"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Changing Root (Administrator) Password</fo:marker><fo:block font-size="20.735999999999997pt">Changing Root (Administrator) Password</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The <fo:inline font-weight="bold">root</fo:inline>
        (<fo:inline font-weight="bold">Administrator</fo:inline>) password is
        the most important of all passwords on any server. You should
        never log in as <fo:inline font-weight="bold">root</fo:inline> or
        <fo:inline font-weight="bold">Administrator</fo:inline>, but you
        sometimes have to do it for basic initial administrative tasks
        like adding users, setting up
        <fo:inline font-weight="bold">sudo</fo:inline> priviledges, etc. Your
        cloud infrastructure provider will most likely provide a web
        interface for changing the
        <fo:inline font-weight="bold">root</fo:inline> password, but you can
        also do it via the OpenStack Compute API.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        What you need to do is use a POST request directed at
        <fo:inline font-style="italic">/servers/id/action</fo:inline>, where
        <fo:inline font-weight="bold">id</fo:inline> is the numeric server ID.
        You also need to include a payload with the description of the
        action you want to perform on your server
        (<fo:inline font-weight="bold">changePassword</fo:inline>), the
        parameters of those actions, and their values. It has to be a
        JSON dictionary structure:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e955">
{
  "changePassword" : {
    "adminPass" : "dontusesshhhforpassword"
  }
}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you want to use <fo:inline font-weight="bold">curl</fo:inline> to
        reset <fo:inline font-weight="bold">root</fo:inline> or
        <fo:inline font-weight="bold">Administrator</fo:inline>, here's how you
        can do it:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e960">
$ curl -s -X POST -H "X-Auth-Token:999888777666" -d '{"changePassword": {"adminPass": "dontusesshhhforpassword"}}' http:/​/​localhost:8774/​v1.​1/​openstack/​servers/​3/​action
</fo:block></fo:block><fo:block id="changing-root-administrator-password-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Changing Root (Administrator) Password Using Python</fo:marker><fo:block font-size="20.735999999999997pt">Changing Root (Administrator) Password Using Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you want to delete a server using Python, here's how it can
        be done:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e964">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Get the list of server IP addresses for a specific network
###

# HTTP connection #2

srvID =​ 1               # server ID number
passStr =​ "dontusesshhhforpassword"

url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode(json.​dumps({"changePassword": {"adminPass": passStr}}))
headers2 =​ { "X-Auth-Token":apitoken,​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("POST",​ "%s/​servers/​%s/​action" % (apiurlt[2],​ srvID),​ params2,​ headers2)

# HTTP response #2

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
conn2.​close()
</fo:block></fo:block><fo:block id="rebooting-servers"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Rebooting Servers</fo:marker><fo:block font-size="20.735999999999997pt">Rebooting Servers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        One of the most common administrative tasks is server reboot.
        You can log into a server as
        <fo:inline font-weight="bold">root</fo:inline>
        (<fo:inline font-weight="bold">Administrator</fo:inline>) and use the
        <fo:inline font-weight="bold">shutdown</fo:inline> command:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e971">
# shutdown -r now
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        But what if you cannot log into the server or when you have a
        couple of dozens of servers to reboot? The answer is a POST
        request directed at <fo:inline font-style="italic">/servers/id/action</fo:inline>,
        where <fo:inline font-weight="bold">id</fo:inline> is the numeric
        server ID. You also need to include a payload with the
        description of the action you want to perform on your server
        (<fo:inline font-weight="bold">reboot</fo:inline>), the parameters of
        those actions, and their values. It has to be a JSON string:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e976">
{
  "reboot" : {
    "type" : "HARD"
  }
}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        There are two types of reboot:
      </fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d6e978"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e979"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            <fo:inline font-weight="bold">HARD</fo:inline> — the equivalent of
            turning power off and on again.
          </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d6e982"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
            <fo:inline font-weight="bold">SOFT</fo:inline> — a gentle kind of
            reboot, think <fo:inline font-weight="bold">shutdown -r
            now</fo:inline>.
          </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you want to use <fo:inline font-weight="bold">curl</fo:inline> to
        reboot a server, you can do it in the following way:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e988">
$ curl -s -X POST -H "X-Auth-Token:999888777666" -d '{"reboot": {"type": "HARD"}}' http:/​/​localhost:8774/​v1.​1/​openstack/​servers/​3/​action
</fo:block></fo:block><fo:block id="rebooting-servers-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Rebooting Servers Using Python</fo:marker><fo:block font-size="20.735999999999997pt">Rebooting Servers Using Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you want to reboot a server using Python, here's how it can
        be done:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e992">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Get the list of server IP addresses for a specific network
###

# HTTP connection #2

srvID =​ 1       # server ID number
rebootType =​ "HARD" # can be either "SOFT" or "HARD"

url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode(json.​dumps({"reboot": {"type": rebootType}}))
headers2 =​ { "X-Auth-Token":apitoken,​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("POST",​ "%s/​servers/​%s/​action" % (apiurlt[2],​ srvID),​ params2,​ headers2)

# HTTP response #2

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
conn2.​close()
</fo:block></fo:block><fo:block id="rebuilding-servers"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Rebuilding Servers</fo:marker><fo:block font-size="20.735999999999997pt">Rebuilding Servers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        When things go wrong, e.g. you log in as
        <fo:inline font-weight="bold">root</fo:inline> and overwrite
        <fo:inline font-style="italic">/bin</fo:inline>, you can simply rebuild the server.
        This operation will delete all data and install a fresh copy of
        the operating system, which does not have to be the system you
        used to create the original server. What you get after
        rebuilding a server is a new machine with the old machine's
        reference URL and IP addresses.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The POST request sent to <fo:inline font-style="italic">/servers/id/action</fo:inline>
        should carry a JSON payload that includes the
        <fo:inline font-weight="bold">rebuild</fo:inline> command, server image
        reference, name,
        <fo:inline font-weight="bold">root</fo:inline>/(<fo:inline font-weight="bold">Administration</fo:inline>)
        password, server metadata, and personalization files. The
        <fo:inline font-weight="bold">id</fo:inline> is the numeric ID of the
        server you want to renuild.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        You do not need to provide the flavor reference, because the
        virtual hardware your rebuilt server will run on does not
        change. If you want to alter that, rebuild your server and
        resize it afterwards (see the next section).
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The following script demonstrates how to rebuild a server using
        Python. I skipped the metadata and personalization setup for
        clarity, but you can find out how to use it if you read earlier
        sections on that subject.
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e1006">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Get server image reference
###

# HTTP connection #2

url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode({})
headers2 =​ { "X-Auth-Token":apitoken,​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("GET",​ "%s/​images" % apiurlt[2],​ params2,​ headers2)

# HTTP response

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
dd2 =​ json.​loads(data2)

conn2.​close()

###
### Server parameters
###

# Server name

sname =​ "tornado001"

# Server image URL

n =​ len(dd2["images"])
m =​ range(n)

for i in m:
    if dd2["images"][i]["id"] =​=​ 1:
        sImageRef =​ dd2["images"][i]["links"][0]["href"]

###
### server metadata
###

sMetadata =​ {}

###
### server personalization
###

sPersonalityPath =​ ""
sPersonalityContents =​ ""
sPersonality =​ [ { "path":sPersonalityPath,​ "contents":base64.​b64encode( sPersonalityContents ) } ]

s =​ { "rebuild": { "name": sname,​ "imageRef": sImageRef,​ "metadata": sMetadata,​ "personality": sPersonality } }

sj =​ json.​dumps(s)

# HTTP connection #3

params3 =​ sj
headers3 =​ { "X-Auth-Token":apitoken,​ "Content-type":"application/​json" }

conn3 =​ httplib.​HTTPConnection("localhost:8774")
conn3.​request("POST",​ "%s/​servers" % apiurlt[2],​ params3,​ headers3)

# HTTP response #3

response3 =​ conn3.​getresponse()
data3 =​ response3.​read()
dd3 =​ json.​loads(data3)

conn3.​close()

print json.​dumps(dd3,​ indent=​2)
</fo:block></fo:block><fo:block id="resizing-servers"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Resizing Servers</fo:marker><fo:block font-size="20.735999999999997pt">Resizing Servers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        When you need more memory or more storage space (or both), you
        can resize the virtual hardware your server runs on.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The POST request sent to <fo:inline font-style="italic">/servers/id/action</fo:inline>
        must carry a simple JSON payload with the name of the operation,
        <fo:inline font-weight="bold">resize</fo:inline>, and the new server
        flavor URL like the one below (it points to the server flavor
        number 5):
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e1013">
{
  "resize": {
    "flavorRef": "http:/​/​localhost:8774/​v1.​1/​openstack/​flavors/​5"
  }
}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you want to use <fo:inline font-weight="bold">curl</fo:inline>, the
        server resize request would look like this:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e1016">
$ curl -s -X POST -H "X-Auth-Token:999888777666" -d '{"resize": {"flavorRef": "http:/​/​localhost:8774/​v1.​1/​openstack/​flavors/​5"}}' http:/​/​localhost:8774/​v1.​1/​openstack/​servers/​3/​action
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        It is possible to resize your server down, but it is up to you
        to make sure that your data fits on the new, smaller disks.
      </fo:block></fo:block><fo:block id="resizing-servers-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Resizing Servers Using Python</fo:marker><fo:block font-size="20.735999999999997pt">Resizing Servers Using Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The following example shows how to resize a server using Python.
        It looks more complex than the
        <fo:inline font-weight="bold">curl</fo:inline> example, but that's only
        because it also shows how to exrtact the flavor URL:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e1022">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Resize a server
###

# HTTP connection #2

srvID =​ 1       # server ID number
flavorID =​ 3        # flavor ID number

url2 =​ apiurlt[1]

# Flavor URL

# HTTP connection #2

params2 =​ urllib.​urlencode({})
headers2 =​ { "X-Auth-Token":apitoken,​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("GET",​ "%s/​flavors" % apiurlt[2],​ params2,​ headers2)

# HTTP response #2

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
dd2 =​ json.​loads(data2)

conn2.​close()

n =​ len(dd2["flavors"])
m =​ range(n)

for i in m:
    if dd2["flavors"][i]["id"] =​=​ flavorID:
        sFlavorRef =​ dd2["flavors"][i]["links"][0]["href"]

# HTTP connection #3

params3 =​ urllib.​urlencode(json.​dumps({"resize": {"flavorRef": sFlavorRef}}))
headers3 =​ { "X-Auth-Token":apitoken,​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn3 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn3 =​ httplib.​HTTPConnection(url2)

conn3.​request("POST",​ "%s/​servers/​%s/​action" % (apiurlt[2],​ srvID),​ params3,​ headers3)

# HTTP response #3

response3 =​ conn3.​getresponse()
data3 =​ response3.​read()
conn3.​close()
</fo:block></fo:block><fo:block id="confirming-server-resize"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Confirming Server Resize</fo:marker><fo:block font-size="20.735999999999997pt">Confirming Server Resize</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The OpenStack Compute cloud will wait for 24 hours before making
        changes permanent. This gives you a chance to test things and go
        back to the old flavor if needed. It is up to you if you want to
        confirm the resize, the OpenStack Compute cloud will do it
        anyway after 24 hours, but if you are happy, you can do it by
        sending a POST request to
        <fo:inline font-style="italic">/servers/id/action</fo:inline>. The
        <fo:inline font-weight="bold">id</fo:inline> parameter is the numeric
        ID of the server you resized.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Don't forget the JSON payload:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e1029">
{
  "confirmResize": null
}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you want to use <fo:inline font-weight="bold">curl</fo:inline>, the
        server resize request would look like this:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e1032">
$ curl -s -X POST -H "X-Auth-Token:999888777666" -d '{"confirmResize": null}' http:/​/​localhost:8774/​v1.​1/​openstack/​servers/​3/​action
</fo:block></fo:block><fo:block id="confirming-server-resize-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Confirming Server Resize Using Python</fo:marker><fo:block font-size="20.735999999999997pt">Confirming Server Resize Using Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you want to use Python to confirm server resize, use this as
        your inspiration:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e1036">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Confirm server resize
###

# HTTP connection #2

srvID =​ 1       # server ID number

url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode(json.​dumps({"confirmResize": null}))
headers2 =​ { "X-Auth-Token":apitoken,​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("POST",​ "%s/​servers/​%s/​action" % (apiurlt[2],​ srvID),​ params2,​ headers2)

# HTTP response #2

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
conn2.​close()
</fo:block></fo:block><fo:block id="reverting-server-resize"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Reverting Server Resize</fo:marker><fo:block font-size="20.735999999999997pt">Reverting Server Resize</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you are not happy with your reszied server, you can revert to
        the old flavor using the
        <fo:inline font-weight="bold">revertResize</fo:inline> command.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        You can do it by sending a POST request to
        <fo:inline font-style="italic">/servers/id/action</fo:inline>. The
        <fo:inline font-weight="bold">id</fo:inline> parameter is the numeric
        ID of the server you resized.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Don't forget the JSON payload:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e1045">
{
  "revertResize": null
}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you want to use <fo:inline font-weight="bold">curl</fo:inline>, the
        server resize request would look like this:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e1048">
$ curl -s -X POST -H "X-Auth-Token:999888777666" -d '{"revertResize": null}' http:/​/​localhost:8774/​v1.​1/​openstack/​servers/​3/​action
</fo:block></fo:block><fo:block id="reverting-server-resize-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Reverting Server Resize Using Python</fo:marker><fo:block font-size="20.735999999999997pt">Reverting Server Resize Using Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you want to use Python to revert server resize, use this as
        your inspiration:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e1052">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Revert server resize
###

# HTTP connection #2

srvID =​ 1       # server ID number

url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode(json.​dumps({"revertResize": null}))
headers2 =​ { "X-Auth-Token":apitoken,​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("POST",​ "%s/​servers/​%s/​action" % (apiurlt[2],​ srvID),​ params2,​ headers2)

# HTTP response #2

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
conn2.​close()
</fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="zh" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-first"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-odd"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-even"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-blank"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="server-images"><fo:block font-family="AR-PL-New-Sung"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" font-family="AR-PL-New-Sung" color="rgb(196,0,34)" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">第 6 章 Server Images</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
      Servers can be created using default templates, but you can also
      create your own server images that will be later reused to quickly
      replicate your working setup. Server images preserve the
      customiztions and the data from the original server. This allows
      you to pre-load one server with data and replicate it to divide
      the data processing job between as many machines as you need.
    </fo:block><fo:block id="creating-server-images"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Creating Server Images</fo:marker><fo:block font-size="20.735999999999997pt">Creating Server Images</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The server image creation operation is quite simple, all you
        need to do is send a POST request to
        <fo:inline font-style="italic">/servers/id/action</fo:inline>. The
        <fo:inline font-weight="bold">id</fo:inline> is the numeric ID of the
        server that you want to preserve.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The JSON payload that accompanies the
        <fo:inline font-weight="bold">createImage</fo:inline> command must
        include the name of the server image and optional metadata. That
        metadata is independent of the server metadata.
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e1063">
{
  "createImage": {
    "name": "tornado-app-server",​
    "metadata": {
      "version": "1.​0.​0",​
      "creator": "joe"
    }
      }
}
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you want to use <fo:inline font-weight="bold">curl</fo:inline>, the
        server image creation request would look like this:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e1066">
$ curl -s -X POST -H "X-Auth-Token:999888777666" -d '{"createImage": {"name": "tornado-app-server",​ "metadata": {"version": "1.​0.​0",​ "creator": "joe"}}}' http:/​/​localhost:8774/​v1.​1/​openstack/​servers/​3/​action
</fo:block></fo:block><fo:block id="creating-server-images-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Creating Server Images Using Python</fo:marker><fo:block font-size="20.735999999999997pt">Creating Server Images Using Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you want to use Python to to create a server image, use this
        as your inspiration:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e1070">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Revert server resize
###

# HTTP connection #2

srvID =​ 1               # server ID number
imgName =​ "tornado-app-server"
metaDict =​ {"version": "1.​0.​0",​ "creator": "joe"}

url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode(json.​dumps({"createImage": {"name": imgName,​ "metadata": metaDict}}))
headers2 =​ { "X-Auth-Token":apitoken,​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("POST",​ "%s/​servers/​%s/​action" % (apiurlt[2],​ srvID),​ params2,​ headers2)

# HTTP response #2

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
conn2.​close()
</fo:block></fo:block><fo:block id="deleting-servers"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Deleting Servers</fo:marker><fo:block font-size="20.735999999999997pt">Deleting Servers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        When a server is no longer necessary you can simply delete it.
        One REST call and the server is gone. You will need to add the
        server <fo:inline font-weight="bold">id</fo:inline> number after
        <fo:inline font-style="italic">/servers</fo:inline> and you must use the DELETE
        method, as in:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e1076">
$ curl -s -X DELETE -H "X-Auth-Token:999888777666" http:/​/​localhost:8774/​v1.​1/​openstack/​servers/​3
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The OpenStack Compute API server will not return a JSON object
        when the operation is successful, but it will return an error
        message when the server you are trying to delete does not exist:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e1078">
{
  "itemNotFound": {
    "message": "The resource could not be found.​",​ 
    "code": 404
  }
}
</fo:block></fo:block><fo:block id="deleting-servers-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Deleting Servers Using Python</fo:marker><fo:block font-size="20.735999999999997pt">Deleting Servers Using Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        When you use Python, server deletion procedure can be done in a
        fairly simple way:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e1082">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Get the list of server IP addresses for a specific network
###

# HTTP connection #2

srvID =​ 1       # server ID number
url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode({})
headers2 =​ { "X-Auth-Token":apitoken,​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("GET",​ "%s/​servers/​%s/​delete" % (apiurlt[2],​ srvID),​ params2,​ headers2)

# HTTP response #2

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
conn2.​close()
</fo:block></fo:block><fo:block id="deleting-server-images"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Deleting Server Images</fo:marker><fo:block font-size="20.735999999999997pt">Deleting Server Images</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        When a server image is no longer necessary you can get rid of
        it. You will need to send a DELETE request to
        <fo:inline font-style="italic">/servers/id</fo:inline>, where
        <fo:inline font-weight="bold">id</fo:inline> is the numeric ID of the
        server image you want to remove:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e1088">
$ curl -s -X DELETE -H "X-Auth-Token:999888777666" http:/​/​localhost:8774/​v1.​1/​openstack/​images/​3
</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The OpenStack Compute API server will not return a JSON object
        when the operation is successful, but it will return an error
        message when the server you are trying to delete does not exist:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e1090">
{
  "itemNotFound": {
    "message": "The resource could not be found.​",​ 
    "code": 404
  }
}
</fo:block></fo:block><fo:block id="deleting-servers-images-using-python"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="AR-PL-New-Sung"><fo:block keep-with-next.within-column="always"><fo:block font-family="AR-PL-New-Sung" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt" color="rgb(196,0,34)"><fo:marker marker-class-name="section.head.marker">Deleting Servers Images Using Python</fo:marker><fo:block font-size="20.735999999999997pt">Deleting Servers Images Using Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        When you use Python, server image deletion procedure can be done
        in a fairly simple way:
      </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e1094">
#!/​usr/​bin/​python

import base64
import urllib
import httplib
import json
import os
from urlparse import urlparse

### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--
###
###  insert the 'Get OpenStack Credentials' snippet here
###
### --8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--8&lt;--

###
### Delete server image
###

# HTTP connection #2

srvID =​ 1       # server ID number
url2 =​ apiurlt[1]
params2 =​ urllib.​urlencode({})
headers2 =​ { "X-Auth-Token":apitoken,​ "Content-type":"application/​json" }

if (usehttps =​=​ True):
    conn2 =​ httplib.​HTTPSConnection(url2,​ key_file=​'.​.​/​cert/​priv.​pem',​ cert_file=​'.​.​/​cert/​srv_test.​crt')
else:
    conn2 =​ httplib.​HTTPConnection(url2)

conn2.​request("DELETE",​ "%s/​images/​%s" % (apiurlt[2],​ srvID),​ params2,​ headers2)

# HTTP response #2

response2 =​ conn2.​getresponse()
data2 =​ response2.​read()
conn2.​close()
</fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="zh" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-first"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-odd"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-even"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block>Programming OpenStack Compute API编程</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Mar 21, 2012</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block>1.1</fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns:exslt="http://exslt.org/common" flow-name="xsl-region-before-blank"><fo:block-container reference-orientation="90" absolute-position="fixed" top="-1in" overflow="visible" height="2in" width="30in" z-index="1"><fo:block padding-before=".45in" font-size="1.5em" color="gray" font-weight="bold"><fo:leader leader-pattern="use-content" leader-length="30in" letter-spacing=".1em">  </fo:leader></fo:block></fo:block-container><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="AR-PL-New-Sung" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block xmlns:exslt="http://exslt.org/common"/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="additional-tools"><fo:block font-family="AR-PL-New-Sung"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" font-family="AR-PL-New-Sung" color="rgb(196,0,34)" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">第 7 章 Additional Tools</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
      A while ago I wrote a simple tool for pretty-printing JSON data.
      Over time I found it handy to have around when working with
      various applications and services that generate JSON output. You
      might find it handy when you are working with JSON. Here it is:
    </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" font-size="85%" hyphenation-character="\" background-color="#E0E0E0" id="d6e1098">
#!/​usr/​bin/​python

import sys
import json

def main():

        try:

                data =​ sys.​stdin.​readline()
                dd =​ json.​loads(data)

        except:

                sys.​stderr.​write("Error: %s" % str(sys.​exc_info()[0]))
                sys.​stderr.​write("\​nI got no data,​ badly formatted JSON,​ or something that is not JSON.​")

                sys.​exit()

        print json.​dumps(dd,​ indent=​2)

if __name__ =​=​ "__main__":
    main()
</fo:block></fo:flow></fo:page-sequence></fo:root>