<?xml version="1.0" encoding="UTF-8"?>
<para xmlns="http://docbook.org/ns/docbook" version="5.0">
    <table rules="all">
        <caption>Description of nova.conf log file configuration
            options </caption>
        <col width="50%"/>
        <col width="50%"/>
        <thead>
            <tr>
                <td>Configuration option=Default value</td>
                <td>(Type) Description</td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    default_log_levels=<?sbr?>"amqplib=WARN,sqlalchemy=WARN,boto=WARN,suds=INFO,eventlet.wsgi.server=WARN" </td>
                <td> (ListOpt) list of logger=LEVEL pairs </td>
            </tr>
            <tr>
                <td> instance_format=[instance: %(uuid)s]  </td>
                <td> (StrOpt) If an instance is passed with the log
                    message, format it like this </td>
            </tr>
            <tr>
                <td> instance_uuid_format=[instance: %(uuid)s]  </td>
                <td> (StrOpt) If an instance UUID is passed with the
                    log message, format it like this </td>
            </tr>
            <tr>
                <td> logging_context_format_string="%(asctime)s
                    %(levelname)s %(name)s [%(request_id)s %(user_id)s
                    %(project_id)s] %(instance)s%(message)s" </td>
                <td> (StrOpt) format string to use for log messages
                    with context </td>
            </tr>
            <tr>
                <td> logging_debug_format_suffix="from
                    (pid=%(process)d) %(funcName)s
                    %(pathname)s:%(lineno)d" </td>
                <td> (StrOpt) data to append to log format when level
                    is DEBUG </td>
            </tr>
            <tr>
                <td> logging_default_format_string="%(asctime)s
                    %(levelname)s %(name)s [-]
                    %(instance)s%(message)s" </td>
                <td> (StrOpt) format string to use for log messages
                    without context </td>
            </tr>
            <tr>
                <td> logging_exception_prefix="%(asctime)s TRACE
                    %(name)s %(instance)s" </td>
                <td> (StrOpt) prefix each line of exception output
                    with this format </td>
            </tr>
            <tr>
                <td> publish_errors=false </td>
                <td> (BoolOpt) publish error events </td>
            </tr>
        </tbody>
    </table>
</para>
