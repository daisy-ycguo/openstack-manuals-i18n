<?xml version="1.0" encoding="UTF-8"?>
<para xmlns= "http://docbook.org/ns/docbook" version= "5.0">
<table rules= "all">
    <caption>Description of nova.conf file configuration options
        for schedulers that use algorithms to assign VM launch on
        particular compute hosts</caption>
    <col width= "50%"/>
    <col width= "50%"/>
    <thead>
        <tr>
            <td><para>Configuration option=Default value</para></td>
            <td><para>(Type) Description</para></td>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td><para>
                scheduler_host_manager=nova.scheduler.host_manager.HostManager </para></td>
            <td><para> (StrOpt) The scheduler host manager class to use
            </para></td>
        </tr>
        <tr>
            <td><para> cpu_allocation_ratio=16.0 </para></td>
            <td><para> (FloatOpt) Virtual CPU to Physical CPU allocation
                ratio </para></td>
        </tr>
        <tr>
            <td><para> ram_allocation_ratio=1.5 </para></td>
            <td><para> (FloatOpt) virtual ram to physical ram allocation
                ratio </para></td>
        </tr>
        <tr>
            <td><para> reserved_host_disk_mb=0 </para></td>
            <td><para> (IntOpt) Amount of disk in MB to reserve for
                host/dom0 </para></td>
        </tr>
        <tr>
            <td><para> reserved_host_memory_mb=512 </para></td>
            <td><para> (IntOpt) Amount of memory in MB to reserve for
                host/dom0 </para></td>
        </tr>
        <tr>
            <td><para>
                scheduler_available_filters=nova.scheduler.filters.standard_filters </para></td>
            <td><para> (MultiStrOpt) Filter classes available to the
                scheduler which may be specified more than once.
                An entry of
                "nova.scheduler.filters.standard_filters" maps to
                all filters included with nova. </para></td>
        </tr>
        <tr>
            <td><para>
                scheduler_default_filters=AvailabilityZoneFilter,RamFilter,ComputeFilter </para></td>
            <td><para> (ListOpt) Which filter class names to use for
                filtering hosts when not specified in the request.
            </para></td>
        </tr>
        <tr>
            <td><para> compute_fill_first_cost_fn_weight=-1.0 </para></td>
            <td><para> (FloatOpt) How much weight to give the fill-first
                cost function. A negative value will reverse
                behavior: e.g. spread-first </para></td>
        </tr>
        <tr>
            <td><para>
                least_cost_functions=nova.scheduler.least_cost.compute_fill_first_cost_fn </para></td>
            <td><para> (ListOpt) Which cost functions the
                LeastCostScheduler should use </para></td>
        </tr>
        <tr>
            <td><para> noop_cost_fn_weight=1.0 </para></td>
            <td><para> (FloatOpt) How much weight to give the noop cost
                function </para></td>
        </tr>
        <tr>
            <td><para>
                scheduler_driver=nova.scheduler.multi.MultiScheduler </para></td>
            <td><para> (StrOpt) Default driver to use for the scheduler
            </para></td>
        </tr>
        <tr>
            <td><para>
                compute_scheduler_driver=nova.scheduler.filter_scheduler.FilterScheduler </para></td>
            <td><para> (StrOpt) Driver to use for scheduling compute
                calls </para></td>
        </tr>
        <tr>
            <td><para>
                volume_scheduler_driver=nova.scheduler.chance.ChanceScheduler </para></td>
            <td><para> (StrOpt) Driver to use for scheduling volume
                calls </para></td>
        </tr>
        
        
        <tr>
            <td><para> scheduler_json_config_location= </para></td>
            <td><para> (StrOpt) Absolute path to scheduler configuration
                JSON file. </para></td>
        </tr>
        
        
        <tr>
            <td><para> max_cores=16 </para></td>
            <td><para> (IntOpt) maximum number of instance cores to
                allow per host </para></td>
        </tr>
        <tr>
            <td><para> max_gigabytes=10000 </para></td>
            <td><para> (IntOpt) maximum number of volume gigabytes to
                allow per host </para></td>
        </tr>
        <tr>
            <td><para> max_networks=1000 </para></td>
            <td><para> (IntOpt) maximum number of networks to allow per
                host </para></td>
        </tr>
        <tr>
            <td><para> skip_isolated_core_check=true </para></td>
            <td><para> (BoolOpt) Allow overcommitting vcpus on isolated
                hosts </para></td>
        </tr>
    </tbody>
</table>
</para>
