# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: OpenStack Manuals\n"
"POT-Creation-Date: 2012-07-16 10:31+0800\n"
"PO-Revision-Date: 2012-07-16 02:33+0000\n"
"Last-Translator: daisy.ycguo <daisy.ycguo@gmail.com>\n"
"Language-Team: Japanese (http://www.transifex.com/projects/p/openstack-manuals-i18n/language/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0\n"

#: ./doc/src/docbkx/api-quick-start/src/docbkx/cli-uses.xml7(title)
msgid "Setting Up python-novaclient"
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/cli-uses.xml9(para)
msgid ""
"For more serious scripting work, you can use a client like the python-"
"novaclient or openstack-compute clients. The python-novaclient implements "
"the Compute 1.1 API while the openstack-compute client works against the "
"Rackspace Cloud Servers public cloud which is the OpenStack Compute 1.0 API."
" You only need a username and password to use the python-novaclient tool."
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/cli-uses.xml10(para)
msgid ""
"Installing the python-novaclient gives you a <code>nova</code> shell command"
" that enables Compute API interactions from the command line. You install "
"the client, and then provide your username and password, set as environment "
"variables for convenience, and then you can have the ability to send "
"commands to your cloud on the command-line."
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/cli-uses.xml14(para)
msgid "To install python-novaclient, grab the stable/nova version like so."
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/cli-uses.xml19(para)
msgid ""
"Now that you have installed the python-novaclient, confirm the installation "
"by entering:"
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/cli-uses.xml29(para)
msgid ""
"In return, you will get a listing of all the commands and parameters for the"
" nova command line client. By setting up the required parameters as "
"environment variables, you can fly through these commands on the command "
"line. You can add --os_username on the nova command, or set them as "
"environment variables. When using TryStack, you are supplied with an "
"endpoint, which the nova client recognizes as the NOVA_URL. On TryStack, you"
" can retrieve these environment variables at "
"https://trystack.org/dash/api_info/ after logging in."
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/cli-uses.xml47(title)
msgid "Listing Images"
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/cli-uses.xml47(para)
msgid ""
"Before you can go about the business of building your cloud, you want to "
"know what images are available to you by asking the image service what kinds"
" of configurations are available. The image service could be compared to "
"iTunes for your cloud - you can view the playlist of images before using "
"your favorite image to create a new instance in the cloud. To get the list "
"of images, their names, status, and ID, use this command: <placeholder-1/>"
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/cli-uses.xml67(para)
msgid "Next you need to know the relative sizes of each of these."
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/cli-uses.xml81(para)
msgid ""
"You can also narrow down the list by using grep to find only the Ubuntu "
"11.04 images with a command like this:"
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/cli-uses.xml92(para)
msgid ""
"With the information about what is available to you, you can choose the "
"combination of image and flavor to create your virtual servers and launch "
"instances."
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/cli-uses.xml93(title)
msgid "Launching Instances"
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/cli-uses.xml105(para)
msgid ""
"When using an endpoint that supports 1.1 of the Compute API, you can launch "
"instances with an ID. When using an endpoint that supports v2 of the Compute"
" API, you must use the UUID to launch an instance."
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/cli-uses.xml95(para)
msgid ""
"To launch a server, you choose an image you want to match up to a size, find"
" the ID for the image and the ID for the flavor so you can size it, and "
"create the command with the IDs. From the information we got previously, we "
"know that an Ubuntu Natty image has an ID of 13, and if you want to start "
"small with about 2 GB of memory and 20 GB of disk space, you'd choose the "
"m1.small flavor which has an ID of 2 when using the 1.1 API on TryStack. Put"
" those parameters in with the \"boot\" command and you can create a new "
"virtual server. <placeholder-1/>"
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/cli-uses.xml133(para)
msgid ""
"Now, you can view this server in your new cloud by using the nova list "
"command:<placeholder-1/>"
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/cli-uses.xml143(para)
msgid ""
"There are three statuses you may see - ACTIVE, BUILDING, and UNKNOWN. The "
"BUILDING status is transient and you likely will not see it. If you see "
"UNKNOWN, run <code>nova list</code> again until it goes away."
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/cli-uses.xml144(para)
msgid ""
"To view all the information about a particular server, use nova show with "
"the ID of the server that you got from the nova list command."
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/cli-uses.xml166(para)
msgid ""
"You can now launch that image again, but add more information to the server "
"when you boot it so that you can more easily identify it amongst your ever-"
"growing elastic cloud. Use the -meta option with a key=value pair, where you"
" can make up the string for both the key and the value. For example, you "
"could add a description and also the creator of the server. <placeholder-1/>"
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/api-quick-start-intro.xml6(title)
#: ./doc/src/docbkx/api-quick-start/src/docbkx/api-quick-start-onepager.xml9(title)
msgid "OpenStack API Quick Start"
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/api-quick-start-intro.xml7(para)
msgid ""
"The OpenStack system has several key projects that are separate "
"installations but can work together depending on your cloud needs: OpenStack"
" Compute, OpenStack Object Storage, OpenStack Identity Service, and "
"OpenStack Image Store. With the TryStack OpenStack installation, the "
"OpenStack Compute, OpenStack Identity, and OpenStack Image Store projects "
"are all working together in the background of the installation."
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/api-quick-start-intro.xml16(title)
msgid "OpenStack API Introduction"
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/api-quick-start-intro.xml17(para)
msgid ""
"This page covers the basics for talking to your OpenStack cloud through the "
"Compute API after authorizing with the Identity Service API. You can then "
"build a cloud by launching images and assigning metadata to instances, all "
"through the API. For an API reference of all the possible commands, see the "
"<link href=\"http://docs.openstack.org/api/openstack-"
"compute/1.1/content/\">OpenStack Compute API 1.1 specification</link> and "
"the <link href=\"http://docs.openstack.org/api/openstack-identity-"
"service/2.0/content/\">Identity Service 2.0 specification</link> published "
"at <link "
"href=\"http://docs.openstack.org/api\">docs.openstack.org/api</link>."
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/api-quick-start-intro.xml32(title)
msgid "Getting Credentials"
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/api-quick-start-intro.xml33(para)
msgid ""
"Credentials are a combination of your username, password, and what tenant "
"(or project) your cloud is running under. You only need to generate an "
"additional token if you are interacting with your cloud directly with API "
"endpoints, and not with a client. Your cloud administrator can give you a "
"username and a password as well as your tenant identifier so you can "
"generate authorization tokens. You can also get the tenant ID from the "
"Dashboard URLs, for example https://trystack.org/dash/296/images/ indicates "
"a tenant ID of 296."
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/api-quick-start-intro.xml44(para)
msgid ""
"These tokens are typically good for 24 hours, and when the token expires, "
"you will find out with a 401 (Unauthorized) error and can request another "
"token programmatically. The general workflow goes something like this:"
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/api-quick-start-intro.xml51(para)
msgid ""
"Begin API requests by asking for an authorization token from the endpoint "
"your cloud administrator gave you, typically "
"http://hostname:port/v2.0/tokens. You send your username, password, and what"
" group or account you are with (the \"tenant\" in auth-speak)."
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/api-quick-start-intro.xml60(para)
msgid ""
"The server returns a response in which the 24-hours token is contained. Use "
"that token to send API requests with the X-Auth-Token included as an header "
"field."
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/api-quick-start-intro.xml68(para)
msgid ""
"Repeatedly send API requests with that token in the x-auth-token header "
"until either: 1) the job's done or 2) you get a 401 (Unauthorized) code in "
"return."
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/api-quick-start-intro.xml74(para)
msgid ""
"Request a token again when you get a 401 response until the script's job is "
"done."
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/api-quick-start-intro.xml79(para)
msgid ""
"For a typical OpenStack deployment running the Identity Service you can "
"request a token with this command in cURL:<placeholder-1/>"
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/api-quick-start-intro.xml84(para)
msgid ""
"In return, you should get a 200 OK response with a token in the form of "
"\"id\": \"cd427a33-bb4a-4079-a6d7-0ae148bdeda9\" and an expiration date 24 "
"hours from now. Here's what it looks like:"
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/api-quick-start-intro.xml155(title)
msgid "Sending Requests to the API"
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/api-quick-start-intro.xml156(para)
msgid ""
"You have a couple of options for sending requests to OpenStack through an "
"API. Developers and testers may prefer to use cURL, the command-line tool "
"from <link href=\"http://curl.haxx.se/\">http://curl.haxx.se/</link>. With "
"cURL you can send HTTP requests and receive responses back from the command "
"line."
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/api-quick-start-intro.xml163(para)
msgid ""
"If you like to use a more graphical interface, the REST client for Firefox "
"also works well for testing and trying out commands, see <link "
"href=\"https://addons.mozilla.org/en-"
"US/firefox/addon/restclient/\">https://addons.mozilla.org/en-"
"US/firefox/addon/restclient/</link>. You can also download and install rest-"
"client, a Java application to test RESTful web services, from <link "
"href=\"http://code.google.com/p/rest-client/\">http://code.google.com/p"
"/rest-client/</link>."
msgstr ""

#: ./doc/src/docbkx/api-quick-start/src/docbkx/api-quick-start-intro.xml172(para)
msgid ""
"You need to generate a token as shown above if you use cURL or a REST "
"client."
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: ./doc/src/docbkx/api-quick-start/src/docbkx/api-quick-start-onepager.xml0(None)
msgid "translator-credits"
msgstr ""
